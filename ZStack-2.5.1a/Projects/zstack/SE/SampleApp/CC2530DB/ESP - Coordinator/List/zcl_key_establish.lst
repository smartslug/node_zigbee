###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.3.10338/W32 for 8051         05/Aug/2016  10:44:44 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  G:\»ªÖÚÎÞÏß\12.´®¿ÚÍ¸´«Ö®ÎÞÏßQQ\ZStack-2.5.1a\Comp #
#                          onents\stack\zcl\zcl_key_establish.c               #
#    Command line       =  -f G:\»ªÖÚÎÞÏß\12.´®¿ÚÍ¸´«Ö®ÎÞÏßQQ\ZStack-2.5.1a\P #
#                          rojects\zstack\SE\SampleApp\CC2530DB\..\..\..\Tool #
#                          s\CC2530DB\f8wCoord.cfg (-DCPU32MHZ                #
#                          -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TRU #
#                          E -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8       #
#                          -DMAC_CFG_RX_MAX=5 -DZDO_COORDINATOR -DRTR_NWK)    #
#                          -f G:\»ªÖÚÎÞÏß\12.´®¿ÚÍ¸´«Ö®ÎÞÏßQQ\ZStack-2.5.1a\P #
#                          rojects\zstack\SE\SampleApp\CC2530DB\..\..\..\Tool #
#                          s\CC2530DB\f8wConfig.cfg (-DZIGBEEPRO -DSECURE=0   #
#                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                  #
#                          -DDEFAULT_CHANLIST=0x02000000                      #
#                          -DZDAPP_CONFIG_PAN_ID=0x1688                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100    #
#                          -DREJOIN_POLL_RATE=440) -f                         #
#                          G:\»ªÖÚÎÞÏß\12.´®¿ÚÍ¸´«Ö®ÎÞÏßQQ\ZStack-2.5.1a\Proj #
#                          ects\zstack\SE\SampleApp\CC2530DB\..\..\..\Tools\C #
#                          C2530DB\f8wZCL.cfg (-DZCL_READ -DZCL_WRITE         #
#                          -DZCL_BASIC -DZCL_IDENTIFY -DZCL_ON_OFF            #
#                          -DZCL_KEY_ESTABLISH -DZCL_KEY_ESTABLISHMENT_KEY_GE #
#                          NERATE_TIMEOUT=4 -DZCL_KEY_ESTABLISHMENT_MAC_GENER #
#                          ATE_TIMEOUT=10 -DZCL_KEY_ESTABLISHMENT_EKEY_GENERA #
#                          TE_TIMEOUT=10 -DZCL_LOAD_CONTROL                   #
#                          -DZCL_SIMPLE_METERING -DZCL_PRICING -DZCL_MESSAGE  #
#                          -DZCL_TUNNELING -DZCL_TOU) -DZCL_DEVICE_MGMT       #
#                          G:\»ªÖÚÎÞÏß\12.´®¿ÚÍ¸´«Ö®ÎÞÏßQQ\ZStack-2.5.1a\Comp #
#                          onents\stack\zcl\zcl_key_establish.c -D            #
#                          TC_LINKKEY_JOIN -D ZTOOL_P1 -D MT_TASK -D          #
#                          MT_APP_FUNC -D MT_SYS_FUNC -D LCD_SUPPORTED -D     #
#                          INT_HEAP_LEN=2450 -D NV_INIT -D xNV_RESTORE -D     #
#                          ZCL_REPORT -D INTER_PAN -D                         #
#                          ZDSECMGR_TC_DEVICE_MAX=16 -D TEST_CERT_DATA -lC    #
#                          "G:\»ªÖÚÎÞÏß\12.´®¿ÚÍ¸´«Ö®ÎÞÏßQQ\ZStack-2.5.1a\Pro #
#                          jects\zstack\SE\SampleApp\CC2530DB\ESP -           #
#                          Coordinator\List\" -lA "G:\»ªÖÚÎÞÏß\12.´®¿ÚÍ¸´«Ö®Î #
#                          ÞÏßQQ\ZStack-2.5.1a\Projects\zstack\SE\SampleApp\C #
#                          C2530DB\ESP - Coordinator\List\" --diag_suppress   #
#                          Pe001,Pa010 -o "G:\»ªÖÚÎÞÏß\12.´®¿ÚÍ¸´«Ö®ÎÞÏßQQ\ZS #
#                          tack-2.5.1a\Projects\zstack\SE\SampleApp\CC2530DB\ #
#                          ESP - Coordinator\Obj\" -e --no_code_motion        #
#                          --debug --core=plain --dptr=16,1                   #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I G:\»ªÖÚÎÞÏß\12.´®¿ÚÍ¸´«Ö®ÎÞÏßQQ\ZStack-2.5.1a\P #
#                          rojects\zstack\SE\SampleApp\CC2530DB\ -I           #
#                          G:\»ªÖÚÎÞÏß\12.´®¿ÚÍ¸´«Ö®ÎÞÏßQQ\ZStack-2.5.1a\Proj #
#                          ects\zstack\SE\SampleApp\CC2530DB\..\Source\ -I    #
#                          G:\»ªÖÚÎÞÏß\12.´®¿ÚÍ¸´«Ö®ÎÞÏßQQ\ZStack-2.5.1a\Proj #
#                          ects\zstack\SE\SampleApp\CC2530DB\..\..\Source\    #
#                          -I G:\»ªÖÚÎÞÏß\12.´®¿ÚÍ¸´«Ö®ÎÞÏßQQ\ZStack-2.5.1a\P #
#                          rojects\zstack\SE\SampleApp\CC2530DB\..\..\..\ZMai #
#                          n\TI2530DB\ -I G:\»ªÖÚÎÞÏß\12.´®¿ÚÍ¸´«Ö®ÎÞÏßQQ\ZSt #
#                          ack-2.5.1a\Projects\zstack\SE\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\Components\hal\include\ -I           #
#                          G:\»ªÖÚÎÞÏß\12.´®¿ÚÍ¸´«Ö®ÎÞÏßQQ\ZStack-2.5.1a\Proj #
#                          ects\zstack\SE\SampleApp\CC2530DB\..\..\..\..\..\C #
#                          omponents\hal\target\CC2530EB\ -I                  #
#                          G:\»ªÖÚÎÞÏß\12.´®¿ÚÍ¸´«Ö®ÎÞÏßQQ\ZStack-2.5.1a\Proj #
#                          ects\zstack\SE\SampleApp\CC2530DB\..\..\..\..\..\C #
#                          omponents\mac\include\ -I                          #
#                          G:\»ªÖÚÎÞÏß\12.´®¿ÚÍ¸´«Ö®ÎÞÏßQQ\ZStack-2.5.1a\Proj #
#                          ects\zstack\SE\SampleApp\CC2530DB\..\..\..\..\..\C #
#                          omponents\mac\high_level\ -I                       #
#                          G:\»ªÖÚÎÞÏß\12.´®¿ÚÍ¸´«Ö®ÎÞÏßQQ\ZStack-2.5.1a\Proj #
#                          ects\zstack\SE\SampleApp\CC2530DB\..\..\..\..\..\C #
#                          omponents\mac\low_level\srf04\ -I                  #
#                          G:\»ªÖÚÎÞÏß\12.´®¿ÚÍ¸´«Ö®ÎÞÏßQQ\ZStack-2.5.1a\Proj #
#                          ects\zstack\SE\SampleApp\CC2530DB\..\..\..\..\..\C #
#                          omponents\mac\low_level\srf04\single_chip\ -I      #
#                          G:\»ªÖÚÎÞÏß\12.´®¿ÚÍ¸´«Ö®ÎÞÏßQQ\ZStack-2.5.1a\Proj #
#                          ects\zstack\SE\SampleApp\CC2530DB\..\..\..\..\..\C #
#                          omponents\mt\ -I G:\»ªÖÚÎÞÏß\12.´®¿ÚÍ¸´«Ö®ÎÞÏßQQ\Z #
#                          Stack-2.5.1a\Projects\zstack\SE\SampleApp\CC2530DB #
#                          \..\..\..\..\..\Components\osal\include\ -I        #
#                          G:\»ªÖÚÎÞÏß\12.´®¿ÚÍ¸´«Ö®ÎÞÏßQQ\ZStack-2.5.1a\Proj #
#                          ects\zstack\SE\SampleApp\CC2530DB\..\..\..\..\..\C #
#                          omponents\services\saddr\ -I                       #
#                          G:\»ªÖÚÎÞÏß\12.´®¿ÚÍ¸´«Ö®ÎÞÏßQQ\ZStack-2.5.1a\Proj #
#                          ects\zstack\SE\SampleApp\CC2530DB\..\..\..\..\..\C #
#                          omponents\services\sdata\ -I                       #
#                          G:\»ªÖÚÎÞÏß\12.´®¿ÚÍ¸´«Ö®ÎÞÏßQQ\ZStack-2.5.1a\Proj #
#                          ects\zstack\SE\SampleApp\CC2530DB\..\..\..\..\..\C #
#                          omponents\stack\af\ -I G:\»ªÖÚÎÞÏß\12.´®¿ÚÍ¸´«Ö®ÎÞ #
#                          ÏßQQ\ZStack-2.5.1a\Projects\zstack\SE\SampleApp\CC #
#                          2530DB\..\..\..\..\..\Components\stack\nwk\ -I     #
#                          G:\»ªÖÚÎÞÏß\12.´®¿ÚÍ¸´«Ö®ÎÞÏßQQ\ZStack-2.5.1a\Proj #
#                          ects\zstack\SE\SampleApp\CC2530DB\..\..\..\..\..\C #
#                          omponents\stack\sapi\ -I                           #
#                          G:\»ªÖÚÎÞÏß\12.´®¿ÚÍ¸´«Ö®ÎÞÏßQQ\ZStack-2.5.1a\Proj #
#                          ects\zstack\SE\SampleApp\CC2530DB\..\..\..\..\..\C #
#                          omponents\stack\sec\ -I G:\»ªÖÚÎÞÏß\12.´®¿ÚÍ¸´«Ö®Î #
#                          ÞÏßQQ\ZStack-2.5.1a\Projects\zstack\SE\SampleApp\C #
#                          C2530DB\..\..\..\..\..\Components\stack\sys\ -I    #
#                          G:\»ªÖÚÎÞÏß\12.´®¿ÚÍ¸´«Ö®ÎÞÏßQQ\ZStack-2.5.1a\Proj #
#                          ects\zstack\SE\SampleApp\CC2530DB\..\..\..\..\..\C #
#                          omponents\stack\zcl\ -I G:\»ªÖÚÎÞÏß\12.´®¿ÚÍ¸´«Ö®Î #
#                          ÞÏßQQ\ZStack-2.5.1a\Projects\zstack\SE\SampleApp\C #
#                          C2530DB\..\..\..\..\..\Components\stack\zdo\ -I    #
#                          G:\»ªÖÚÎÞÏß\12.´®¿ÚÍ¸´«Ö®ÎÞÏßQQ\ZStack-2.5.1a\Proj #
#                          ects\zstack\SE\SampleApp\CC2530DB\..\..\..\..\..\C #
#                          omponents\zmac\ -I G:\»ªÖÚÎÞÏß\12.´®¿ÚÍ¸´«Ö®ÎÞÏßQQ #
#                          \ZStack-2.5.1a\Projects\zstack\SE\SampleApp\CC2530 #
#                          DB\..\..\..\..\..\Components\zmac\f8w\ -Ohz        #
#                          --require_prototypes                               #
#    List file          =  G:\»ªÖÚÎÞÏß\12.´®¿ÚÍ¸´«Ö®ÎÞÏßQQ\ZStack-2.5.1a\Proj #
#                          ects\zstack\SE\SampleApp\CC2530DB\ESP -            #
#                          Coordinator\List\zcl_key_establish.lst             #
#    Object file        =  G:\»ªÖÚÎÞÏß\12.´®¿ÚÍ¸´«Ö®ÎÞÏßQQ\ZStack-2.5.1a\Proj #
#                          ects\zstack\SE\SampleApp\CC2530DB\ESP -            #
#                          Coordinator\Obj\zcl_key_establish.r51              #
#                                                                             #
#                                                                             #
###############################################################################

G:\»ªÖÚÎÞÏß\12.´®¿ÚÍ¸´«Ö®ÎÞÏßQQ\ZStack-2.5.1a\Components\stack\zcl\zcl_key_establish.c
      1          /******************************************************************************
      2            Filename:       zcl_key_establish.c
      3            Revised:        $Date: 2012-04-02 17:02:19 -0700 (Mon, 02 Apr 2012) $
      4            Revision:       $Revision: 29996 $
      5          
      6            Description:    Zigbee Cluster Library - General Function Domain - key
      7                            establishment cluster.
      8                            This application receives ZCL messages and handles them
      9                            within the ZCL layer, without passing to application.
     10          
     11          
     12            Copyright 2007-2012 Texas Instruments Incorporated. All rights reserved.
     13          
     14            IMPORTANT: Your use of this Software is limited to those specific rights
     15            granted under the terms of a software license agreement between the user
     16            who downloaded the software, his/her employer (which must be your employer)
     17            and Texas Instruments Incorporated (the "License"). You may not use this
     18            Software unless you agree to abide by the terms of the License. The License
     19            limits your use, and you acknowledge, that the Software may not be modified,
     20            copied or distributed unless embedded on a Texas Instruments microcontroller
     21            or used solely and exclusively in conjunction with a Texas Instruments radio
     22            frequency transceiver, which is integrated into your product. Other than for
     23            the foregoing purpose, you may not use, reproduce, copy, prepare derivative
     24            works of, modify, distribute, perform, display or sell this Software and/or
     25            its documentation for any purpose.
     26          
     27            YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
     28            PROVIDED AS IS WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
     29            INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
     30            NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
     31            TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
     32            NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
     33            LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
     34            INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
     35            OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
     36            OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
     37            (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
     38          
     39            Should you have any questions regarding your right to use this Software,
     40            contact Texas Instruments Incorporated at www.TI.com.
     41          ******************************************************************************/
     42          
     43          /*********************************************************************
     44           * INCLUDES
     45           */
     46          #include "ZComDef.h"
     47          #include "OSAL.h"
     48          #include "OSAL_Nv.h"
     49          #include "zcl.h"
     50          #include "ZDApp.h"
     51          #include "ssp_hash.h"
     52          #include "AddrMgr.h"
     53          #include "ZDSecMgr.h"
     54          #include "APSMEDE.h"
     55          #include "eccapi.h"
     56          #include "zcl_key_establish.h"
     57          #include "DebugTrace.h"
     58          #include "se.h"
     59          
     60          #if defined ( INTER_PAN )
     61            #include "stub_aps.h"
     62          #endif
     63          
     64          /*********************************************************************
     65           * MACROS
     66           */
     67          
     68          /*********************************************************************
     69           * CONSTANTS
     70           */
     71          
     72          #define KEY_ESTABLISHMENT_DEVICE_VERSION      0
     73          #define KEY_ESTABLISHMENT_FLAGS               0
     74          #define KEY_ESTABLISHMENT_SUITE               1  // For CBKE with ECMQV
     75          #define KEY_ESTABLISHMENT_AVG_TIMEOUT         ( 2 * ( ZCL_KEY_ESTABLISHMENT_KEY_GENERATE_TIMEOUT + \
     76                                                            ZCL_KEY_ESTABLISHMENT_MAC_GENERATE_TIMEOUT ) )
     77          
     78          #define ZCL_KEY_ESTABLISH_DEVICE_VERSION      0
     79          #define ZCL_KEY_ESTABLISH_FLAGS               0
     80          
     81          #define INVALID_TASK_ID                       0xFF
     82          
     83          /*********************************************************************
     84           * TYPEDEFS
     85           */
     86          
     87          /*********************************************************************
     88           * GLOBAL VARIABLES
     89           */
     90          
     91          // For debug and testing purpose, use a fixed ephermeral key pair instead
     92          // of the randomly generated one.
     93          #if defined (DEBUG_STATIC_ECC)
     94          uint8 public1[22] = {
     95              0x03, 0x06, 0xAB, 0x52, 0x06, 0x22, 0x01, 0xD9,
     96              0x95, 0xB8, 0xB8, 0x59, 0x1F, 0x3F, 0x08, 0x6A,
     97              0x3A, 0x2E, 0x21, 0x4D, 0x84, 0x5E
     98            };
     99          uint8 private1[21] = {
    100              0x03, 0xD4, 0x8C, 0x72, 0x10, 0xDD, 0xBC, 0xC4,
    101              0xFB, 0x2E, 0x5E, 0x7A, 0x0A, 0xA1, 0x6A, 0x0D,
    102              0xB8, 0x95, 0x40, 0x82, 0x0B
    103            };
    104          uint8 public2[22] = {
    105              0x03, 0x00, 0xE1, 0x17, 0xC8, 0x6D, 0x0E, 0x7C,
    106              0xD1, 0x28, 0xB2, 0xF3, 0x4E, 0x90, 0x76, 0xCF,
    107              0xF2, 0x4A, 0xF4, 0x6D, 0x72, 0x88
    108            };
    109          uint8 private2[21] = {
    110              0x00, 0x13, 0xD3, 0x6D, 0xE4, 0xB1, 0xEA, 0x8E,
    111              0x22, 0x73, 0x9C, 0x38, 0x13, 0x70, 0x82, 0x3F,
    112              0x40, 0x4B, 0xFF, 0x88, 0x62
    113            };
    114          #endif
    115          
    116          

   \                                 In  segment XDATA_I, align 1, keep-with-next
    117          zclOptionRec_t zclKeyEstablish_Options[1] =
   \                     zclKeyEstablish_Options:
   \   000000                DS 3
   \   000003                REQUIRE `?<Initializer for zclKeyEstablish_Options>`
   \   000003                REQUIRE __INIT_XDATA_I
    118          {
    119            {
    120              ZCL_CLUSTER_ID_GEN_KEY_ESTABLISHMENT,
    121              ( AF_ACK_REQUEST ),
    122            },
    123          };
    124          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    125          YieldFunc *zclKeyEstablish_YieldFunc = NULL;
   \                     zclKeyEstablish_YieldFunc:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    126          uint8 zclKeyEstablish_YieldLevel = 0;
   \                     zclKeyEstablish_YieldLevel:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    127          
    128          #if defined (NWK_AUTO_POLL)
    129          uint16 zclSavedPollRate = POLL_RATE;
    130          #endif
    131          
    132          /*********************************************************************
    133           * GLOBAL FUNCTIONS
    134           */
    135          extern uint8* SSP_MemCpyReverse( uint8* dst, uint8* src, unsigned int len );
    136          
    137          /*********************************************************************
    138           * LOCAL VARIABLES
    139           */
    140          #if defined(ZCL_KEY_ESTABLISH)

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    141          static uint8 zcl_KeyEstablishment_TaskID;    // Task ID of the key Establishment cluster
   \                     zcl_KeyEstablishment_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    142          #endif
    143          
    144          /*********************************************************************
    145           * SIMPLE DESCRIPTOR
    146           */
    147          // This is the Cluster ID List and should be filled with Application
    148          // specific cluster IDs.
    149          #define ZCL_KEY_ESTABLISH_MAX_INCLUSTERS       1

   \                                 In  segment XDATA_ROM_C, align 1
    150          const cId_t zclKeyEstablish_InClusterList[ZCL_KEY_ESTABLISH_MAX_INCLUSTERS] =
   \                     zclKeyEstablish_InClusterList:
   \   000000   0008         DW 2048
    151          {
    152            ZCL_CLUSTER_ID_GEN_KEY_ESTABLISHMENT,
    153          };
    154          
    155          #define ZCL_KEY_ESTABLISH_MAX_OUTCLUSTERS       1

   \                                 In  segment XDATA_ROM_C, align 1
    156          const cId_t zclKeyEstablish_OutClusterList[ZCL_KEY_ESTABLISH_MAX_OUTCLUSTERS] =
   \                     zclKeyEstablish_OutClusterList:
   \   000000   0008         DW 2048
    157          {
    158            ZCL_CLUSTER_ID_GEN_KEY_ESTABLISHMENT,
    159          };
    160          

   \                                 In  segment XDATA_I, align 1, keep-with-next
    161          SimpleDescriptionFormat_t zclKeyEstablish_SimpleDesc =
   \                     zclKeyEstablish_SimpleDesc:
   \   000000                DS 12
   \   00000C                REQUIRE `?<Initializer for zclKeyEstablish_SimpleDesc>`
   \   00000C                REQUIRE __INIT_XDATA_I
    162          {
    163            ZCL_KEY_ESTABLISHMENT_ENDPOINT,          //  int Endpoint;
    164            ZCL_SE_PROFILE_ID,                       //  uint16 AppProfId[2];
    165            ZCL_SE_DEVICEID_PHYSICAL,                //  uint16 AppDeviceId[2];
    166            ZCL_KEY_ESTABLISH_DEVICE_VERSION,        //  int   AppDevVer:4;
    167            ZCL_KEY_ESTABLISH_FLAGS,                 //  int   AppFlags:4;
    168            ZCL_KEY_ESTABLISH_MAX_INCLUSTERS,        //  byte  AppNumInClusters;
    169            (cId_t *)zclKeyEstablish_InClusterList,  //  byte *pAppInClusterList;
    170            ZCL_KEY_ESTABLISH_MAX_OUTCLUSTERS,       //  byte  AppNumInClusters;
    171            (cId_t *)zclKeyEstablish_OutClusterList  //  byte *pAppInClusterList;
    172          };
    173          
    174          #if defined (ZCL_KEY_ESTABLISH)
    175          // Endpoint for Key Establishment Cluster

   \                                 In  segment XDATA_I, align 1, keep-with-next
    176          static endPointDesc_t zclKeyEstablish_Ep =
   \                     zclKeyEstablish_Ep:
   \   000000                DS 6
   \   000006                REQUIRE `?<Initializer for zclKeyEstablish_Ep>`
   \   000006                REQUIRE __INIT_XDATA_I
    177          {
    178            ZCL_KEY_ESTABLISHMENT_ENDPOINT,                               // Test endpoint
    179            &zcl_TaskID,
    180            (SimpleDescriptionFormat_t *)&zclKeyEstablish_SimpleDesc,
    181            (afNetworkLatencyReq_t)0                           // No Network Latency req
    182          };
    183          #endif
    184          
    185          // Pointer to the application sequence number for ZCL commands
    186          #if defined ( ZCL_KEY_ESTABLISH)

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    187          static uint8 zclKeyEstablishPluginRegisted = FALSE;
   \                     zclKeyEstablishPluginRegisted:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    188          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    189          static zclKeyEstablishRec_t keyEstablishRec[MAX_KEY_ESTABLISHMENT_REC_ENTRY];
   \                     keyEstablishRec:
   \   000000                DS 78
   \   00004E                REQUIRE __INIT_XDATA_Z
    190          
    191          /*********************************************************************
    192           * LOCAL FUNCTIONS
    193           */
    194          static ZStatus_t zclGeneral_KeyEstablish_HdlIncoming( zclIncoming_t *pInMsg );
    195          
    196          static ZStatus_t zclGeneral_KeyEstablish_HdlInSpecificCommands( zclIncoming_t *pInMsg );
    197          
    198          // Key Establish Cluster Command Processing functions
    199          static ZStatus_t zclGeneral_ProcessInCmd_InitiateKeyEstablish( zclIncoming_t *pInMsg );
    200          static ZStatus_t zclGeneral_ProcessInCmd_InitiateKeyEstablishRsp( zclIncoming_t *pInMsg );
    201          static ZStatus_t zclGeneral_ProcessInCmd_EphemeralDataReq( zclIncoming_t *pInMsg );
    202          static ZStatus_t zclGeneral_ProcessInCmd_EphemeralDataRsp( zclIncoming_t *pInMsg );
    203          static ZStatus_t zclGeneral_ProcessInCmd_ConfirmKey( zclIncoming_t *pInMsg );
    204          static ZStatus_t zclGeneral_ProcessInCmd_ConfirmKeyRsp( zclIncoming_t *pInMsg );
    205          static ZStatus_t zclGeneral_ProcessInCmd_TerminateKeyEstablish( zclIncoming_t *pInMsg );
    206          
    207          // Event driven key calculation function
    208          static ZStatus_t zclGeneral_InitiateKeyEstablish_Cmd_CalculateKey(void);
    209          static ZStatus_t zclGeneral_InitiateKeyEstablish_Rsp_CalculateKey(void);
    210          
    211          // Key establishment rec table management function
    212          static void zclGeneral_InitKeyEstablishRecTable( void );
    213          static uint8 zclGeneral_GetKeyEstablishRecIndex( uint16 partnerAddress );
    214          static uint8 zclGeneral_GetKeyEstablishRecIndex_State( KeyEstablishState_t state );
    215          static uint8 zclGeneral_AddKeyEstablishRec( afAddrType_t *addr );
    216          static void zclGeneral_AgeKeyEstablishRec( void );
    217          static void zclGeneral_ResetKeyEstablishRec( uint8 index );
    218          
    219          // Call back function supplying to ECC library
    220          static int zclGeneral_KeyEstablishment_GetRandom(unsigned char *buffer, unsigned long len);
    221          static int zclGeneral_KeyEstablishment_HashFunc(unsigned char *digest, unsigned long len, unsigned char *data);
    222          
    223          // Security related functions
    224          static void zclGeneral_KeyEstablishment_KeyDeriveFunction( uint8 *zData,
    225                                                                     uint8 keyBitLen,
    226                                                                     uint8 *keyBit );
    227          
    228          static ZStatus_t zclGeneral_KeyEstablishment_GenerateMAC(uint8 recIndex,
    229                                                                   uint8 ifMACu,
    230                                                                   uint8 *MAC);
    231          
    232          /*********************************************************************
    233           * @fn      zclGeneral_KeyEstablish_Init
    234           *
    235           * @brief   Call to initialize the Key Establishment Task
    236           *
    237           * @param   task_id
    238           *
    239           * @return  none
    240           */
    241          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    242          void zclGeneral_KeyEstablish_Init( uint8 task_id )
   \                     zclGeneral_KeyEstablish_Init:
    243          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
    244            zcl_KeyEstablishment_TaskID = task_id;
   \   000006   90....       MOV     DPTR,#zcl_KeyEstablishment_TaskID
   \   000009   F0           MOVX    @DPTR,A
    245          
    246            // Register for the key establishment cluster endpoint
    247            afRegister( &zclKeyEstablish_Ep );
   \   00000A                ; Setup parameters for call to function afRegister
   \   00000A   7A..         MOV     R2,#zclKeyEstablish_Ep & 0xff
   \   00000C   7B..         MOV     R3,#(zclKeyEstablish_Ep >> 8) & 0xff
   \   00000E   12....       LCALL   ??afRegister?relay
    248          
    249            zcl_registerClusterOptionList( ZCL_KEY_ESTABLISHMENT_ENDPOINT, 1,
    250                                           zclKeyEstablish_Options );
   \   000011                ; Setup parameters for call to function zcl_registerClusterOptionList
   \   000011   7C..         MOV     R4,#zclKeyEstablish_Options & 0xff
   \   000013   7D..         MOV     R5,#(zclKeyEstablish_Options >> 8) & 0xff
   \   000015   7A01         MOV     R2,#0x1
   \   000017   790A         MOV     R1,#0xa
   \   000019   12....       LCALL   ??zcl_registerClusterOptionList?relay
    251          
    252            // Register as a ZCL Plugin
    253            if ( !zclKeyEstablishPluginRegisted )
   \   00001C   90....       MOV     DPTR,#zclKeyEstablishPluginRegisted
   \   00001F   E0           MOVX    A,@DPTR
   \   000020   7021         JNZ     ??zclGeneral_KeyEstablish_Init_0
    254            {
    255              zcl_registerPlugin( ZCL_CLUSTER_ID_GEN_KEY_ESTABLISHMENT,
    256                                  ZCL_CLUSTER_ID_GEN_KEY_ESTABLISHMENT,
    257                                  zclGeneral_KeyEstablish_HdlIncoming );
   \   000022                ; Setup parameters for call to function zcl_registerPlugin
   \   000022   75....       MOV     ?V0 + 0,#??zclGeneral_KeyEstablish_HdlIncoming?relay & 0xff
   \   000025   75....       MOV     ?V0 + 1,#(??zclGeneral_KeyEstablish_HdlIncoming?relay >> 8) & 0xff
   \   000028   78..         MOV     R0,#?V0 + 0
   \   00002A   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00002D   7C00         MOV     R4,#0x0
   \   00002F   7D08         MOV     R5,#0x8
   \   000031   7A00         MOV     R2,#0x0
   \   000033   7B08         MOV     R3,#0x8
   \   000035   12....       LCALL   ??zcl_registerPlugin?relay
   \   000038   7402         MOV     A,#0x2
   \   00003A   12....       LCALL   ?DEALLOC_XSTACK8
    258              zclKeyEstablishPluginRegisted = TRUE;
   \   00003D   90....       MOV     DPTR,#zclKeyEstablishPluginRegisted
   \   000040   7401         MOV     A,#0x1
   \   000042   F0           MOVX    @DPTR,A
    259            }
    260          
    261            // Initialize the keyEstablishRec table
    262            zclGeneral_InitKeyEstablishRecTable();
   \                     ??zclGeneral_KeyEstablish_Init_0:
   \   000043   7E00         MOV     R6,#0x0
   \                     ??zclGeneral_KeyEstablish_Init_1:
   \   000045                ; Setup parameters for call to function zclGeneral_ResetKeyEstablishRec
   \   000045   EE           MOV     A,R6
   \   000046   F9           MOV     R1,A
   \   000047   12....       LCALL   ??zclGeneral_ResetKeyEstablishRec?relay
   \   00004A   0E           INC     R6
   \   00004B   EE           MOV     A,R6
   \   00004C   C3           CLR     C
   \   00004D   9402         SUBB    A,#0x2
   \   00004F   40F4         JC      ??zclGeneral_KeyEstablish_Init_1
    263          }
   \   000051   02....       LJMP    ??Subroutine107_0 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine107_0:
   \   000000   7F02         MOV     R7,#0x2
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA
    264          
    265          /*********************************************************************
    266           * @fn          zclKeyEstablish_event_loop
    267           *
    268           * @brief       Event Loop Processor for Key establish task.
    269           *
    270           * @param       task_id - TaskId
    271           *              events - events
    272           *
    273           * @return      none
    274           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    275          uint16 zclKeyEstablish_event_loop( uint8 task_id, uint16 events )
   \                     zclKeyEstablish_event_loop:
    276          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   89..         MOV     ?V0 + 1,R1
   \   000007   EA           MOV     A,R2
   \   000008   FE           MOV     R6,A
   \   000009   EB           MOV     A,R3
   \   00000A   FF           MOV     R7,A
    277            afIncomingMSGPacket_t *MSGpkt;
    278          
    279            if ( events & SYS_EVENT_MSG )
   \   00000B   5480         ANL     A,#0x80
   \   00000D   7039         JNZ     ??zclKeyEstablish_event_loop_0
    280            {
    281              while ( (MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( task_id )) )
    282              {
    283                switch ( MSGpkt->hdr.event )
    284                {
    285                  default:
    286                    break;
    287                }
    288          
    289                // Release the memory
    290                osal_msg_deallocate( (uint8 *)MSGpkt );
    291              }
    292          
    293              // return unprocessed events
    294              return (events ^ SYS_EVENT_MSG);
    295            }
    296          
    297            if ( events & KEY_ESTABLISHMENT_REC_AGING_EVT )
   \   00000F   EE           MOV     A,R6
   \   000010   A2E0         MOV     C,0xE0 /* A   */.0
   \   000012   5061         JNC     ??zclKeyEstablish_event_loop_1
    298            {
    299          
    300              zclGeneral_AgeKeyEstablishRec();
   \   000014   75..00       MOV     ?V0 + 2,#0x0
   \   000017   75..00       MOV     ?V0 + 0,#0x0
   \                     ??zclKeyEstablish_event_loop_2:
   \   00001A   E5..         MOV     A,?V0 + 0
   \   00001C   75F027       MOV     B,#0x27
   \   00001F   A4           MUL     AB
   \   000020   F8           MOV     R0,A
   \   000021   A9F0         MOV     R1,B
   \   000023   74..         MOV     A,#(keyEstablishRec + 8) & 0xff
   \   000025   28           ADD     A,R0
   \   000026   F582         MOV     DPL,A
   \   000028   74..         MOV     A,#((keyEstablishRec + 8) >> 8) & 0xff
   \   00002A   12....       LCALL   ?Subroutine97 & 0xFFFF
   \                     ??CrossCallReturnLabel_182:
   \   00002D   602D         JZ      ??zclKeyEstablish_event_loop_3
   \   00002F   12....       LCALL   ??Subroutine119_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_193:
   \   000032   2417         ADD     A,#0x17
   \   000034   F582         MOV     DPL,A
   \   000036   E9           MOV     A,R1
   \   000037   12....       LCALL   ??Subroutine128_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_233:
   \   00003A   14           DEC     A
   \   00003B   F0           MOVX    @DPTR,A
   \   00003C   701B         JNZ     ??zclKeyEstablish_event_loop_4
   \   00003E                ; Setup parameters for call to function zclGeneral_ResetKeyEstablishRec
   \   00003E   A9..         MOV     R1,?V0 + 0
   \   000040   12....       LCALL   ??zclGeneral_ResetKeyEstablishRec?relay
   \   000043   8017         SJMP    ??zclKeyEstablish_event_loop_3
   \                     ??zclKeyEstablish_event_loop_5:
   \   000045                ; Setup parameters for call to function osal_msg_deallocate
   \   000045   12....       LCALL   ??osal_msg_deallocate?relay
   \                     ??zclKeyEstablish_event_loop_0:
   \   000048                ; Setup parameters for call to function osal_msg_receive
   \   000048   A9..         MOV     R1,?V0 + 1
   \   00004A   12....       LCALL   ??osal_msg_receive?relay
   \   00004D   EA           MOV     A,R2
   \   00004E   4B           ORL     A,R3
   \   00004F   70F4         JNZ     ??zclKeyEstablish_event_loop_5
   \   000051   EE           MOV     A,R6
   \   000052   FA           MOV     R2,A
   \   000053   EF           MOV     A,R7
   \   000054   6480         XRL     A,#0x80
   \                     ??zclKeyEstablish_event_loop_6:
   \   000056   FB           MOV     R3,A
   \   000057   8039         SJMP    ??zclKeyEstablish_event_loop_7
   \                     ??zclKeyEstablish_event_loop_4:
   \   000059   75..01       MOV     ?V0 + 2,#0x1
   \                     ??zclKeyEstablish_event_loop_3:
   \   00005C   05..         INC     ?V0 + 0
   \   00005E   E5..         MOV     A,?V0 + 0
   \   000060   C3           CLR     C
   \   000061   9402         SUBB    A,#0x2
   \   000063   40B5         JC      ??zclKeyEstablish_event_loop_2
   \   000065   E5..         MOV     A,?V0 + 2
   \   000067   A2E0         MOV     C,0xE0 /* A   */.0
   \   000069   4003         JC      ??CrossCallReturnLabel_48
   \   00006B                ; Setup parameters for call to function osal_stop_timerEx
   \   00006B   12....       LCALL   ?Subroutine38 & 0xFFFF
    301          
    302              return ( events ^ KEY_ESTABLISHMENT_REC_AGING_EVT );
   \                     ??CrossCallReturnLabel_48:
   \   00006E   EE           MOV     A,R6
   \   00006F   6401         XRL     A,#0x1
   \                     ??zclKeyEstablish_event_loop_8:
   \   000071   FA           MOV     R2,A
   \   000072   EF           MOV     A,R7
   \   000073   80E1         SJMP    ??zclKeyEstablish_event_loop_6
    303            }
    304          
    305            if ( events & KEY_ESTABLISHMENT_CMD_PROCESS_EVT )
   \                     ??zclKeyEstablish_event_loop_1:
   \   000075   5402         ANL     A,#0x2
   \   000077   6008         JZ      ??zclKeyEstablish_event_loop_9
    306            {
    307              zclGeneral_InitiateKeyEstablish_Cmd_CalculateKey();
   \   000079                ; Setup parameters for call to function zclGeneral_InitiateKeyEstablish_Cmd_CalculateKey
   \   000079   12....       LCALL   ??zclGeneral_InitiateKeyEstablish_Cmd_Calculate
    308          
    309              return ( events ^ KEY_ESTABLISHMENT_CMD_PROCESS_EVT );
   \   00007C   EE           MOV     A,R6
   \   00007D   6402         XRL     A,#0x2
   \   00007F   80F0         SJMP    ??zclKeyEstablish_event_loop_8
    310            }
    311          
    312            if ( events & KEY_ESTABLISHMENT_RSP_PROCESS_EVT )
   \                     ??zclKeyEstablish_event_loop_9:
   \   000081   EE           MOV     A,R6
   \   000082   5404         ANL     A,#0x4
   \   000084   6008         JZ      ??zclKeyEstablish_event_loop_10
    313            {
    314              zclGeneral_InitiateKeyEstablish_Rsp_CalculateKey();
   \   000086                ; Setup parameters for call to function zclGeneral_InitiateKeyEstablish_Rsp_CalculateKey
   \   000086   12....       LCALL   ??zclGeneral_InitiateKeyEstablish_Rsp_Calculate
    315              return ( events ^ KEY_ESTABLISHMENT_RSP_PROCESS_EVT );
   \   000089   EE           MOV     A,R6
   \   00008A   6404         XRL     A,#0x4
   \   00008C   80E3         SJMP    ??zclKeyEstablish_event_loop_8
    316            }
    317            // Discard unknown events
    318            return 0;
   \                     ??zclKeyEstablish_event_loop_10:
   \   00008E   7A00         MOV     R2,#0x0
   \   000090   7B00         MOV     R3,#0x0
   \                     ??zclKeyEstablish_event_loop_7:
   \   000092   02....       LJMP    ?Subroutine1 & 0xFFFF
    319          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   7F04         MOV     R7,#0x4
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA
    320          
    321          /*********************************************************************
    322           * @fn      zclGeneral_KeyEstablish_InitiateKeyEstablishment
    323           *
    324           * @brief   Call to initiate key establishment with partner device
    325           *
    326           * @param   appTaskID - task ID of the application that initates the key establish
    327           * @param   partnerAddr - short address and endpoint of the partner to establish key with
    328           * @param   seqNum - pointer to the sequence number of application (ZCL)
    329           *
    330           * @return  ZStatus_t ZSuccess or ZFailure
    331           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    332          ZStatus_t zclGeneral_KeyEstablish_InitiateKeyEstablishment(uint8 appTaskID,
   \                     zclGeneral_KeyEstablish_InitiateKeyEstablishment:
    333                                                                     afAddrType_t *partnerAddr,
    334                                                                     uint8 seqNum)
    335          {
   \   000000   74F0         MOV     A,#-0x10
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 16
   \   000005                ; Auto size: 0
   \   000005   89..         MOV     ?V0 + 2,R1
   \   000007   EA           MOV     A,R2
   \   000008   FE           MOV     R6,A
   \   000009   EB           MOV     A,R3
   \   00000A   FF           MOV     R7,A
    336            uint8 *implicitCert, index;
    337          
    338            // Assign the app seqnum pointer
    339            zcl_SeqNum = seqNum;
   \   00000B   EC           MOV     A,R4
   \   00000C   90....       MOV     DPTR,#zcl_SeqNum
   \   00000F   F0           MOVX    @DPTR,A
    340          
    341            // Start a new key establishment rec entry
    342            index = zclGeneral_AddKeyEstablishRec( partnerAddr );
   \   000010                ; Setup parameters for call to function zclGeneral_AddKeyEstablishRec
   \   000010   12....       LCALL   ??zclGeneral_AddKeyEstablishRec?relay
   \   000013   E9           MOV     A,R1
   \   000014   F8           MOV     R0,A
    343          
    344            if( index < MAX_KEY_ESTABLISHMENT_REC_ENTRY ) // valid entry
   \   000015   C3           CLR     C
   \   000016   9402         SUBB    A,#0x2
   \   000018   505A         JNC     ??zclGeneral_KeyEstablish_InitiateKeyEstablishm_1
    345            {
    346              keyEstablishRec[index].role = KEY_ESTABLISHMENT_INITIATOR;
   \   00001A   E8           MOV     A,R0
   \   00001B   12....       LCALL   ?Subroutine45 & 0xFFFF
   \                     ??CrossCallReturnLabel_137:
   \   00001E   2416         ADD     A,#0x16
   \   000020   12....       LCALL   ??Subroutine125_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_222:
   \   000023   E4           CLR     A
   \   000024   F0           MOVX    @DPTR,A
    347          
    348              // Assign the application task ID that initiates the key establishment
    349              keyEstablishRec[index].appTaskID = appTaskID;
   \   000025   E5..         MOV     A,?V0 + 0
   \   000027   240D         ADD     A,#0xd
   \   000029   12....       LCALL   ??Subroutine125_0 & 0xFFFF
    350            }
   \                     ??CrossCallReturnLabel_223:
   \   00002C   E5..         MOV     A,?V0 + 2
   \   00002E   F0           MOVX    @DPTR,A
    351            else
    352            {
    353              return ZFailure;
    354            }
    355          
    356            // Generate Ephemeral Public/Private Key Pair
    357            ZSE_ECCGenerateKey( ( unsigned char *)keyEstablishRec[index].pLocalEPrivateKey,
    358                               ( unsigned char *)keyEstablishRec[index].pLocalEPublicKey,
    359                               zclGeneral_KeyEstablishment_GetRandom,
    360                               zclKeyEstablish_YieldFunc, zclKeyEstablish_YieldLevel);
   \   00002F                ; Setup parameters for call to function ZSE_ECCGenerateKey
   \   00002F   90....       MOV     DPTR,#zclKeyEstablish_YieldLevel
   \   000032   E0           MOVX    A,@DPTR
   \   000033   F5..         MOV     ?V0 + 4,A
   \   000035   E4           CLR     A
   \   000036   F5..         MOV     ?V0 + 5,A
   \   000038   F5..         MOV     ?V0 + 6,A
   \   00003A   F5..         MOV     ?V0 + 7,A
   \   00003C   78..         MOV     R0,#?V0 + 4
   \   00003E   12....       LCALL   ?PUSH_XSTACK_I_FOUR
   \   000041   90....       MOV     DPTR,#zclKeyEstablish_YieldFunc
   \   000044   12....       LCALL   ?PUSH_XSTACK8_X_TWO
   \   000047   75....       MOV     ?V0 + 4,#??zclGeneral_KeyEstablishment_GetRandom?relay & 0xff
   \   00004A   75....       MOV     ?V0 + 5,#(??zclGeneral_KeyEstablishment_GetRandom?relay >> 8) & 0xff
   \   00004D   78..         MOV     R0,#?V0 + 4
   \   00004F   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000052   12....       LCALL   ?Subroutine41 & 0xFFFF
   \                     ??CrossCallReturnLabel_144:
   \   000055   E5..         MOV     A,?V0 + 0
   \   000057   2419         ADD     A,#0x19
   \   000059   F582         MOV     DPL,A
   \   00005B   E5..         MOV     A,?V0 + 1
   \   00005D   12....       LCALL   ?Subroutine40 & 0xFFFF
   \                     ??CrossCallReturnLabel_54:
   \   000060   12....       LCALL   ?DEALLOC_XSTACK8
    361          
    362          #if defined (DEBUG_STATIC_ECC)
    363            // For debug and testing purpose, use a fixed ephermeral key pair instead
    364            // of the randomly generated one.
    365            osal_memcpy( keyEstablishRec[index].pLocalEPrivateKey, private1, 21 );
    366            osal_memcpy( keyEstablishRec[index].pLocalEPublicKey, public1, 22 );
    367          #endif
    368          
    369            keyEstablishRec[index].state = KeyEstablishState_InitiatePending;
   \   000063   12....       LCALL   ?Subroutine64 & 0xFFFF
   \                     ??CrossCallReturnLabel_231:
   \   000066   7401         MOV     A,#0x1
   \   000068   F0           MOVX    @DPTR,A
    370          
    371            if ((implicitCert = osal_mem_alloc(ZCL_KE_IMPLICIT_CERTIFICATE_LEN)) == NULL)
   \   000069                ; Setup parameters for call to function osal_mem_alloc
   \   000069   7A30         MOV     R2,#0x30
   \   00006B   12....       LCALL   ??Subroutine105_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_155:
   \   00006E   7008         JNZ     ??zclGeneral_KeyEstablish_InitiateKeyEstablishm_2
    372            {
    373              return ZCL_STATUS_SOFTWARE_FAILURE;  // Memory allocation failure.
   \   000070   79C1         MOV     R1,#-0x3f
   \   000072   8068         SJMP    ??zclGeneral_KeyEstablish_InitiateKeyEstablishm_3
    374            }
   \                     ??zclGeneral_KeyEstablish_InitiateKeyEstablishm_1:
   \   000074   7901         MOV     R1,#0x1
   \   000076   8064         SJMP    ??zclGeneral_KeyEstablish_InitiateKeyEstablishm_3
    375            osal_nv_read(ZCD_NV_IMPLICIT_CERTIFICATE, 0, ZCL_KE_IMPLICIT_CERTIFICATE_LEN, implicitCert);
   \                     ??zclGeneral_KeyEstablish_InitiateKeyEstablishm_2:
   \   000078                ; Setup parameters for call to function osal_nv_read
   \   000078   78..         MOV     R0,#?V0 + 0
   \   00007A   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00007D   75..30       MOV     ?V0 + 4,#0x30
   \   000080   75..00       MOV     ?V0 + 5,#0x0
   \   000083   78..         MOV     R0,#?V0 + 4
   \   000085   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000088   12....       LCALL   ?Subroutine68 & 0xFFFF
   \                     ??CrossCallReturnLabel_128:
   \   00008B   12....       LCALL   ?DEALLOC_XSTACK8
    376          
    377            // Send Initiate Key Establishment Command
    378            zclGeneral_KeyEstablish_Send_InitiateKeyEstablishment( ZCL_KEY_ESTABLISHMENT_ENDPOINT,
    379                       partnerAddr,
    380                       KEY_ESTABLISHMENT_SUITE,
    381                       ZCL_KEY_ESTABLISHMENT_EKEY_GENERATE_TIMEOUT,
    382                       ZCL_KEY_ESTABLISHMENT_MAC_GENERATE_TIMEOUT + ZCL_KEY_ESTABLISHMENT_KEY_GENERATE_TIMEOUT,
    383                       implicitCert, TRUE, zcl_SeqNum++ );
   \   00008E   12....       LCALL   ?Subroutine34 & 0xFFFF
   \                     ??CrossCallReturnLabel_40:
   \   000091   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000094   75..01       MOV     ?V0 + 4,#0x1
   \   000097   78..         MOV     R0,#?V0 + 4
   \   000099   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00009C   78..         MOV     R0,#?V0 + 0
   \   00009E   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000A1   75..0E       MOV     ?V0 + 4,#0xe
   \   0000A4   78..         MOV     R0,#?V0 + 4
   \   0000A6   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0000A9   75..0A       MOV     ?V0 + 4,#0xa
   \   0000AC   78..         MOV     R0,#?V0 + 4
   \   0000AE   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0000B1   7C01         MOV     R4,#0x1
   \   0000B3   7D00         MOV     R5,#0x0
   \   0000B5   EE           MOV     A,R6
   \   0000B6   FA           MOV     R2,A
   \   0000B7   EF           MOV     A,R7
   \   0000B8   FB           MOV     R3,A
   \   0000B9   790A         MOV     R1,#0xa
   \   0000BB   12....       LCALL   ??zclGeneral_KeyEstablish_Send_InitiateKeyEstab
   \   0000BE   7406         MOV     A,#0x6
   \   0000C0   12....       LCALL   ?DEALLOC_XSTACK8
    384          
    385            // Start the Key Establishment aging timer, this has to be started to make sure the record
    386            // is going to be deleted in the event that "Key Establishment Response" is not received for
    387            // any reason. This way we do not have hanging records in the table and memory leak issues.
    388            osal_start_reload_timer( zcl_KeyEstablishment_TaskID, KEY_ESTABLISHMENT_REC_AGING_EVT,
    389                                     KEY_ESTABLISHMENT_REC_AGING_INTERVAL );
   \   0000C3                ; Setup parameters for call to function osal_start_reload_timer
   \   0000C3   7CE8         MOV     R4,#-0x18
   \   0000C5   7D03         MOV     R5,#0x3
   \   0000C7   7A01         MOV     R2,#0x1
   \   0000C9   7B00         MOV     R3,#0x0
   \   0000CB   90....       MOV     DPTR,#zcl_KeyEstablishment_TaskID
   \   0000CE   E0           MOVX    A,@DPTR
   \   0000CF   F9           MOV     R1,A
   \   0000D0   12....       LCALL   ??osal_start_reload_timer?relay
    390          
    391            osal_mem_free(implicitCert);
   \   0000D3                ; Setup parameters for call to function osal_mem_free
   \   0000D3   AA..         MOV     R2,?V0 + 0
   \   0000D5   AB..         MOV     R3,?V0 + 1
   \   0000D7   12....       LCALL   ??osal_mem_free?relay
    392          
    393          #if defined (NWK_AUTO_POLL)
    394            // Start the key establishment process and set the Key Establish poll rate
    395            zclSavedPollRate = zgPollRate;
    396            NLME_SetPollRate(ZCL_KEY_ESTABLISH_POLL_RATE);
    397          #endif
    398          
    399            return ZSuccess;
   \   0000DA   7900         MOV     R1,#0x0
   \                     ??zclGeneral_KeyEstablish_InitiateKeyEstablishm_3:
   \   0000DC                REQUIRE ?Subroutine2
   \   0000DC                ; // Fall through to label ?Subroutine2
    400          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   7F08         MOV     R7,#0x8
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine68:
   \   000000   7C00         MOV     R4,#0x0
   \   000002   7D00         MOV     R5,#0x0
   \   000004   7A69         MOV     R2,#0x69
   \   000006                REQUIRE ??Subroutine100_0
   \   000006                ; // Fall through to label ??Subroutine100_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine100_0:
   \   000000   7B00         MOV     R3,#0x0
   \   000002   12....       LCALL   ??osal_nv_read?relay
   \   000005   7404         MOV     A,#0x4
   \   000007   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine45:
   \   000000   75F027       MOV     B,#0x27
   \   000003   A4           MUL     AB
   \   000004   F8           MOV     R0,A
   \   000005   A9F0         MOV     R1,B
   \   000007                REQUIRE ??Subroutine101_0
   \   000007                ; // Fall through to label ??Subroutine101_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine101_0:
   \   000000   12....       LCALL   ?Subroutine85 & 0xFFFF
   \                     ??CrossCallReturnLabel_141:
   \   000003   E5..         MOV     A,?V0 + 0
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine41:
   \   000000   E5..         MOV     A,?V0 + 0
   \   000002   241B         ADD     A,#0x1b
   \   000004   F582         MOV     DPL,A
   \   000006   E5..         MOV     A,?V0 + 1
   \   000008                REQUIRE ??Subroutine102_0
   \   000008                ; // Fall through to label ??Subroutine102_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine102_0:
   \   000000   12....       LCALL   ?Subroutine91 & 0xFFFF
   \                     ??CrossCallReturnLabel_147:
   \   000003   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine91:
   \   000000   3400         ADDC    A,#0x0
   \   000002   F583         MOV     DPH,A
   \   000004   E0           MOVX    A,@DPTR
   \   000005   FC           MOV     R4,A
   \   000006   A3           INC     DPTR
   \   000007   E0           MOVX    A,@DPTR
   \   000008   FD           MOV     R5,A
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine105_0:
   \   000000   7B00         MOV     R3,#0x0
   \   000002   12....       LCALL   ??osal_mem_alloc?relay
   \   000005   8A..         MOV     ?V0 + 0,R2
   \   000007   8B..         MOV     ?V0 + 1,R3
   \   000009   EA           MOV     A,R2
   \   00000A   45..         ORL     A,?V0 + 1
   \   00000C   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine85:
   \   000000   74..         MOV     A,#keyEstablishRec & 0xff
   \   000002   28           ADD     A,R0
   \   000003   F5..         MOV     ?V0 + 0,A
   \   000005   74..         MOV     A,#(keyEstablishRec >> 8) & 0xff
   \   000007   39           ADDC    A,R1
   \   000008   F5..         MOV     ?V0 + 1,A
   \   00000A   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine40:
   \   000000   12....       LCALL   ??Subroutine135_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_260:
   \   000003   12....       LCALL   ?Subroutine99 & 0xFFFF
   \                     ??CrossCallReturnLabel_253:
   \   000006   12....       LCALL   ??ZSE_ECCGenerateKey?relay
   \   000009   7408         MOV     A,#0x8
   \   00000B   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine34:
   \   000000   12....       LCALL   ?Subroutine81 & 0xFFFF
   \                     ??CrossCallReturnLabel_113:
   \   000003   F5..         MOV     ?V0 + 4,A
   \   000005   78..         MOV     R0,#?V0 + 4
   \   000007   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine81:
   \   000000   90....       MOV     DPTR,#zcl_SeqNum
   \   000003   E0           MOVX    A,@DPTR
   \   000004   F8           MOV     R0,A
   \   000005   7401         MOV     A,#0x1
   \   000007   28           ADD     A,R0
   \   000008   F0           MOVX    @DPTR,A
   \   000009                ; Setup parameters for call to function zclGeneral_KeyEstablish_Send_TerminateKeyEstablishment
   \   000009                ; Setup parameters for call to function zclGeneral_KeyEstablish_Send_InitiateKeyEstablishment
   \   000009                ; Setup parameters for call to function zclGeneral_KeyEstablish_Send_EphemeralDataReq
   \   000009                ; Setup parameters for call to function zclGeneral_KeyEstablish_Send_TerminateKeyEstablishment
   \   000009                ; Setup parameters for call to function zclGeneral_KeyEstablish_Send_TerminateKeyEstablishment
   \   000009                ; Setup parameters for call to function zclGeneral_KeyEstablish_Send_TerminateKeyEstablishment
   \   000009                ; Setup parameters for call to function zclGeneral_KeyEstablish_Send_TerminateKeyEstablishment
   \   000009                ; Setup parameters for call to function zclGeneral_KeyEstablish_Send_TerminateKeyEstablishment
   \   000009                ; Setup parameters for call to function zclGeneral_KeyEstablish_Send_TerminateKeyEstablishment
   \   000009                ; Setup parameters for call to function zclGeneral_KeyEstablish_Send_TerminateKeyEstablishment
   \   000009                ; Setup parameters for call to function zclGeneral_KeyEstablish_Send_ConfirmKey
   \   000009   E8           MOV     A,R0
   \   00000A   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine99:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   FA           MOV     R2,A
   \   000002   A3           INC     DPTR
   \   000003   E0           MOVX    A,@DPTR
   \   000004   FB           MOV     R3,A
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine64:
   \   000000   E5..         MOV     A,?V0 + 0
   \   000002                REQUIRE ??Subroutine124_0
   \   000002                ; // Fall through to label ??Subroutine124_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine124_0:
   \   000000   2418         ADD     A,#0x18
   \   000002                REQUIRE ??Subroutine125_0
   \   000002                ; // Fall through to label ??Subroutine125_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine125_0:
   \   000000   F582         MOV     DPL,A
   \   000002   E5..         MOV     A,?V0 + 1
   \   000004                REQUIRE ??Subroutine126_0
   \   000004                ; // Fall through to label ??Subroutine126_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine126_0:
   \   000000   12....       LCALL   ??Subroutine135_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_262:
   \   000003   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine135_0:
   \   000000   3400         ADDC    A,#0x0
   \   000002   F583         MOV     DPH,A
   \   000004   22           RET
    401          
    402          /*********************************************************************
    403           * @fn      zclGeneral_KeyEstablish_Send_InitiateKeyEstablishment
    404           *
    405           * @brief   Call to send out a Initiate Key Establishment Command
    406           *
    407           * @param   srcEP - Sending application's endpoint
    408           * @param   dstAddr - where you want the message to go
    409           * @param   keyEstablishmentSuite - key establishment suite bitmap
    410           * @param   keyGenerateTime - how long it takes to generate key
    411           * @param   macGenerateTime - how long it takes to generate mac
    412           * @param   certificate - identity. For CBKE, it's the implicit certificate.
    413           * @param   disableDefaultRsp - disable default response
    414           * @param   seqNum - ZCL sequence number
    415           *
    416           * @return  ZStatus_t
    417           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    418          ZStatus_t zclGeneral_KeyEstablish_Send_InitiateKeyEstablishment( uint8 srcEP, afAddrType_t *dstAddr,
   \                     zclGeneral_KeyEstablish_Send_InitiateKeyEstablishment:
    419                                                       uint16 keyEstablishmentSuite,
    420                                                       uint8  keyGenerateTime,
    421                                                       uint8  macGenerateTime,
    422                                                       uint8 *certificate,
    423                                                       uint8 disableDefaultRsp, uint8 seqNum )
    424          {
   \   000000   74EA         MOV     A,#-0x16
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 22
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV     ?V0 + 12,R2
   \   000007   8B..         MOV     ?V0 + 13,R3
   \   000009   EC           MOV     A,R4
   \   00000A   FE           MOV     R6,A
   \   00000B   ED           MOV     A,R5
   \   00000C   FF           MOV     R7,A
   \   00000D   7416         MOV     A,#0x16
   \   00000F   12....       LCALL   ?XSTACK_DISP0_8
   \   000012   E0           MOVX    A,@DPTR
   \   000013   F5..         MOV     ?V0 + 7,A
   \   000015   7417         MOV     A,#0x17
   \   000017   12....       LCALL   ?XSTACK_DISP0_8
   \   00001A   E0           MOVX    A,@DPTR
   \   00001B   F5..         MOV     ?V0 + 6,A
   \   00001D   7418         MOV     A,#0x18
   \   00001F   12....       LCALL   ?XSTACK_DISP0_8
   \   000022   E0           MOVX    A,@DPTR
   \   000023   F5..         MOV     ?V0 + 2,A
   \   000025   A3           INC     DPTR
   \   000026   E0           MOVX    A,@DPTR
   \   000027   F5..         MOV     ?V0 + 3,A
   \   000029   741A         MOV     A,#0x1a
   \   00002B   12....       LCALL   ?XSTACK_DISP0_8
   \   00002E   E0           MOVX    A,@DPTR
   \   00002F   F5..         MOV     ?V0 + 4,A
   \   000031   741B         MOV     A,#0x1b
   \   000033   12....       LCALL   ?XSTACK_DISP0_8
   \   000036   E0           MOVX    A,@DPTR
   \   000037   F5..         MOV     ?V0 + 5,A
    425            uint8 *buf;
    426            uint8 *pBuf;
    427            uint8 status;
    428            uint8 bufLen;
    429          
    430            (void)srcEP; // Intentionally unreferenced parameter
    431          
    432            // keyEstablishmentSuite + eDataGenerateTime + macGenerateTime + certificate
    433            bufLen = 2 + 1 + 1 + ZCL_KE_IMPLICIT_CERTIFICATE_LEN;
    434          
    435            if ((buf = osal_mem_alloc(bufLen)) == NULL)
   \   000039                ; Setup parameters for call to function osal_mem_alloc
   \   000039   12....       LCALL   ?Subroutine67 & 0xFFFF
   \                     ??CrossCallReturnLabel_153:
   \   00003C   7005         JNZ     ??zclGeneral_KeyEstablish_Send_InitiateKeyEstab_2
    436            {
    437              return ZMemError;
   \   00003E   7910         MOV     R1,#0x10
   \   000040   02....       LJMP    ??zclGeneral_KeyEstablish_Send_InitiateKeyEstab_3 & 0xFFFF
    438            }
    439          
    440            pBuf = buf;
    441          
    442            *pBuf++ = LO_UINT16( keyEstablishmentSuite );
   \                     ??zclGeneral_KeyEstablish_Send_InitiateKeyEstab_2:
   \   000043   EE           MOV     A,R6
   \   000044   8A82         MOV     DPL,R2
   \   000046   8B83         MOV     DPH,R3
   \   000048   F0           MOVX    @DPTR,A
   \   000049   A3           INC     DPTR
    443            *pBuf++ = HI_UINT16( keyEstablishmentSuite );
   \   00004A   EF           MOV     A,R7
   \   00004B   F0           MOVX    @DPTR,A
   \   00004C   A3           INC     DPTR
    444            *pBuf++ = keyGenerateTime;
   \   00004D   E5..         MOV     A,?V0 + 7
   \   00004F   12....       LCALL   ?Subroutine18 & 0xFFFF
    445            *pBuf++ = macGenerateTime;
    446            osal_memcpy( pBuf, certificate, ZCL_KE_IMPLICIT_CERTIFICATE_LEN );
   \                     ??CrossCallReturnLabel_12:
   \   000052                ; Setup parameters for call to function osal_memcpy
   \   000052   85....       MOV     ?V0 + 8,?V0 + 2
   \   000055   85....       MOV     ?V0 + 9,?V0 + 3
   \   000058   75..00       MOV     ?V0 + 10,#0x0
   \   00005B   78..         MOV     R0,#?V0 + 8
   \   00005D   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   000060   12....       LCALL   ?Subroutine73 & 0xFFFF
   \                     ??CrossCallReturnLabel_148:
   \   000063   12....       LCALL   ?DEALLOC_XSTACK8
    447          
    448            status = zcl_SendCommand( ZCL_KEY_ESTABLISHMENT_ENDPOINT, dstAddr,
    449                                     ZCL_CLUSTER_ID_GEN_KEY_ESTABLISHMENT,
    450                                     COMMAND_INITIATE_KEY_ESTABLISHMENT, TRUE,
    451                                     ZCL_FRAME_CLIENT_SERVER_DIR, disableDefaultRsp,
    452                                     0, seqNum, bufLen, buf );
   \   000066                ; Setup parameters for call to function zcl_SendCommand
   \   000066   78..         MOV     R0,#?V0 + 0
   \   000068   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00006B   75..34       MOV     ?V0 + 2,#0x34
   \   00006E   75..00       MOV     ?V0 + 3,#0x0
   \   000071   78..         MOV     R0,#?V0 + 2
   \   000073   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000076   E5..         MOV     A,?V0 + 5
   \   000078   F5..         MOV     ?V0 + 2,A
   \   00007A   78..         MOV     R0,#?V0 + 2
   \   00007C   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00007F   E4           CLR     A
   \   000080   F5..         MOV     ?V0 + 2,A
   \   000082   78..         MOV     R0,#?V0 + 2
   \   000084   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000087   E5..         MOV     A,?V0 + 4
   \   000089   F5..         MOV     ?V0 + 2,A
   \   00008B   78..         MOV     R0,#?V0 + 2
   \   00008D   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000090   75..00       MOV     ?V0 + 2,#0x0
   \   000093   78..         MOV     R0,#?V0 + 2
   \   000095   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000098   75..01       MOV     ?V0 + 2,#0x1
   \   00009B   78..         MOV     R0,#?V0 + 2
   \   00009D   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0000A0   75..00       MOV     ?V0 + 2,#0x0
   \   0000A3   78..         MOV     R0,#?V0 + 2
   \   0000A5   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0000A8   7C00         MOV     R4,#0x0
   \   0000AA   7D08         MOV     R5,#0x8
   \   0000AC   AA..         MOV     R2,?V0 + 12
   \   0000AE   AB..         MOV     R3,?V0 + 13
   \   0000B0   790A         MOV     R1,#0xa
   \   0000B2   12....       LCALL   ??Subroutine109_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_160:
   \   0000B5   12....       LCALL   ?DEALLOC_XSTACK8
   \   0000B8   E9           MOV     A,R1
   \   0000B9   FE           MOV     R6,A
    453          
    454            osal_mem_free(buf);
   \   0000BA                ; Setup parameters for call to function osal_mem_free
   \   0000BA   AA..         MOV     R2,?V0 + 0
   \   0000BC   AB..         MOV     R3,?V0 + 1
   \   0000BE   12....       LCALL   ??osal_mem_free?relay
    455          
    456            return status;
   \   0000C1   EE           MOV     A,R6
   \   0000C2   F9           MOV     R1,A
   \                     ??zclGeneral_KeyEstablish_Send_InitiateKeyEstab_3:
   \   0000C3                REQUIRE ?Subroutine3
   \   0000C3                ; // Fall through to label ?Subroutine3
    457          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine3:
   \   000000   7F0E         MOV     R7,#0xe
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine73:
   \   000000   7C30         MOV     R4,#0x30
   \   000002                REQUIRE ??Subroutine103_0
   \   000002                ; // Fall through to label ??Subroutine103_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine103_0:
   \   000000   7D00         MOV     R5,#0x0
   \   000002                REQUIRE ??Subroutine104_0
   \   000002                ; // Fall through to label ??Subroutine104_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine104_0:
   \   000000   12....       LCALL   ??osal_memcpy?relay
   \   000003   7403         MOV     A,#0x3
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine67:
   \   000000   7A34         MOV     R2,#0x34
   \   000002                REQUIRE ??Subroutine105_0
   \   000002                ; // Fall through to label ??Subroutine105_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine109_0:
   \   000000   12....       LCALL   ??zcl_SendCommand?relay
   \   000003   740B         MOV     A,#0xb
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine18:
   \   000000   F0           MOVX    @DPTR,A
   \   000001   A3           INC     DPTR
   \   000002   E5..         MOV     A,?V0 + 6
   \   000004   F0           MOVX    @DPTR,A
   \   000005   A3           INC     DPTR
   \   000006   AA82         MOV     R2,DPL
   \   000008   AB83         MOV     R3,DPH
   \   00000A   22           RET
    458          
    459          /*********************************************************************
    460           * @fn      zclGeneral_KeyEstablish_Send_EphemeralDataReq
    461           *
    462           * @brief   Call to send out a Ephemeral Data Request Command
    463           *
    464           * @param   srcEP - Sending application's endpoint
    465           * @param   dstAddr - where you want the message to go
    466           * @param   eData - ephemeral data.
    467           * @param   disableDefaultRsp - disable default response
    468           * @param   seqNum - ZCL sequence number
    469           *
    470           * @return  ZStatus_t
    471           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    472          ZStatus_t zclGeneral_KeyEstablish_Send_EphemeralDataReq( uint8 srcEP, afAddrType_t *dstAddr,
   \                     zclGeneral_KeyEstablish_Send_EphemeralDataReq:
    473                                                       uint8 *eData,
    474                                                       uint8 disableDefaultRsp, uint8 seqNum )
    475          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
   \   000007   740A         MOV     A,#0xa
   \   000009   12....       LCALL   ?XSTACK_DISP0_8
   \   00000C   E0           MOVX    A,@DPTR
   \   00000D   F9           MOV     R1,A
   \   00000E   740B         MOV     A,#0xb
   \   000010   12....       LCALL   ?XSTACK_DISP0_8
   \   000013   12....       LCALL   ?Subroutine31 & 0xFFFF
    476            return zcl_SendCommand( srcEP, dstAddr,
    477                                     ZCL_CLUSTER_ID_GEN_KEY_ESTABLISHMENT,
    478                                     COMMAND_EPHEMERAL_DATA_REQUEST, TRUE,
    479                                     ZCL_FRAME_CLIENT_SERVER_DIR, disableDefaultRsp,
    480                                     0, seqNum, ZCL_KE_CA_PUBLIC_KEY_LEN, eData );
   \                     ??CrossCallReturnLabel_32:
   \   000016   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000019   75..16       MOV     ?V0 + 0,#0x16
   \   00001C   75..00       MOV     ?V0 + 1,#0x0
   \   00001F   78..         MOV     R0,#?V0 + 0
   \   000021   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000024   EF           MOV     A,R7
   \   000025   F5..         MOV     ?V0 + 0,A
   \   000027   78..         MOV     R0,#?V0 + 0
   \   000029   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00002C   E4           CLR     A
   \   00002D   F5..         MOV     ?V0 + 0,A
   \   00002F   78..         MOV     R0,#?V0 + 0
   \   000031   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000034   E9           MOV     A,R1
   \   000035   F5..         MOV     ?V0 + 0,A
   \   000037   78..         MOV     R0,#?V0 + 0
   \   000039   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00003C   75..00       MOV     ?V0 + 0,#0x0
   \   00003F   78..         MOV     R0,#?V0 + 0
   \   000041   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000044   75..01       MOV     ?V0 + 0,#0x1
   \   000047                REQUIRE ?Subroutine10
   \   000047                ; // Fall through to label ?Subroutine10

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine10:
   \   000000   78..         MOV     R0,#?V0 + 0
   \   000002   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000005   80..         SJMP    ??Subroutine106_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine106_0:
   \   000000   78..         MOV     R0,#?V0 + 0
   \   000002   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000005   12....       LCALL   ?Subroutine75 & 0xFFFF
   \                     ??CrossCallReturnLabel_157:
   \   000008   12....       LCALL   ?DEALLOC_XSTACK8
   \   00000B                REQUIRE ??Subroutine107_0
   \   00000B                ; // Fall through to label ??Subroutine107_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine75:
   \   000000   7C00         MOV     R4,#0x0
   \   000002   7D08         MOV     R5,#0x8
   \   000004                REQUIRE ??Subroutine108_0
   \   000004                ; // Fall through to label ??Subroutine108_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine108_0:
   \   000000   EE           MOV     A,R6
   \   000001   F9           MOV     R1,A
   \   000002                REQUIRE ??Subroutine109_0
   \   000002                ; // Fall through to label ??Subroutine109_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine31:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   FF           MOV     R7,A
   \   000002                ; Setup parameters for call to function zcl_SendCommand
   \   000002                ; Setup parameters for call to function zcl_SendCommand
   \   000002                ; Setup parameters for call to function zcl_SendCommand
   \   000002                ; Setup parameters for call to function zcl_SendCommand
   \   000002   8C..         MOV     ?V0 + 0,R4
   \   000004   8D..         MOV     ?V0 + 1,R5
   \   000006   78..         MOV     R0,#?V0 + 0
   \   000008   22           RET
    481          }
    482          
    483          /*********************************************************************
    484           * @fn      zclGeneral_KeyEstablish_Send_ConfirmKey
    485           *
    486           * @brief   Call to send out a Confirm Key Command
    487           *
    488           * @param   srcEP - Sending application's endpoint
    489           * @param   dstAddr - where you want the message to go
    490           * @param   mac - MAC.
    491           * @param   disableDefaultRsp - disable default response
    492           * @param   seqNum - ZCL sequence number
    493           *
    494           * @return  ZStatus_t
    495           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   78..         MOV     R0,#?V0 + 0
   \   000002   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000005   75..02       MOV     ?V0 + 0,#0x2
   \   000008                REQUIRE ??Subroutine106_0
   \   000008                ; // Fall through to label ??Subroutine106_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    496          ZStatus_t zclGeneral_KeyEstablish_Send_ConfirmKey( uint8 srcEP, afAddrType_t *dstAddr,
   \                     zclGeneral_KeyEstablish_Send_ConfirmKey:
    497                                                       uint8 *mac,
    498                                                       uint8 disableDefaultRsp, uint8 seqNum )
    499          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
   \   000007   740A         MOV     A,#0xa
   \   000009   12....       LCALL   ?XSTACK_DISP0_8
   \   00000C   E0           MOVX    A,@DPTR
   \   00000D   F9           MOV     R1,A
   \   00000E   740B         MOV     A,#0xb
   \   000010   12....       LCALL   ?XSTACK_DISP0_8
   \   000013   12....       LCALL   ?Subroutine31 & 0xFFFF
    500            return (zcl_SendCommand(srcEP, dstAddr,
    501                                     ZCL_CLUSTER_ID_GEN_KEY_ESTABLISHMENT,
    502                                     COMMAND_CONFIRM_KEY, TRUE,
    503                                     ZCL_FRAME_CLIENT_SERVER_DIR, disableDefaultRsp,
    504                                     0, seqNum, KEY_ESTABLISH_MAC_LENGTH, mac ));
   \                     ??CrossCallReturnLabel_33:
   \   000016   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000019   75..10       MOV     ?V0 + 0,#0x10
   \   00001C   75..00       MOV     ?V0 + 1,#0x0
   \   00001F   78..         MOV     R0,#?V0 + 0
   \   000021   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000024   EF           MOV     A,R7
   \   000025   F5..         MOV     ?V0 + 0,A
   \   000027   78..         MOV     R0,#?V0 + 0
   \   000029   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00002C   E4           CLR     A
   \   00002D   F5..         MOV     ?V0 + 0,A
   \   00002F   78..         MOV     R0,#?V0 + 0
   \   000031   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000034   E9           MOV     A,R1
   \   000035   F5..         MOV     ?V0 + 0,A
   \   000037   78..         MOV     R0,#?V0 + 0
   \   000039   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00003C   75..00       MOV     ?V0 + 0,#0x0
   \   00003F   78..         MOV     R0,#?V0 + 0
   \   000041   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000044   75..01       MOV     ?V0 + 0,#0x1
   \   000047   80..         SJMP    ?Subroutine0
    505          }
    506          
    507          /*********************************************************************
    508           * @fn      zclGeneral_KeyEstablish_Send_TerminateKeyEstablishment
    509           *
    510           * @brief   Call to send out a Terminate Key Establishment Command
    511           *
    512           * @param   srcEP - Sending application's endpoint
    513           * @param   dstAddr - where you want the message to go
    514           * @param   status - status of the key establishment procedure.
    515           * @param   direction - client/server direction of the command
    516           * @param   disableDefaultRsp - disable default response
    517           * @param   seqNum - ZCL sequence number
    518           *
    519           * @return  ZStatus_t
    520           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    521          ZStatus_t zclGeneral_KeyEstablish_Send_TerminateKeyEstablishment( uint8 srcEP,
   \                     zclGeneral_KeyEstablish_Send_TerminateKeyEstablishment:
    522                                                       afAddrType_t *dstAddr,
    523                                                       TermKeyStatus_t status,
    524                                                       uint8 waitTime,
    525                                                       uint16 keyEstablishmentSuite, uint8 direction,
    526                                                       uint8 disableDefaultRsp, uint8 seqNum )
    527          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 4
   \   000005   74FC         MOV     A,#-0x4
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   E9           MOV     A,R1
   \   00000B   FE           MOV     R6,A
   \   00000C   EC           MOV     A,R4
   \   00000D   FF           MOV     R7,A
   \   00000E   8D..         MOV     ?V0 + 0,R5
   \   000010   7410         MOV     A,#0x10
   \   000012   12....       LCALL   ?XSTACK_DISP0_8
   \   000015   E0           MOVX    A,@DPTR
   \   000016   F8           MOV     R0,A
   \   000017   A3           INC     DPTR
   \   000018   E0           MOVX    A,@DPTR
   \   000019   F9           MOV     R1,A
   \   00001A   7412         MOV     A,#0x12
   \   00001C   12....       LCALL   ?XSTACK_DISP0_8
   \   00001F   E0           MOVX    A,@DPTR
   \   000020   FC           MOV     R4,A
   \   000021   7413         MOV     A,#0x13
   \   000023   12....       LCALL   ?XSTACK_DISP0_8
   \   000026   E0           MOVX    A,@DPTR
   \   000027   FD           MOV     R5,A
   \   000028   7414         MOV     A,#0x14
   \   00002A   12....       LCALL   ?XSTACK_DISP0_8
   \   00002D   E0           MOVX    A,@DPTR
   \   00002E   F5..         MOV     ?V0 + 1,A
    528            uint8 buf[4];
    529          
    530            buf[0] = status;
   \   000030   EF           MOV     A,R7
   \   000031   85..82       MOV     DPL,?XSP + 0
   \   000034   85..83       MOV     DPH,?XSP + 1
   \   000037   F0           MOVX    @DPTR,A
    531            buf[1] = waitTime;
   \   000038   7401         MOV     A,#0x1
   \   00003A   12....       LCALL   ?XSTACK_DISP0_8
   \   00003D   E5..         MOV     A,?V0 + 0
   \   00003F   F0           MOVX    @DPTR,A
    532            buf[2] = LO_UINT16(keyEstablishmentSuite);
   \   000040   7402         MOV     A,#0x2
   \   000042   12....       LCALL   ?XSTACK_DISP0_8
   \   000045   E8           MOV     A,R0
   \   000046   F0           MOVX    @DPTR,A
    533            buf[3] = HI_UINT16(keyEstablishmentSuite);
   \   000047   7403         MOV     A,#0x3
   \   000049   12....       LCALL   ?XSTACK_DISP0_8
   \   00004C   E9           MOV     A,R1
   \   00004D   F0           MOVX    @DPTR,A
    534          
    535            return zcl_SendCommand(srcEP, dstAddr,
    536                                   ZCL_CLUSTER_ID_GEN_KEY_ESTABLISHMENT,
    537                                   COMMAND_TERMINATE_KEY_ESTABLISHMENT, TRUE,
    538                                   direction, disableDefaultRsp,
    539                                   0, seqNum, 4, buf );
   \   00004E                ; Setup parameters for call to function zcl_SendCommand
   \   00004E   85..82       MOV     DPL,?XSP + 0
   \   000051   85..83       MOV     DPH,?XSP + 1
   \   000054   8582..       MOV     ?V0 + 2,DPL
   \   000057   8583..       MOV     ?V0 + 3,DPH
   \   00005A   78..         MOV     R0,#?V0 + 2
   \   00005C   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00005F   75..04       MOV     ?V0 + 2,#0x4
   \   000062   75..00       MOV     ?V0 + 3,#0x0
   \   000065   78..         MOV     R0,#?V0 + 2
   \   000067   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00006A   78..         MOV     R0,#?V0 + 1
   \   00006C   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00006F   E4           CLR     A
   \   000070   F5..         MOV     ?V0 + 2,A
   \   000072   78..         MOV     R0,#?V0 + 2
   \   000074   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000077   ED           MOV     A,R5
   \   000078   F5..         MOV     ?V0 + 1,A
   \   00007A   78..         MOV     R0,#?V0 + 1
   \   00007C   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00007F   EC           MOV     A,R4
   \   000080   F5..         MOV     ?V0 + 1,A
   \   000082   78..         MOV     R0,#?V0 + 1
   \   000084   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000087   75..01       MOV     ?V0 + 1,#0x1
   \   00008A   78..         MOV     R0,#?V0 + 1
   \   00008C   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00008F   75..03       MOV     ?V0 + 1,#0x3
   \   000092   78..         MOV     R0,#?V0 + 1
   \   000094   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000097   12....       LCALL   ?Subroutine75 & 0xFFFF
   \                     ??CrossCallReturnLabel_158:
   \   00009A   12....       LCALL   ?DEALLOC_XSTACK8
   \   00009D   7404         MOV     A,#0x4
   \   00009F   12....       LCALL   ?DEALLOC_XSTACK8
   \   0000A2   02....       LJMP    ?Subroutine1 & 0xFFFF
    540          }
    541          
    542          /*********************************************************************
    543           * @fn      zclGeneral_KeyEstablish_Send_InitiateKeyEstablishmentRsp
    544           *
    545           * @brief   Call to send out a Initiate Key Establishment Response
    546           *
    547           * @param   srcEP - Sending application's endpoint
    548           * @param   dstAddr - where you want the message to go
    549           * @param   status - status of the key establishment response.
    550           * @param   keyEstablishmentSuite - requested key establishment suite bitmap
    551           * @param   keyGenerateTime - how long it takes to generate key
    552           * @param   macGenerateTime - how long it takes to generate mac
    553           * @param   certificate - identity. For CBKE, it's the implicit certificate.
    554           * @param   disableDefaultRsp - disable default response
    555           * @param   seqNum - ZCL sequence number
    556           *
    557           * @return  ZStatus_t
    558           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    559          ZStatus_t zclGeneral_KeyEstablish_Send_InitiateKeyEstablishmentRsp( uint8 srcEP, afAddrType_t *dstAddr,
   \                     zclGeneral_KeyEstablish_Send_InitiateKeyEstablishmentRsp:
    560                                                       uint16 keyEstablishmentSuite,
    561                                                       uint8  keyGenerateTime,
    562                                                       uint8  macGenerateTime,
    563                                                       uint8 *certificate,
    564                                                       uint8 disableDefaultRsp, uint8 seqNum )
    565          {
   \   000000   74EA         MOV     A,#-0x16
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 22
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
   \   000007   8A..         MOV     ?V0 + 12,R2
   \   000009   8B..         MOV     ?V0 + 13,R3
   \   00000B   8C..         MOV     ?V0 + 4,R4
   \   00000D   8D..         MOV     ?V0 + 5,R5
   \   00000F   7416         MOV     A,#0x16
   \   000011   12....       LCALL   ?XSTACK_DISP0_8
   \   000014   E0           MOVX    A,@DPTR
   \   000015   F5..         MOV     ?V0 + 3,A
   \   000017   7417         MOV     A,#0x17
   \   000019   12....       LCALL   ?XSTACK_DISP0_8
   \   00001C   E0           MOVX    A,@DPTR
   \   00001D   F5..         MOV     ?V0 + 6,A
   \   00001F   7418         MOV     A,#0x18
   \   000021   12....       LCALL   ?XSTACK_DISP0_8
   \   000024   E0           MOVX    A,@DPTR
   \   000025   F5..         MOV     ?V0 + 10,A
   \   000027   A3           INC     DPTR
   \   000028   E0           MOVX    A,@DPTR
   \   000029   F5..         MOV     ?V0 + 11,A
   \   00002B   741A         MOV     A,#0x1a
   \   00002D   12....       LCALL   ?XSTACK_DISP0_8
   \   000030   E0           MOVX    A,@DPTR
   \   000031   FF           MOV     R7,A
   \   000032   741B         MOV     A,#0x1b
   \   000034   12....       LCALL   ?XSTACK_DISP0_8
   \   000037   E0           MOVX    A,@DPTR
   \   000038   F5..         MOV     ?V0 + 2,A
    566            uint8 *buf;
    567            uint8 bufLen;
    568            uint8 ret;
    569            uint8 *pBuf;
    570          
    571            bufLen = 2 + 1 + 1 + ZCL_KE_IMPLICIT_CERTIFICATE_LEN;
    572          
    573            if ((buf = osal_mem_alloc(bufLen)) == NULL)
   \   00003A                ; Setup parameters for call to function osal_mem_alloc
   \   00003A   12....       LCALL   ?Subroutine67 & 0xFFFF
   \                     ??CrossCallReturnLabel_154:
   \   00003D   7004         JNZ     ??zclGeneral_KeyEstablish_Send_InitiateKeyEstab_4
    574            {
    575              return ZMemError;
   \   00003F   7910         MOV     R1,#0x10
   \   000041   807A         SJMP    ??zclGeneral_KeyEstablish_Send_InitiateKeyEstab_5
    576            }
    577          
    578            pBuf = buf;
    579          
    580            *pBuf++ = LO_UINT16( keyEstablishmentSuite );
   \                     ??zclGeneral_KeyEstablish_Send_InitiateKeyEstab_4:
   \   000043   8A82         MOV     DPL,R2
   \   000045   8B83         MOV     DPH,R3
   \   000047   E5..         MOV     A,?V0 + 4
   \   000049   F0           MOVX    @DPTR,A
   \   00004A   A3           INC     DPTR
    581            *pBuf++ = HI_UINT16( keyEstablishmentSuite );
   \   00004B   E5..         MOV     A,?V0 + 5
   \   00004D   F0           MOVX    @DPTR,A
   \   00004E   A3           INC     DPTR
    582            *pBuf++ = keyGenerateTime;
   \   00004F   E5..         MOV     A,?V0 + 3
   \   000051   12....       LCALL   ?Subroutine18 & 0xFFFF
    583            *pBuf++ = macGenerateTime;
    584            osal_memcpy( pBuf, certificate, ZCL_KE_IMPLICIT_CERTIFICATE_LEN );
   \                     ??CrossCallReturnLabel_13:
   \   000054                ; Setup parameters for call to function osal_memcpy
   \   000054   85....       MOV     ?V0 + 4,?V0 + 10
   \   000057   85....       MOV     ?V0 + 5,?V0 + 11
   \   00005A   75..00       MOV     ?V0 + 6,#0x0
   \   00005D   78..         MOV     R0,#?V0 + 4
   \   00005F   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   000062   12....       LCALL   ?Subroutine73 & 0xFFFF
   \                     ??CrossCallReturnLabel_149:
   \   000065   12....       LCALL   ?DEALLOC_XSTACK8
    585          
    586            ret = zcl_SendCommand( srcEP, dstAddr,
    587                                     ZCL_CLUSTER_ID_GEN_KEY_ESTABLISHMENT,
    588                                     COMMAND_INITIATE_KEY_ESTABLISHMENT_RESPONSE, TRUE,
    589                                     ZCL_FRAME_SERVER_CLIENT_DIR, disableDefaultRsp,
    590                                     0, seqNum, bufLen, buf );
   \   000068                ; Setup parameters for call to function zcl_SendCommand
   \   000068   78..         MOV     R0,#?V0 + 0
   \   00006A   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00006D   75..34       MOV     ?V0 + 4,#0x34
   \   000070   75..00       MOV     ?V0 + 5,#0x0
   \   000073   78..         MOV     R0,#?V0 + 4
   \   000075   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000078   78..         MOV     R0,#?V0 + 2
   \   00007A   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00007D   E4           CLR     A
   \   00007E   F5..         MOV     ?V0 + 2,A
   \   000080   F5..         MOV     ?V0 + 3,A
   \   000082   78..         MOV     R0,#?V0 + 2
   \   000084   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000087   EF           MOV     A,R7
   \   000088   F5..         MOV     ?V0 + 2,A
   \   00008A   78..         MOV     R0,#?V0 + 2
   \   00008C   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00008F   75..01       MOV     ?V0 + 2,#0x1
   \   000092   78..         MOV     R0,#?V0 + 2
   \   000094   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000097   78..         MOV     R0,#?V0 + 2
   \   000099   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00009C   75..00       MOV     ?V0 + 2,#0x0
   \   00009F   78..         MOV     R0,#?V0 + 2
   \   0000A1   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0000A4   7C00         MOV     R4,#0x0
   \   0000A6   7D08         MOV     R5,#0x8
   \   0000A8   AA..         MOV     R2,?V0 + 12
   \   0000AA   AB..         MOV     R3,?V0 + 13
   \   0000AC   12....       LCALL   ??Subroutine108_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_159:
   \   0000AF   12....       LCALL   ?DEALLOC_XSTACK8
   \   0000B2   E9           MOV     A,R1
   \   0000B3   FF           MOV     R7,A
    591            osal_mem_free(buf);
   \   0000B4                ; Setup parameters for call to function osal_mem_free
   \   0000B4   AA..         MOV     R2,?V0 + 0
   \   0000B6   AB..         MOV     R3,?V0 + 1
   \   0000B8   12....       LCALL   ??osal_mem_free?relay
    592          
    593            return ret;
   \   0000BB   EF           MOV     A,R7
   \   0000BC   F9           MOV     R1,A
   \                     ??zclGeneral_KeyEstablish_Send_InitiateKeyEstab_5:
   \   0000BD   02....       LJMP    ?Subroutine3 & 0xFFFF
    594          }
    595          
    596          /*********************************************************************
    597           * @fn      zclGeneral_KeyEstablish_Send_EphemeralDataRsp
    598           *
    599           * @brief   Call to send out a Ephemeral Data Response Command
    600           *
    601           * @param   srcEP - Sending application's endpoint
    602           * @param   dstAddr - where you want the message to go
    603           * @param   eData - ephemeral data.
    604           * @param   disableDefaultRsp - disable default response
    605           * @param   seqNum - ZCL sequence number
    606           *
    607           * @return  ZStatus_t
    608           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    609          ZStatus_t zclGeneral_KeyEstablish_Send_EphemeralDataRsp( uint8 srcEP, afAddrType_t *dstAddr,
   \                     zclGeneral_KeyEstablish_Send_EphemeralDataRsp:
    610                                                       uint8 *eData,
    611                                                       uint8 disableDefaultRsp, uint8 seqNum )
    612          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
   \   000007   740A         MOV     A,#0xa
   \   000009   12....       LCALL   ?XSTACK_DISP0_8
   \   00000C   E0           MOVX    A,@DPTR
   \   00000D   F9           MOV     R1,A
   \   00000E   740B         MOV     A,#0xb
   \   000010   12....       LCALL   ?XSTACK_DISP0_8
   \   000013   12....       LCALL   ?Subroutine31 & 0xFFFF
    613            return (zcl_SendCommand( srcEP, dstAddr,
    614                                     ZCL_CLUSTER_ID_GEN_KEY_ESTABLISHMENT,
    615                                     COMMAND_EPHEMERAL_DATA_RESPONSE, TRUE,
    616                                     ZCL_FRAME_SERVER_CLIENT_DIR, disableDefaultRsp,
    617                                     0, seqNum, ZCL_KE_CA_PUBLIC_KEY_LEN, eData ));
   \                     ??CrossCallReturnLabel_34:
   \   000016   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000019   75..16       MOV     ?V0 + 0,#0x16
   \   00001C   75..00       MOV     ?V0 + 1,#0x0
   \   00001F   78..         MOV     R0,#?V0 + 0
   \   000021   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000024   EF           MOV     A,R7
   \   000025   F5..         MOV     ?V0 + 0,A
   \   000027   78..         MOV     R0,#?V0 + 0
   \   000029   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00002C   E4           CLR     A
   \   00002D   F5..         MOV     ?V0 + 0,A
   \   00002F   78..         MOV     R0,#?V0 + 0
   \   000031   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000034   E9           MOV     A,R1
   \   000035   F5..         MOV     ?V0 + 0,A
   \   000037   78..         MOV     R0,#?V0 + 0
   \   000039   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00003C   75..01       MOV     ?V0 + 0,#0x1
   \   00003F   78..         MOV     R0,#?V0 + 0
   \   000041   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000044   02....       LJMP    ?Subroutine10 & 0xFFFF
    618          }
    619          
    620          /*********************************************************************
    621           * @fn      zclGeneral_KeyEstablish_Send_ConfirmKeyRsp
    622           *
    623           * @brief   Call to send out a Confirm Key Response
    624           *
    625           * @param   srcEP - Sending application's endpoint
    626           * @param   dstAddr - where you want the message to go
    627           * @param   mac - MAC
    628           * @param   disableDefaultRsp - disable default response
    629           * @param   seqNum - ZCL sequence number
    630           *
    631           * @return  ZStatus_t
    632           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    633          ZStatus_t zclGeneral_KeyEstablish_Send_ConfirmKeyRsp( uint8 srcEP, afAddrType_t *dstAddr,
   \                     zclGeneral_KeyEstablish_Send_ConfirmKeyRsp:
    634                                                       uint8 *mac,
    635                                                       uint8 disableDefaultRsp, uint8 seqNum )
    636          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
   \   000007   740A         MOV     A,#0xa
   \   000009   12....       LCALL   ?XSTACK_DISP0_8
   \   00000C   E0           MOVX    A,@DPTR
   \   00000D   F9           MOV     R1,A
   \   00000E   740B         MOV     A,#0xb
   \   000010   12....       LCALL   ?XSTACK_DISP0_8
   \   000013   12....       LCALL   ?Subroutine31 & 0xFFFF
    637            return (zcl_SendCommand(srcEP, dstAddr,
    638                                     ZCL_CLUSTER_ID_GEN_KEY_ESTABLISHMENT,
    639                                     COMMAND_CONFIRM_KEY_RESPONSE, TRUE,
    640                                     ZCL_FRAME_SERVER_CLIENT_DIR, disableDefaultRsp,
    641                                     0, seqNum, KEY_ESTABLISH_MAC_LENGTH, mac ));
   \                     ??CrossCallReturnLabel_35:
   \   000016   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000019   75..10       MOV     ?V0 + 0,#0x10
   \   00001C   75..00       MOV     ?V0 + 1,#0x0
   \   00001F   78..         MOV     R0,#?V0 + 0
   \   000021   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000024   EF           MOV     A,R7
   \   000025   F5..         MOV     ?V0 + 0,A
   \   000027   78..         MOV     R0,#?V0 + 0
   \   000029   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00002C   E4           CLR     A
   \   00002D   F5..         MOV     ?V0 + 0,A
   \   00002F   78..         MOV     R0,#?V0 + 0
   \   000031   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000034   E9           MOV     A,R1
   \   000035   F5..         MOV     ?V0 + 0,A
   \   000037   78..         MOV     R0,#?V0 + 0
   \   000039   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00003C   75..01       MOV     ?V0 + 0,#0x1
   \   00003F   78..         MOV     R0,#?V0 + 0
   \   000041   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000044   02....       LJMP    ?Subroutine0 & 0xFFFF
    642          }
    643          
    644          /*********************************************************************
    645           * @fn      zclGeneral_KeyEstablish_Send_ConfirmKeyRsp
    646           *
    647           * @brief   Register the user defined yielding function
    648           *
    649           * @param   yield - Pointer to a function to allow user defined yielding.
    650           *          YieldFunc may be NULL if yieldLevel is 0
    651           * @param   yieldLevel - The yield level determines how often the user defined
    652           *          yield function will be called. This is a number from 0 to 10.
    653           *          0 will never yield. 1 will yield the most often. 10 will yield the
    654           *          least often.
    655           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    656          void zclGeneral_KeyEstablishment_RegYieldCB( YieldFunc *pFnYield,
   \                     zclGeneral_KeyEstablishment_RegYieldCB:
    657                                                       uint8 yieldLevel )
    658          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    659            if( pFnYield == NULL )
   \   000004   EA           MOV     A,R2
   \   000005   4B           ORL     A,R3
   \   000006   7006         JNZ     ??zclGeneral_KeyEstablishment_RegYieldCB_0
    660            {
    661              zclKeyEstablish_YieldLevel = 0;
   \   000008   90....       MOV     DPTR,#zclKeyEstablish_YieldLevel
   \   00000B   E4           CLR     A
   \   00000C   800C         SJMP    ??zclGeneral_KeyEstablishment_RegYieldCB_1
    662            }
    663            else
    664            {
    665              zclKeyEstablish_YieldFunc = pFnYield;
   \                     ??zclGeneral_KeyEstablishment_RegYieldCB_0:
   \   00000E   90....       MOV     DPTR,#zclKeyEstablish_YieldFunc
   \   000011   EA           MOV     A,R2
   \   000012   F0           MOVX    @DPTR,A
   \   000013   A3           INC     DPTR
   \   000014   EB           MOV     A,R3
   \   000015   F0           MOVX    @DPTR,A
    666              zclKeyEstablish_YieldLevel = yieldLevel;
   \   000016   E9           MOV     A,R1
   \   000017   90....       MOV     DPTR,#zclKeyEstablish_YieldLevel
   \                     ??zclGeneral_KeyEstablishment_RegYieldCB_1:
   \   00001A   F0           MOVX    @DPTR,A
    667            }
    668          }
   \   00001B                REQUIRE ?Subroutine4
   \   00001B                ; // Fall through to label ?Subroutine4

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine4:
   \   000000   D083         POP     DPH
   \   000002   D082         POP     DPL
   \   000004   02....       LJMP    ?BRET
    669          
    670          /*********************************************************************
    671           * @fn      zclGeneral_KeyEstablish_HdlIncoming
    672           *
    673           * @brief   Callback from ZCL to process incoming Commands specific
    674           *          to this cluster library or Profile commands
    675           *
    676           * @param   pInMsg - pointer to the incoming message
    677           *
    678           * @return  ZStatus_t
    679           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    680          static ZStatus_t zclGeneral_KeyEstablish_HdlIncoming( zclIncoming_t *pInMsg )
   \                     zclGeneral_KeyEstablish_HdlIncoming:
    681          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   12....       LCALL   ?Subroutine42 & 0xFFFF
    682            ZStatus_t stat = ZSuccess;
    683          
    684          #if defined ( INTER_PAN )
    685            if ( StubAPS_InterPan( pInMsg->msg->srcAddr.panId, pInMsg->msg->srcAddr.endPoint ) )
   \                     ??CrossCallReturnLabel_165:
   \   000008                ; Setup parameters for call to function StubAPS_InterPan
   \   000008   EA           MOV     A,R2
   \   000009   240F         ADD     A,#0xf
   \   00000B   F582         MOV     DPL,A
   \   00000D   EB           MOV     A,R3
   \   00000E   12....       LCALL   ??Subroutine128_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_234:
   \   000011   F9           MOV     R1,A
   \   000012   EA           MOV     A,R2
   \   000013   2410         ADD     A,#0x10
   \   000015   F582         MOV     DPL,A
   \   000017   EB           MOV     A,R3
   \   000018   12....       LCALL   ??Subroutine126_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_209:
   \   00001B   12....       LCALL   ??Subroutine113_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_167:
   \   00001E   12....       LCALL   ??StubAPS_InterPan?relay
   \   000021   E9           MOV     A,R1
   \   000022   6005         JZ      ??zclGeneral_KeyEstablish_HdlIncoming_0
    686              return ( stat ); // Cluster not supported thru Inter-PAN
   \   000024   7900         MOV     R1,#0x0
   \   000026   02....       LJMP    ??zclGeneral_KeyEstablish_HdlIncoming_1 & 0xFFFF
    687          #endif
    688          
    689            if ( zcl_ClusterCmd( pInMsg->hdr.fc.type ) )
   \                     ??zclGeneral_KeyEstablish_HdlIncoming_0:
   \   000029   8E82         MOV     DPL,R6
   \   00002B   8F83         MOV     DPH,R7
   \   00002D   A3           INC     DPTR
   \   00002E   A3           INC     DPTR
   \   00002F   E0           MOVX    A,@DPTR
   \   000030   5403         ANL     A,#0x3
   \   000032   6401         XRL     A,#0x1
   \   000034   6003         JZ      $+5
   \   000036   02....       LJMP    ??zclGeneral_KeyEstablish_HdlIncoming_2 & 0xFFFF
    690            {
    691              // Is this a manufacturer specific command?
    692              if ( pInMsg->hdr.fc.manuSpecific == 0 )
   \   000039   8E82         MOV     DPL,R6
   \   00003B   8F83         MOV     DPH,R7
   \   00003D   A3           INC     DPTR
   \   00003E   A3           INC     DPTR
   \   00003F   E0           MOVX    A,@DPTR
   \   000040   5404         ANL     A,#0x4
   \   000042   7075         JNZ     ??zclGeneral_KeyEstablish_HdlIncoming_2
    693              {
    694                stat = zclGeneral_KeyEstablish_HdlInSpecificCommands( pInMsg );
   \   000044   8E82         MOV     DPL,R6
   \   000046   8F83         MOV     DPH,R7
   \   000048   A3           INC     DPTR
   \   000049   A3           INC     DPTR
   \   00004A   E0           MOVX    A,@DPTR
   \   00004B   5408         ANL     A,#0x8
   \   00004D   8E82         MOV     DPL,R6
   \   00004F   8F83         MOV     DPH,R7
   \   000051   A3           INC     DPTR
   \   000052   A3           INC     DPTR
   \   000053   A3           INC     DPTR
   \   000054   A3           INC     DPTR
   \   000055   A3           INC     DPTR
   \   000056   A3           INC     DPTR
   \   000057   A3           INC     DPTR
   \   000058   702A         JNZ     ??zclGeneral_KeyEstablish_HdlIncoming_3
   \   00005A   E0           MOVX    A,@DPTR
   \   00005B   601E         JZ      ??zclGeneral_KeyEstablish_HdlIncoming_4
   \   00005D   14           DEC     A
   \   00005E   6012         JZ      ??zclGeneral_KeyEstablish_HdlIncoming_5
   \   000060   14           DEC     A
   \   000061   6005         JZ      ??zclGeneral_KeyEstablish_HdlIncoming_6
   \   000063   14           DEC     A
   \   000064   602A         JZ      ??zclGeneral_KeyEstablish_HdlIncoming_7
   \   000066   804C         SJMP    ??zclGeneral_KeyEstablish_HdlIncoming_8
   \                     ??zclGeneral_KeyEstablish_HdlIncoming_6:
   \   000068                ; Setup parameters for call to function zclGeneral_ProcessInCmd_ConfirmKey
   \   000068   EE           MOV     A,R6
   \   000069   FA           MOV     R2,A
   \   00006A   EF           MOV     A,R7
   \   00006B   FB           MOV     R3,A
   \   00006C   12....       LCALL   ??zclGeneral_ProcessInCmd_ConfirmKey?relay
   \                     ??zclGeneral_KeyEstablish_HdlIncoming_9:
   \   00006F   E9           MOV     A,R1
   \   000070   8044         SJMP    ??zclGeneral_KeyEstablish_HdlIncoming_10
   \                     ??zclGeneral_KeyEstablish_HdlIncoming_5:
   \   000072                ; Setup parameters for call to function zclGeneral_ProcessInCmd_EphemeralDataReq
   \   000072   EE           MOV     A,R6
   \   000073   FA           MOV     R2,A
   \   000074   EF           MOV     A,R7
   \   000075   FB           MOV     R3,A
   \   000076   12....       LCALL   ??zclGeneral_ProcessInCmd_EphemeralDataReq?rela
   \   000079   80F4         SJMP    ??zclGeneral_KeyEstablish_HdlIncoming_9
   \                     ??zclGeneral_KeyEstablish_HdlIncoming_4:
   \   00007B                ; Setup parameters for call to function zclGeneral_ProcessInCmd_InitiateKeyEstablish
   \   00007B   EE           MOV     A,R6
   \   00007C   FA           MOV     R2,A
   \   00007D   EF           MOV     A,R7
   \   00007E   FB           MOV     R3,A
   \   00007F   12....       LCALL   ??zclGeneral_ProcessInCmd_InitiateKeyEstablish?
   \   000082   80EB         SJMP    ??zclGeneral_KeyEstablish_HdlIncoming_9
   \                     ??zclGeneral_KeyEstablish_HdlIncoming_3:
   \   000084   E0           MOVX    A,@DPTR
   \   000085   6024         JZ      ??zclGeneral_KeyEstablish_HdlIncoming_11
   \   000087   14           DEC     A
   \   000088   6018         JZ      ??zclGeneral_KeyEstablish_HdlIncoming_12
   \   00008A   14           DEC     A
   \   00008B   600C         JZ      ??zclGeneral_KeyEstablish_HdlIncoming_13
   \   00008D   14           DEC     A
   \   00008E   7024         JNZ     ??zclGeneral_KeyEstablish_HdlIncoming_8
   \                     ??zclGeneral_KeyEstablish_HdlIncoming_7:
   \   000090                ; Setup parameters for call to function zclGeneral_ProcessInCmd_TerminateKeyEstablish
   \   000090   EE           MOV     A,R6
   \   000091   FA           MOV     R2,A
   \   000092   EF           MOV     A,R7
   \   000093   FB           MOV     R3,A
   \   000094   12....       LCALL   ??zclGeneral_ProcessInCmd_TerminateKeyEstablish
   \   000097   80D6         SJMP    ??zclGeneral_KeyEstablish_HdlIncoming_9
   \                     ??zclGeneral_KeyEstablish_HdlIncoming_13:
   \   000099                ; Setup parameters for call to function zclGeneral_ProcessInCmd_ConfirmKeyRsp
   \   000099   EE           MOV     A,R6
   \   00009A   FA           MOV     R2,A
   \   00009B   EF           MOV     A,R7
   \   00009C   FB           MOV     R3,A
   \   00009D   12....       LCALL   ??zclGeneral_ProcessInCmd_ConfirmKeyRsp?relay
   \   0000A0   80CD         SJMP    ??zclGeneral_KeyEstablish_HdlIncoming_9
   \                     ??zclGeneral_KeyEstablish_HdlIncoming_12:
   \   0000A2                ; Setup parameters for call to function zclGeneral_ProcessInCmd_EphemeralDataRsp
   \   0000A2   EE           MOV     A,R6
   \   0000A3   FA           MOV     R2,A
   \   0000A4   EF           MOV     A,R7
   \   0000A5   FB           MOV     R3,A
   \   0000A6   12....       LCALL   ??zclGeneral_ProcessInCmd_EphemeralDataRsp?rela
   \   0000A9   80C4         SJMP    ??zclGeneral_KeyEstablish_HdlIncoming_9
   \                     ??zclGeneral_KeyEstablish_HdlIncoming_11:
   \   0000AB                ; Setup parameters for call to function zclGeneral_ProcessInCmd_InitiateKeyEstablishRsp
   \   0000AB   EE           MOV     A,R6
   \   0000AC   FA           MOV     R2,A
   \   0000AD   EF           MOV     A,R7
   \   0000AE   FB           MOV     R3,A
   \   0000AF   12....       LCALL   ??zclGeneral_ProcessInCmd_InitiateKeyEstablishR
   \   0000B2   80BB         SJMP    ??zclGeneral_KeyEstablish_HdlIncoming_9
   \                     ??zclGeneral_KeyEstablish_HdlIncoming_8:
   \   0000B4   7401         MOV     A,#0x1
    695              }
   \                     ??zclGeneral_KeyEstablish_HdlIncoming_10:
   \   0000B6   F9           MOV     R1,A
   \   0000B7   8002         SJMP    ??zclGeneral_KeyEstablish_HdlIncoming_1
    696              else
    697              {
    698                // We don't support any manufacturer specific command.
    699                stat = ZFailure;
   \                     ??zclGeneral_KeyEstablish_HdlIncoming_2:
   \   0000B9   7901         MOV     R1,#0x1
    700              }
    701            }
    702            else
    703            {
    704              // Handle all the normal (Read, Write...) commands -- should never get here
    705              stat = ZFailure;
    706            }
    707            return ( stat );
   \                     ??zclGeneral_KeyEstablish_HdlIncoming_1:
   \   0000BB                REQUIRE ?Subroutine5
   \   0000BB                ; // Fall through to label ?Subroutine5
    708          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine5:
   \   000000   7F01         MOV     R7,#0x1
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine42:
   \   000000   EA           MOV     A,R2
   \   000001   FE           MOV     R6,A
   \   000002   EB           MOV     A,R3
   \   000003   FF           MOV     R7,A
   \   000004                ; Setup parameters for call to function zclGeneral_GetKeyEstablishRecIndex
   \   000004   8E82         MOV     DPL,R6
   \   000006   8F83         MOV     DPH,R7
   \   000008                REQUIRE ??Subroutine113_0
   \   000008                ; // Fall through to label ??Subroutine113_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine113_0:
   \   000000   12....       LCALL   ?Subroutine99 & 0xFFFF
   \                     ??CrossCallReturnLabel_255:
   \   000003   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine128_0:
   \   000000   12....       LCALL   ??Subroutine135_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_263:
   \   000003   E0           MOVX    A,@DPTR
   \   000004   22           RET
    709          
    710          /*********************************************************************
    711           * @fn      zclGeneral_KeyEstablish_HdlInSpecificCommands
    712           *
    713           * @brief   Callback from ZCL to process incoming Commands specific
    714           *          to this cluster library
    715          
    716           * @param   pInMsg - pointer to the incoming message
    717           *
    718           * @return  ZStatus_t
    719           */
    720          static ZStatus_t zclGeneral_KeyEstablish_HdlInSpecificCommands( zclIncoming_t *pInMsg )
    721          {
    722            ZStatus_t stat;
    723          
    724            if ( zcl_ServerCmd( pInMsg->hdr.fc.direction ) )
    725            {
    726              // Commands received by Server
    727              switch ( pInMsg->hdr.commandID )
    728              {
    729                case COMMAND_INITIATE_KEY_ESTABLISHMENT:
    730                  stat = zclGeneral_ProcessInCmd_InitiateKeyEstablish( pInMsg );
    731                  break;
    732          
    733                case COMMAND_EPHEMERAL_DATA_REQUEST:
    734                  stat = zclGeneral_ProcessInCmd_EphemeralDataReq( pInMsg );
    735                  break;
    736          
    737                case COMMAND_CONFIRM_KEY:
    738                  stat = zclGeneral_ProcessInCmd_ConfirmKey( pInMsg );
    739                  break;
    740          
    741                case COMMAND_TERMINATE_KEY_ESTABLISHMENT:
    742                  stat = zclGeneral_ProcessInCmd_TerminateKeyEstablish( pInMsg );
    743                  break;
    744          
    745                default:
    746                  stat = ZFailure;
    747                  break;
    748              }
    749            }
    750            else
    751            {
    752              // Commands received by Client
    753              switch ( pInMsg->hdr.commandID )
    754              {
    755                case COMMAND_INITIATE_KEY_ESTABLISHMENT_RESPONSE:
    756                  stat = zclGeneral_ProcessInCmd_InitiateKeyEstablishRsp( pInMsg );
    757                  break;
    758          
    759                case COMMAND_EPHEMERAL_DATA_RESPONSE:
    760                  stat = zclGeneral_ProcessInCmd_EphemeralDataRsp( pInMsg );
    761                  break;
    762          
    763                case COMMAND_CONFIRM_KEY_RESPONSE:
    764                  stat = zclGeneral_ProcessInCmd_ConfirmKeyRsp( pInMsg );
    765                  break;
    766          
    767                case COMMAND_TERMINATE_KEY_ESTABLISHMENT:
    768                  stat = zclGeneral_ProcessInCmd_TerminateKeyEstablish( pInMsg );
    769                  break;
    770          
    771                default:
    772                  stat = ZFailure;
    773                  break;
    774              }
    775            }
    776          
    777            return ( stat );
    778          }
    779          
    780          /*********************************************************************
    781           * @fn      zclGeneral_ProcessInCmd_InitiateKeyEstablish
    782           *
    783           * @brief   Process the received Initiate Key Establishment Request.
    784           *
    785           * @param   pInMsg - pointer to the incoming message
    786           *
    787           * @return  ZStatus_t - ZFailure @ Unsupported
    788           *                      ZCL_STATUS_MALFORMED_COMMAND
    789           *                      ZCL_STATUS_CMD_HAS_RSP
    790           *                      ZCL_STATUS_SOFTWARE_FAILURE
    791           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    792          static ZStatus_t zclGeneral_ProcessInCmd_InitiateKeyEstablish( zclIncoming_t *pInMsg )
   \                     zclGeneral_ProcessInCmd_InitiateKeyEstablish:
    793          {
   \   000000   74EE         MOV     A,#-0x12
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 18
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
    794            TermKeyStatus_t status = TermKeyStatus_Success;
    795            uint16 remoteKeyEstablishmentSuite;
    796            uint8 *implicitCert = NULL;
   \   000009   75..00       MOV     ?V0 + 8,#0x0
   \   00000C   75..00       MOV     ?V0 + 9,#0x0
    797            uint8 index = MAX_KEY_ESTABLISHMENT_REC_ENTRY;  // set to non valid value
   \   00000F   75..02       MOV     ?V0 + 0,#0x2
    798          
    799            // Check the incoming packet length
    800            if ( pInMsg->pDataLen < PACKET_LEN_INITIATE_KEY_EST_REQ )
   \   000012   8E82         MOV     DPL,R6
   \   000014   8F83         MOV     DPH,R7
   \   000016   A3           INC     DPTR
   \   000017   A3           INC     DPTR
   \   000018   A3           INC     DPTR
   \   000019   A3           INC     DPTR
   \   00001A   A3           INC     DPTR
   \   00001B   A3           INC     DPTR
   \   00001C   A3           INC     DPTR
   \   00001D   A3           INC     DPTR
   \   00001E   A3           INC     DPTR
   \   00001F   A3           INC     DPTR
   \   000020   C3           CLR     C
   \   000021   E0           MOVX    A,@DPTR
   \   000022   9434         SUBB    A,#0x34
   \   000024   A3           INC     DPTR
   \   000025   E0           MOVX    A,@DPTR
   \   000026   9400         SUBB    A,#0x0
   \   000028   5005         JNC     ??zclGeneral_ProcessInCmd_InitiateKeyEstablish_0
    801            {
    802              status = TermKeyStatus_BadMessage;
   \                     ??zclGeneral_ProcessInCmd_InitiateKeyEstablish_1:
   \   00002A   7C03         MOV     R4,#0x3
   \   00002C   02....       LJMP    ??zclGeneral_ProcessInCmd_InitiateKeyEstablish_2 & 0xFFFF
    803            }
    804            else
    805            {
    806              // Start a new key establishment rec entry
    807              index = zclGeneral_AddKeyEstablishRec( &pInMsg->msg->srcAddr );
   \                     ??zclGeneral_ProcessInCmd_InitiateKeyEstablish_0:
   \   00002F                ; Setup parameters for call to function zclGeneral_AddKeyEstablishRec
   \   00002F   8E82         MOV     DPL,R6
   \   000031   8F83         MOV     DPH,R7
   \   000033   12....       LCALL   ?Subroutine96 & 0xFFFF
   \                     ??CrossCallReturnLabel_204:
   \   000036   12....       LCALL   ??zclGeneral_AddKeyEstablishRec?relay
   \   000039   E9           MOV     A,R1
   \   00003A   F5..         MOV     ?V0 + 0,A
    808          
    809              if( index >= MAX_KEY_ESTABLISHMENT_REC_ENTRY )
   \   00003C   C3           CLR     C
   \   00003D   9402         SUBB    A,#0x2
   \   00003F   4005         JC      ??zclGeneral_ProcessInCmd_InitiateKeyEstablish_3
    810              {
    811                // Failed to add an entry
    812                status = TermKeyStatus_NoResources;
   \   000041   7C04         MOV     R4,#0x4
   \   000043   02....       LJMP    ??zclGeneral_ProcessInCmd_InitiateKeyEstablish_2 & 0xFFFF
    813              }
    814              else
    815              {
    816                // Parse the incoming message
    817                // Copy the remote device certificate
    818                osal_memcpy(keyEstablishRec[index].pRemoteCertificate, &(pInMsg->pData[KEY_ESTABLISH_CERT_IDX]),
    819                            ZCL_KE_IMPLICIT_CERTIFICATE_LEN );
   \                     ??zclGeneral_ProcessInCmd_InitiateKeyEstablish_3:
   \   000046   EE           MOV     A,R6
   \   000047   2408         ADD     A,#0x8
   \   000049   F5..         MOV     ?V0 + 2,A
   \   00004B   EF           MOV     A,R7
   \   00004C   3400         ADDC    A,#0x0
   \   00004E   F5..         MOV     ?V0 + 3,A
   \   000050                ; Setup parameters for call to function osal_memcpy
   \   000050   85..82       MOV     DPL,?V0 + 2
   \   000053   F583         MOV     DPH,A
   \   000055   12....       LCALL   ?Subroutine37 & 0xFFFF
   \                     ??CrossCallReturnLabel_46:
   \   000058   75..00       MOV     ?V0 + 6,#0x0
   \   00005B   78..         MOV     R0,#?V0 + 4
   \   00005D   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   000060   7C30         MOV     R4,#0x30
   \   000062   7D00         MOV     R5,#0x0
   \   000064   E9           MOV     A,R1
   \   000065   75F027       MOV     B,#0x27
   \   000068   A4           MUL     AB
   \   000069   F8           MOV     R0,A
   \   00006A   A9F0         MOV     R1,B
   \   00006C   74..         MOV     A,#(keyEstablishRec + 31) & 0xff
   \   00006E   28           ADD     A,R0
   \   00006F   F582         MOV     DPL,A
   \   000071   74..         MOV     A,#((keyEstablishRec + 31) >> 8) & 0xff
   \   000073   39           ADDC    A,R1
   \   000074   12....       LCALL   ??Subroutine131_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_251:
   \   000077   12....       LCALL   ?DEALLOC_XSTACK8
    820          
    821                // Verify the certificate issuer and key establishment suite
    822                remoteKeyEstablishmentSuite = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
    823          
    824                if ( remoteKeyEstablishmentSuite != KEY_ESTABLISHMENT_SUITE )
   \   00007A   85..82       MOV     DPL,?V0 + 2
   \   00007D   85..83       MOV     DPH,?V0 + 3
   \   000080   12....       LCALL   ?Subroutine30 & 0xFFFF
   \                     ??CrossCallReturnLabel_30:
   \   000083   7001         JNZ     ??zclGeneral_ProcessInCmd_InitiateKeyEstablish_4
   \   000085   E9           MOV     A,R1
   \                     ??zclGeneral_ProcessInCmd_InitiateKeyEstablish_4:
   \   000086   6005         JZ      ??zclGeneral_ProcessInCmd_InitiateKeyEstablish_5
    825                {
    826                  status = TermKeyStatus_UnSupportedSuite;
   \   000088   7C05         MOV     R4,#0x5
   \   00008A   02....       LJMP    ??zclGeneral_ProcessInCmd_InitiateKeyEstablish_2 & 0xFFFF
    827                }
    828                else
    829                {
    830                  // continue parsing message
    831                  // Save Ephemeral Data Generate Key and Confirm Key Time
    832                  if (pInMsg->pData[2] >= KEY_ESTABLISHMENT_EPH_DATA_GEN_INVALID_TIME)
   \                     ??zclGeneral_ProcessInCmd_InitiateKeyEstablish_5:
   \   00008D   8E82         MOV     DPL,R6
   \   00008F   8F83         MOV     DPH,R7
   \   000091   12....       LCALL   ?Subroutine33 & 0xFFFF
   \                     ??CrossCallReturnLabel_38:
   \   000094   6094         JZ      ??zclGeneral_ProcessInCmd_InitiateKeyEstablish_1
    833                  {
    834                    status = TermKeyStatus_BadMessage;
    835                  }
    836                  else
    837                  {
    838                    // continue parsing message
    839                    keyEstablishRec[index].remoteEphDataGenTime = pInMsg->pData[2];
   \   000096   85..82       MOV     DPL,?V0 + 2
   \   000099   85..83       MOV     DPH,?V0 + 3
   \   00009C   12....       LCALL   ?Subroutine82 & 0xFFFF
   \                     ??CrossCallReturnLabel_115:
   \   00009F   C0E0         PUSH    A
   \   0000A1   E5..         MOV     A,?V0 + 0
   \   0000A3   75F027       MOV     B,#0x27
   \   0000A6   A4           MUL     AB
   \   0000A7   F8           MOV     R0,A
   \   0000A8   A9F0         MOV     R1,B
   \   0000AA   74..         MOV     A,#(keyEstablishRec + 37) & 0xff
   \   0000AC   28           ADD     A,R0
   \   0000AD   F582         MOV     DPL,A
   \   0000AF   74..         MOV     A,#((keyEstablishRec + 37) >> 8) & 0xff
   \   0000B1   39           ADDC    A,R1
   \   0000B2   F583         MOV     DPH,A
   \   0000B4   D0E0         POP     A
   \   0000B6   F0           MOVX    @DPTR,A
    840          
    841                    if (pInMsg->pData[3] >= KEY_ESTABLISHMENT_CONF_KEY_GEN_INVALID_TIME)
   \   0000B7   85..82       MOV     DPL,?V0 + 2
   \   0000BA   85..83       MOV     DPH,?V0 + 3
   \   0000BD   12....       LCALL   ??Subroutine114_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_169:
   \   0000C0   F4           CPL     A
   \   0000C1   7003         JNZ     $+5
   \   0000C3   02....       LJMP    ??zclGeneral_ProcessInCmd_InitiateKeyEstablish_1 & 0xFFFF
    842                    {
    843                      status = TermKeyStatus_BadMessage;
    844                    }
    845                    else
    846                    {
    847                      // continue parsing message
    848                      keyEstablishRec[index].remoteConfKeyGenTime = pInMsg->pData[3];
   \   0000C6   8E82         MOV     DPL,R6
   \   0000C8   8F83         MOV     DPH,R7
   \   0000CA   12....       LCALL   ?Subroutine29 & 0xFFFF
   \                     ??CrossCallReturnLabel_170:
   \   0000CD   C0E0         PUSH    A
   \   0000CF   E5..         MOV     A,?V0 + 0
   \   0000D1   75F027       MOV     B,#0x27
   \   0000D4   A4           MUL     AB
   \   0000D5   F8           MOV     R0,A
   \   0000D6   12....       LCALL   ?Subroutine56 & 0xFFFF
   \                     ??CrossCallReturnLabel_76:
   \   0000D9   D0E0         POP     A
   \   0000DB   12....       LCALL   ?Subroutine15 & 0xFFFF
    849          
    850                      if ((implicitCert = osal_mem_alloc(ZCL_KE_IMPLICIT_CERTIFICATE_LEN)) == NULL)
   \                     ??CrossCallReturnLabel_6:
   \   0000DE   700A         JNZ     ??zclGeneral_ProcessInCmd_InitiateKeyEstablish_6
    851                      {
    852                        // Reset the entry
    853                        zclGeneral_ResetKeyEstablishRec( index );
   \   0000E0                ; Setup parameters for call to function zclGeneral_ResetKeyEstablishRec
   \   0000E0   A9..         MOV     R1,?V0 + 0
   \   0000E2   12....       LCALL   ??zclGeneral_ResetKeyEstablishRec?relay
    854          
    855                        return ZCL_STATUS_SOFTWARE_FAILURE;  // Memory allocation failure.
   \   0000E5   79C1         MOV     R1,#-0x3f
   \   0000E7   02....       LJMP    ??zclGeneral_ProcessInCmd_InitiateKeyEstablish_7 & 0xFFFF
    856                      }
    857          
    858                      osal_nv_read(ZCD_NV_IMPLICIT_CERTIFICATE, 0, ZCL_KE_IMPLICIT_CERTIFICATE_LEN, implicitCert);
   \                     ??zclGeneral_ProcessInCmd_InitiateKeyEstablish_6:
   \   0000EA                ; Setup parameters for call to function osal_nv_read
   \   0000EA   78..         MOV     R0,#?V0 + 8
   \   0000EC   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000EF   75..30       MOV     ?V0 + 2,#0x30
   \   0000F2   75..00       MOV     ?V0 + 3,#0x0
   \   0000F5   78..         MOV     R0,#?V0 + 2
   \   0000F7   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000FA   12....       LCALL   ?Subroutine68 & 0xFFFF
   \                     ??CrossCallReturnLabel_129:
   \   0000FD   12....       LCALL   ?DEALLOC_XSTACK8
    859          
    860                      if ( !osal_memcmp( &(keyEstablishRec[index].pRemoteCertificate[KEY_ESTABLISH_CERT_ISSUER_IDX]),
    861                                         &(implicitCert[KEY_ESTABLISH_CERT_ISSUER_IDX]),
    862                                         KEY_ESTABLISH_CERT_ISSUER_LENTGH ) )
   \   000100                ; Setup parameters for call to function osal_memcmp
   \   000100   E5..         MOV     A,?V0 + 8
   \   000102   241E         ADD     A,#0x1e
   \   000104   F5..         MOV     ?V0 + 4,A
   \   000106   E5..         MOV     A,?V0 + 9
   \   000108   12....       LCALL   ?Subroutine65 & 0xFFFF
   \                     ??CrossCallReturnLabel_89:
   \   00010B   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   00010E   7C08         MOV     R4,#0x8
   \   000110   7D00         MOV     R5,#0x0
   \   000112   E5..         MOV     A,?V0 + 0
   \   000114   12....       LCALL   ?Subroutine49 & 0xFFFF
   \                     ??CrossCallReturnLabel_66:
   \   000117   F5..         MOV     ?V0 + 2,A
   \   000119   A3           INC     DPTR
   \   00011A   E0           MOVX    A,@DPTR
   \   00011B   3400         ADDC    A,#0x0
   \   00011D   A9..         MOV     R1,?V0 + 2
   \   00011F   FA           MOV     R2,A
   \   000120   12....       LCALL   ??Subroutine118_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_191:
   \   000123   12....       LCALL   ?DEALLOC_XSTACK8
   \   000126   E9           MOV     A,R1
   \   000127   704B         JNZ     ??zclGeneral_ProcessInCmd_InitiateKeyEstablish_8
    863                      {
    864                        status = TermKeyStatus_UnknowIssuer;
   \   000129   7C01         MOV     R4,#0x1
    865                      }
    866                    }
    867                  }
    868                }
    869              } // end of parsing of the message
    870            }
    871          
    872            if ( status != TermKeyStatus_Success )
    873            {
    874              zclGeneral_KeyEstablish_Send_TerminateKeyEstablishment( ZCL_KEY_ESTABLISHMENT_ENDPOINT,
    875                                                                      &pInMsg->msg->srcAddr,
    876                                                                      status,
    877                                                                      KEY_ESTABLISHMENT_AVG_TIMEOUT,
    878                                                                      KEY_ESTABLISHMENT_SUITE,
    879                                                                      ZCL_FRAME_SERVER_CLIENT_DIR,
    880                                                                      FALSE, zcl_SeqNum++ );
   \                     ??zclGeneral_ProcessInCmd_InitiateKeyEstablish_2:
   \   00012B   12....       LCALL   ?Subroutine19 & 0xFFFF
   \                     ??CrossCallReturnLabel_14:
   \   00012E   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000131   75..00       MOV     ?V0 + 1,#0x0
   \   000134   78..         MOV     R0,#?V0 + 1
   \   000136   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000139   75..01       MOV     ?V0 + 1,#0x1
   \   00013C   78..         MOV     R0,#?V0 + 1
   \   00013E   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000141   75..01       MOV     ?V0 + 2,#0x1
   \   000144   75..00       MOV     ?V0 + 3,#0x0
   \   000147   78..         MOV     R0,#?V0 + 2
   \   000149   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00014C   7D1C         MOV     R5,#0x1c
   \   00014E   8E82         MOV     DPL,R6
   \   000150   8F83         MOV     DPH,R7
   \   000152   12....       LCALL   ??Subroutine121_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_199:
   \   000155   12....       LCALL   ?DEALLOC_XSTACK8
    881              if ( implicitCert != NULL )
   \   000158   E5..         MOV     A,?V0 + 8
   \   00015A   45..         ORL     A,?V0 + 9
   \   00015C   6007         JZ      ??zclGeneral_ProcessInCmd_InitiateKeyEstablish_9
    882              {
    883                osal_mem_free(implicitCert);
   \   00015E                ; Setup parameters for call to function osal_mem_free
   \   00015E   AA..         MOV     R2,?V0 + 8
   \   000160   AB..         MOV     R3,?V0 + 9
   \   000162   12....       LCALL   ??osal_mem_free?relay
    884              }
    885          
    886              // Reset the entry
    887              if ( index < MAX_KEY_ESTABLISHMENT_REC_ENTRY )
   \                     ??zclGeneral_ProcessInCmd_InitiateKeyEstablish_9:
   \   000165   E5..         MOV     A,?V0 + 0
   \   000167   C3           CLR     C
   \   000168   9402         SUBB    A,#0x2
   \   00016A   5005         JNC     ??zclGeneral_ProcessInCmd_InitiateKeyEstablish_10
    888              {
    889                zclGeneral_ResetKeyEstablishRec( index );
   \   00016C                ; Setup parameters for call to function zclGeneral_ResetKeyEstablishRec
   \   00016C   A9..         MOV     R1,?V0 + 0
   \   00016E   12....       LCALL   ??zclGeneral_ResetKeyEstablishRec?relay
    890              }
    891          
    892              return ZCL_STATUS_CMD_HAS_RSP;
   \                     ??zclGeneral_ProcessInCmd_InitiateKeyEstablish_10:
   \   000171   02....       LJMP    ??zclGeneral_ProcessInCmd_InitiateKeyEstablish_11 & 0xFFFF
    893            }
    894          
    895            // Fill in partner's extended address
    896            SSP_MemCpyReverse( keyEstablishRec[index].partnerExtAddr,
    897                              &(keyEstablishRec[index].pRemoteCertificate[KEY_ESTABLISH_CERT_EXT_ADDR_IDX]),
    898                              Z_EXTADDR_LEN); // ID(L)
   \                     ??zclGeneral_ProcessInCmd_InitiateKeyEstablish_8:
   \   000174   E5..         MOV     A,?V0 + 0
   \   000176   75F027       MOV     B,#0x27
   \   000179   A4           MUL     AB
   \   00017A   F8           MOV     R0,A
   \   00017B   A9F0         MOV     R1,B
   \   00017D   12....       LCALL   ?Subroutine85 & 0xFFFF
   \                     ??CrossCallReturnLabel_139:
   \   000180                ; Setup parameters for call to function SSP_MemCpyReverse
   \   000180   75..08       MOV     ?V0 + 2,#0x8
   \   000183   78..         MOV     R0,#?V0 + 2
   \   000185   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000188   E5..         MOV     A,?V0 + 0
   \   00018A   241F         ADD     A,#0x1f
   \   00018C   12....       LCALL   ??Subroutine125_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_224:
   \   00018F   12....       LCALL   ?Subroutine43 & 0xFFFF
   \                     ??CrossCallReturnLabel_56:
   \   000192   E5..         MOV     A,?V0 + 0
   \   000194   240E         ADD     A,#0xe
   \   000196   FA           MOV     R2,A
   \   000197   E5..         MOV     A,?V0 + 1
   \   000199   12....       LCALL   ??Subroutine137_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_273:
   \   00019C   12....       LCALL   ?DEALLOC_XSTACK8
    899          
    900            // Change the state and wait for the Ephemeral Data Request
    901            keyEstablishRec[index].lastSeqNum = pInMsg->hdr.transSeqNum;
   \   00019F   EE           MOV     A,R6
   \   0001A0   2406         ADD     A,#0x6
   \   0001A2   F8           MOV     R0,A
   \   0001A3   EF           MOV     A,R7
   \   0001A4   12....       LCALL   ?Subroutine66 & 0xFFFF
   \                     ??CrossCallReturnLabel_92:
   \   0001A7   C0E0         PUSH    A
   \   0001A9   E5..         MOV     A,?V0 + 0
   \   0001AB   240C         ADD     A,#0xc
   \   0001AD   12....       LCALL   ??Subroutine125_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_225:
   \   0001B0   D0E0         POP     A
   \   0001B2   F0           MOVX    @DPTR,A
    902            keyEstablishRec[index].state = KeyEstablishState_EDataPending;
   \   0001B3   12....       LCALL   ?Subroutine64 & 0xFFFF
   \                     ??CrossCallReturnLabel_232:
   \   0001B6   7402         MOV     A,#0x2
   \   0001B8   F0           MOVX    @DPTR,A
    903            keyEstablishRec[index].role = KEY_ESTABLISHMENT_RESPONDER;
   \   0001B9   E5..         MOV     A,?V0 + 0
   \   0001BB   2416         ADD     A,#0x16
   \   0001BD   12....       LCALL   ??Subroutine125_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_226:
   \   0001C0   7401         MOV     A,#0x1
   \   0001C2   F0           MOVX    @DPTR,A
    904          
    905            zclGeneral_KeyEstablish_Send_InitiateKeyEstablishmentRsp( ZCL_KEY_ESTABLISHMENT_ENDPOINT,
    906                      &pInMsg->msg->srcAddr,
    907                      KEY_ESTABLISHMENT_SUITE,
    908                      ZCL_KEY_ESTABLISHMENT_EKEY_GENERATE_TIMEOUT + ZCL_KEY_ESTABLISHMENT_KEY_GENERATE_TIMEOUT,
    909                      ZCL_KEY_ESTABLISHMENT_MAC_GENERATE_TIMEOUT * 2 ,
    910                      implicitCert, FALSE, pInMsg->hdr.transSeqNum );
   \   0001C3                ; Setup parameters for call to function zclGeneral_KeyEstablish_Send_InitiateKeyEstablishmentRsp
   \   0001C3   8882         MOV     DPL,R0
   \   0001C5   8983         MOV     DPH,R1
   \   0001C7   E0           MOVX    A,@DPTR
   \   0001C8   F5..         MOV     ?V0 + 2,A
   \   0001CA   78..         MOV     R0,#?V0 + 2
   \   0001CC   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0001CF   75..00       MOV     ?V0 + 2,#0x0
   \   0001D2   78..         MOV     R0,#?V0 + 2
   \   0001D4   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0001D7   78..         MOV     R0,#?V0 + 8
   \   0001D9   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0001DC   75..14       MOV     ?V0 + 2,#0x14
   \   0001DF   78..         MOV     R0,#?V0 + 2
   \   0001E1   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0001E4   75..0E       MOV     ?V0 + 2,#0xe
   \   0001E7   78..         MOV     R0,#?V0 + 2
   \   0001E9   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0001EC   7C01         MOV     R4,#0x1
   \   0001EE   7D00         MOV     R5,#0x0
   \   0001F0   8E82         MOV     DPL,R6
   \   0001F2   8F83         MOV     DPH,R7
   \   0001F4   12....       LCALL   ?Subroutine36 & 0xFFFF
   \                     ??CrossCallReturnLabel_44:
   \   0001F7   12....       LCALL   ??zclGeneral_KeyEstablish_Send_InitiateKeyEstab_1
   \   0001FA   7406         MOV     A,#0x6
   \   0001FC   12....       LCALL   ?DEALLOC_XSTACK8
    911          
    912            // The Request was processed successfuly, now the age timer needs to start based on the
    913            // remote Ephemeral Data Generate Time
    914            keyEstablishRec[index].age = keyEstablishRec[index].remoteEphDataGenTime;
   \   0001FF   12....       LCALL   ?Subroutine59 & 0xFFFF
   \                     ??CrossCallReturnLabel_240:
   \   000202   C0E0         PUSH    A
   \   000204   12....       LCALL   ?Subroutine58 & 0xFFFF
   \                     ??CrossCallReturnLabel_81:
   \   000207   D0E0         POP     A
   \   000209   12....       LCALL   ?Subroutine13 & 0xFFFF
    915          
    916            // Start the Ephemeral Data Generate aging timer
    917            osal_start_reload_timer( zcl_KeyEstablishment_TaskID, KEY_ESTABLISHMENT_REC_AGING_EVT,
    918                                     KEY_ESTABLISHMENT_REC_AGING_INTERVAL );
    919          
    920            osal_mem_free(implicitCert);
   \                     ??CrossCallReturnLabel_4:
   \   00020C                ; Setup parameters for call to function osal_mem_free
   \   00020C   AA..         MOV     R2,?V0 + 8
   \   00020E   AB..         MOV     R3,?V0 + 9
   \   000210   12....       LCALL   ??osal_mem_free?relay
    921          
    922          #if defined (NWK_AUTO_POLL)
    923            // For polling end device, set the Key Establishment poll rate
    924            zclSavedPollRate = zgPollRate;
    925            NLME_SetPollRate(ZCL_KEY_ESTABLISH_POLL_RATE);
    926          #endif
    927          
    928            return ZCL_STATUS_CMD_HAS_RSP;
   \                     ??zclGeneral_ProcessInCmd_InitiateKeyEstablish_11:
   \   000213   79FF         MOV     R1,#-0x1
   \                     ??zclGeneral_ProcessInCmd_InitiateKeyEstablish_7:
   \   000215   02....       LJMP    ??Subroutine122_0 & 0xFFFF
    929          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine112_0:
   \   000000   12....       LCALL   ??SSP_MemCpyReverse?relay
   \   000003   7402         MOV     A,#0x2
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine66:
   \   000000   3400         ADDC    A,#0x0
   \   000002   F9           MOV     R1,A
   \   000003   8882         MOV     DPL,R0
   \   000005   8983         MOV     DPH,R1
   \   000007   E0           MOVX    A,@DPTR
   \   000008   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine58:
   \   000000   E5..         MOV     A,?V0 + 0
   \   000002   2417         ADD     A,#0x17
   \   000004   F582         MOV     DPL,A
   \   000006   E5..         MOV     A,?V0 + 1
   \   000008   12....       LCALL   ??Subroutine135_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_261:
   \   00000B   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine56:
   \   000000   74..         MOV     A,#(keyEstablishRec + 38) & 0xff
   \   000002   28           ADD     A,R0
   \   000003   F582         MOV     DPL,A
   \   000005   74..         MOV     A,#((keyEstablishRec + 38) >> 8) & 0xff
   \   000007   39           ADDC    A,R1
   \   000008   F583         MOV     DPH,A
   \   00000A   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine49:
   \   000000   75F027       MOV     B,#0x27
   \   000003   A4           MUL     AB
   \   000004   F8           MOV     R0,A
   \   000005   A9F0         MOV     R1,B
   \   000007   74..         MOV     A,#(keyEstablishRec + 31) & 0xff
   \   000009   28           ADD     A,R0
   \   00000A   F582         MOV     DPL,A
   \   00000C   74..         MOV     A,#((keyEstablishRec + 31) >> 8) & 0xff
   \   00000E   12....       LCALL   ?Subroutine97 & 0xFFFF
   \                     ??CrossCallReturnLabel_184:
   \   000011   241E         ADD     A,#0x1e
   \   000013   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine43:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   2416         ADD     A,#0x16
   \   000003   FC           MOV     R4,A
   \   000004   A3           INC     DPTR
   \   000005   E0           MOVX    A,@DPTR
   \   000006   3400         ADDC    A,#0x0
   \   000008   FD           MOV     R5,A
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine37:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   2404         ADD     A,#0x4
   \   000003   F5..         MOV     ?V0 + 4,A
   \   000005   A3           INC     DPTR
   \   000006   E0           MOVX    A,@DPTR
   \   000007   3400         ADDC    A,#0x0
   \   000009   F5..         MOV     ?V0 + 5,A
   \   00000B   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine36:
   \   000000   12....       LCALL   ?Subroutine83 & 0xFFFF
   \                     ??CrossCallReturnLabel_202:
   \   000003   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine83:
   \   000000   12....       LCALL   ?Subroutine96 & 0xFFFF
   \                     ??CrossCallReturnLabel_205:
   \   000003   790A         MOV     R1,#0xa
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine96:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   2406         ADD     A,#0x6
   \   000003   FA           MOV     R2,A
   \   000004   A3           INC     DPTR
   \   000005   E0           MOVX    A,@DPTR
   \   000006   3400         ADDC    A,#0x0
   \   000008   FB           MOV     R3,A
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine33:
   \   000000   A3           INC     DPTR
   \   000001   A3           INC     DPTR
   \   000002   A3           INC     DPTR
   \   000003   A3           INC     DPTR
   \   000004   A3           INC     DPTR
   \   000005   A3           INC     DPTR
   \   000006   A3           INC     DPTR
   \   000007   A3           INC     DPTR
   \   000008   12....       LCALL   ?Subroutine82 & 0xFFFF
   \                     ??CrossCallReturnLabel_116:
   \   00000B   F4           CPL     A
   \   00000C   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine82:
   \   000000   12....       LCALL   ?Subroutine95 & 0xFFFF
   \                     ??CrossCallReturnLabel_172:
   \   000003   E0           MOVX    A,@DPTR
   \   000004   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine30:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   F8           MOV     R0,A
   \   000002   A3           INC     DPTR
   \   000003   E0           MOVX    A,@DPTR
   \   000004   F9           MOV     R1,A
   \   000005   8882         MOV     DPL,R0
   \   000007   8983         MOV     DPH,R1
   \   000009   E0           MOVX    A,@DPTR
   \   00000A   FA           MOV     R2,A
   \   00000B   A3           INC     DPTR
   \   00000C   E0           MOVX    A,@DPTR
   \   00000D   F9           MOV     R1,A
   \   00000E   EA           MOV     A,R2
   \   00000F   F8           MOV     R0,A
   \   000010   7401         MOV     A,#0x1
   \   000012   68           XRL     A,R0
   \   000013   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine29:
   \   000000   A3           INC     DPTR
   \   000001   A3           INC     DPTR
   \   000002   A3           INC     DPTR
   \   000003   A3           INC     DPTR
   \   000004   A3           INC     DPTR
   \   000005   A3           INC     DPTR
   \   000006   A3           INC     DPTR
   \   000007   A3           INC     DPTR
   \   000008                REQUIRE ??Subroutine114_0
   \   000008                ; // Fall through to label ??Subroutine114_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine114_0:
   \   000000   12....       LCALL   ?Subroutine95 & 0xFFFF
   \                     ??CrossCallReturnLabel_173:
   \   000003   A3           INC     DPTR
   \   000004   E0           MOVX    A,@DPTR
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine95:
   \   000000   12....       LCALL   ?Subroutine98 & 0xFFFF
   \                     ??CrossCallReturnLabel_175:
   \   000003   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine98:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   F8           MOV     R0,A
   \   000002   A3           INC     DPTR
   \   000003   E0           MOVX    A,@DPTR
   \   000004   F583         MOV     DPH,A
   \   000006   8882         MOV     DPL,R0
   \   000008   A3           INC     DPTR
   \   000009   A3           INC     DPTR
   \   00000A   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine15:
   \   000000   F0           MOVX    @DPTR,A
   \   000001                ; Setup parameters for call to function osal_mem_alloc
   \   000001                ; Setup parameters for call to function osal_mem_alloc
   \   000001   7A30         MOV     R2,#0x30
   \   000003   12....       LCALL   ?Subroutine90 & 0xFFFF
   \                     ??CrossCallReturnLabel_124:
   \   000006   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine13:
   \   000000   12....       LCALL   ?Subroutine78 & 0xFFFF
   \                     ??CrossCallReturnLabel_104:
   \   000003   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine78:
   \   000000   F0           MOVX    @DPTR,A
   \   000001                ; Setup parameters for call to function osal_start_reload_timer
   \   000001                ; Setup parameters for call to function osal_start_reload_timer
   \   000001                ; Setup parameters for call to function osal_start_reload_timer
   \   000001                ; Setup parameters for call to function osal_start_reload_timer
   \   000001   7CE8         MOV     R4,#-0x18
   \   000003   7D03         MOV     R5,#0x3
   \   000005   7A01         MOV     R2,#0x1
   \   000007   7B00         MOV     R3,#0x0
   \   000009   90....       MOV     DPTR,#zcl_KeyEstablishment_TaskID
   \   00000C   E0           MOVX    A,@DPTR
   \   00000D   F9           MOV     R1,A
   \   00000E   12....       LCALL   ??osal_start_reload_timer?relay
   \   000011   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine97:
   \   000000   39           ADDC    A,R1
   \   000001   F583         MOV     DPH,A
   \   000003   E0           MOVX    A,@DPTR
   \   000004   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine118_0:
   \   000000   7B00         MOV     R3,#0x0
   \   000002   12....       LCALL   ??osal_memcmp?relay
   \   000005   7403         MOV     A,#0x3
   \   000007   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine121_0:
   \   000000   12....       LCALL   ?Subroutine83 & 0xFFFF
   \                     ??CrossCallReturnLabel_203:
   \   000003   12....       LCALL   ??zclGeneral_KeyEstablish_Send_TerminateKeyEsta
   \   000006   7405         MOV     A,#0x5
   \   000008   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine122_0:
   \   000000   7F0A         MOV     R7,#0xa
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine65:
   \   000000   3400         ADDC    A,#0x0
   \   000002   F5..         MOV     ?V0 + 5,A
   \   000004   78..         MOV     R0,#?V0 + 4
   \   000006   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine90:
   \   000000   7B00         MOV     R3,#0x0
   \   000002   12....       LCALL   ??osal_mem_alloc?relay
   \   000005   8A..         MOV     ?V0 + 8,R2
   \   000007   8B..         MOV     ?V0 + 9,R3
   \   000009   EA           MOV     A,R2
   \   00000A   45..         ORL     A,?V0 + 9
   \   00000C   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine59:
   \   000000   E5..         MOV     A,?V0 + 0
   \   000002   2425         ADD     A,#0x25
   \   000004                REQUIRE ??Subroutine127_0
   \   000004                ; // Fall through to label ??Subroutine127_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine127_0:
   \   000000   F582         MOV     DPL,A
   \   000002   E5..         MOV     A,?V0 + 1
   \   000004                REQUIRE ??Subroutine128_0
   \   000004                ; // Fall through to label ??Subroutine128_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine131_0:
   \   000000   F583         MOV     DPH,A
   \   000002                REQUIRE ??Subroutine132_0
   \   000002                ; // Fall through to label ??Subroutine132_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine132_0:
   \   000000   12....       LCALL   ?Subroutine99 & 0xFFFF
   \                     ??CrossCallReturnLabel_256:
   \   000003   12....       LCALL   ??osal_memcpy?relay
   \   000006   7403         MOV     A,#0x3
   \   000008   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine19:
   \   000000   12....       LCALL   ?Subroutine81 & 0xFFFF
   \                     ??CrossCallReturnLabel_111:
   \   000003   F5..         MOV     ?V0 + 1,A
   \   000005   78..         MOV     R0,#?V0 + 1
   \   000007   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine137_0:
   \   000000   3400         ADDC    A,#0x0
   \   000002   FB           MOV     R3,A
   \   000003   12....       LCALL   ??Subroutine112_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_277:
   \   000006   22           RET
    930          
    931          /*********************************************************************
    932           * @fn      zclGeneral_ProcessInCmd_EphemeralDataReq
    933           *
    934           * @brief   Process the received Ephemeral Data Request.
    935           *
    936           * @param   pInMsg - pointer to the incoming message
    937           *
    938           * @return  ZStatus_t - ZFailure @ Unsupported
    939           *                      ZCL_STATUS_MALFORMED_COMMAND
    940           *                      ZCL_STATUS_CMD_HAS_RSP
    941           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    942          static ZStatus_t zclGeneral_ProcessInCmd_EphemeralDataReq( zclIncoming_t *pInMsg )
   \                     zclGeneral_ProcessInCmd_EphemeralDataReq:
    943          {
   \   000000   74F0         MOV     A,#-0x10
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 16
   \   000005                ; Auto size: 0
   \   000005   12....       LCALL   ?Subroutine24 & 0xFFFF
    944            uint8 index;
    945            uint8 status = ZFailure;
    946          
    947            // Omit checking the incoming packet length
    948          
    949            // Stop the Ephemeral Data Generate timer because the message has been received
    950            osal_stop_timerEx( zcl_KeyEstablishment_TaskID, KEY_ESTABLISHMENT_REC_AGING_EVT );
    951          
    952            // Check state of the key establishment record. If not match, terminate the procedure
    953            if ( ( index = zclGeneral_GetKeyEstablishRecIndex( pInMsg->msg->srcAddr.addr.shortAddr ) )
    954                < MAX_KEY_ESTABLISHMENT_REC_ENTRY )
   \                     ??CrossCallReturnLabel_22:
   \   000008   88..         MOV     ?V0 + 2,R0
   \   00000A   C3           CLR     C
   \   00000B   9402         SUBB    A,#0x2
   \   00000D   4003         JC      $+5
   \   00000F   02....       LJMP    ??zclGeneral_ProcessInCmd_EphemeralDataReq_0 & 0xFFFF
    955            {
    956              if ( keyEstablishRec[index].role == KEY_ESTABLISHMENT_RESPONDER &&
    957                   keyEstablishRec[index].state == KeyEstablishState_EDataPending )
   \   000012   E8           MOV     A,R0
   \   000013   12....       LCALL   ?Subroutine50 & 0xFFFF
   \                     ??CrossCallReturnLabel_68:
   \   000016   7079         JNZ     ??zclGeneral_ProcessInCmd_EphemeralDataReq_1
   \   000018   12....       LCALL   ?Subroutine52 & 0xFFFF
   \                     ??CrossCallReturnLabel_70:
   \   00001B   7074         JNZ     ??zclGeneral_ProcessInCmd_EphemeralDataReq_1
    958              {
    959                status = ZSuccess;
    960          
    961                // Copy the remote device Ephemeral Public key
    962                osal_memcpy( keyEstablishRec[index].pRemotePublicKey,
    963                        &(pInMsg->pData[0]),
    964                        ZCL_KE_CA_PUBLIC_KEY_LEN );
   \   00001D   12....       LCALL   ?Subroutine48 & 0xFFFF
    965              }
   \                     ??CrossCallReturnLabel_64:
   \   000020   12....       LCALL   ?Subroutine25 & 0xFFFF
   \                     ??CrossCallReturnLabel_163:
   \   000023   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   000026   12....       LCALL   ?Subroutine23 & 0xFFFF
   \                     ??CrossCallReturnLabel_245:
   \   000029   12....       LCALL   ?DEALLOC_XSTACK8
    966              else
    967              {
    968                // Reset the entry
    969                zclGeneral_ResetKeyEstablishRec( index );
    970              }
    971            }
    972          
    973            if( status != ZSuccess )
    974            {
    975              // Either the entry doesn't exist or in the wrong state, send termination back
    976              zclGeneral_KeyEstablish_Send_TerminateKeyEstablishment( ZCL_KEY_ESTABLISHMENT_ENDPOINT,
    977                                                                      &pInMsg->msg->srcAddr,
    978                                                                      TermKeyStatus_BadMessage,
    979                                                                      KEY_ESTABLISHMENT_AVG_TIMEOUT,
    980                                                                      KEY_ESTABLISHMENT_SUITE,
    981                                                                      ZCL_FRAME_SERVER_CLIENT_DIR,
    982                                                                      FALSE, zcl_SeqNum++ );
    983          
    984          #if defined (NWK_AUTO_POLL)
    985            // Restore the saved poll rate for end device
    986            NLME_SetPollRate(zclSavedPollRate);
    987          #endif
    988              return ZCL_STATUS_CMD_HAS_RSP;
    989            }
    990          
    991            // Generate Ephemeral Public/Private Key Pair
    992            ZSE_ECCGenerateKey( (unsigned char *)keyEstablishRec[index].pLocalEPrivateKey,
    993                              (unsigned char *)keyEstablishRec[index].pLocalEPublicKey,
    994                              zclGeneral_KeyEstablishment_GetRandom,
    995                              zclKeyEstablish_YieldFunc, zclKeyEstablish_YieldLevel );
   \   00002C                ; Setup parameters for call to function ZSE_ECCGenerateKey
   \   00002C   90....       MOV     DPTR,#zclKeyEstablish_YieldLevel
   \   00002F   E0           MOVX    A,@DPTR
   \   000030   F5..         MOV     ?V0 + 4,A
   \   000032   E4           CLR     A
   \   000033   F5..         MOV     ?V0 + 5,A
   \   000035   F5..         MOV     ?V0 + 7,A
   \   000037   78..         MOV     R0,#?V0 + 4
   \   000039   12....       LCALL   ?PUSH_XSTACK_I_FOUR
   \   00003C   90....       MOV     DPTR,#zclKeyEstablish_YieldFunc
   \   00003F   12....       LCALL   ?PUSH_XSTACK8_X_TWO
   \   000042   75....       MOV     ?V0 + 4,#??zclGeneral_KeyEstablishment_GetRandom?relay & 0xff
   \   000045   75....       MOV     ?V0 + 5,#(??zclGeneral_KeyEstablishment_GetRandom?relay >> 8) & 0xff
   \   000048   78..         MOV     R0,#?V0 + 4
   \   00004A   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00004D   12....       LCALL   ?Subroutine71 & 0xFFFF
   \                     ??CrossCallReturnLabel_96:
   \   000050   12....       LCALL   ??Subroutine102_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_142:
   \   000053   EE           MOV     A,R6
   \   000054   2419         ADD     A,#0x19
   \   000056   F582         MOV     DPL,A
   \   000058   EF           MOV     A,R7
   \   000059   12....       LCALL   ?Subroutine40 & 0xFFFF
   \                     ??CrossCallReturnLabel_55:
   \   00005C   12....       LCALL   ?DEALLOC_XSTACK8
    996          
    997          #if defined (DEBUG_STATIC_ECC)
    998          
    999            // For debug and testing purpose, use a fixed ephermeral key pair instead
   1000            // of the randomly generated one.
   1001            osal_memcpy( keyEstablishRec[index].pLocalEPrivateKey, private2, 21 );
   1002            osal_memcpy( keyEstablishRec[index].pLocalEPublicKey, public2, 22 );
   1003          #endif
   1004          
   1005            // Update Sequence Number
   1006            keyEstablishRec[index].lastSeqNum = pInMsg->hdr.transSeqNum;
   \   00005F   85..82       MOV     DPL,?V0 + 0
   \   000062   85..83       MOV     DPH,?V0 + 1
   \   000065   A3           INC     DPTR
   \   000066   A3           INC     DPTR
   \   000067   A3           INC     DPTR
   \   000068   A3           INC     DPTR
   \   000069   A3           INC     DPTR
   \   00006A   A3           INC     DPTR
   \   00006B   E0           MOVX    A,@DPTR
   \   00006C   C0E0         PUSH    A
   \   00006E   EE           MOV     A,R6
   \   00006F   240C         ADD     A,#0xc
   \   000071   F582         MOV     DPL,A
   \   000073   EF           MOV     A,R7
   \   000074   12....       LCALL   ??Subroutine126_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_210:
   \   000077   D0E0         POP     A
   \   000079   12....       LCALL   ?Subroutine17 & 0xFFFF
   1007          
   1008            // Change the state and wait for the Key to be calculated
   1009            keyEstablishRec[index].state = KeyEstablishState_KeyCalculatePending;
   \                     ??CrossCallReturnLabel_10:
   \   00007C   7403         MOV     A,#0x3
   \   00007E   F0           MOVX    @DPTR,A
   1010          
   1011            osal_start_timerEx( zcl_KeyEstablishment_TaskID, KEY_ESTABLISHMENT_CMD_PROCESS_EVT,
   1012                                KEY_ESTABLISHMENT_WAIT_PERIOD );
   \   00007F                ; Setup parameters for call to function osal_start_timerEx
   \   00007F   7CF4         MOV     R4,#-0xc
   \   000081   7D01         MOV     R5,#0x1
   \   000083   7A02         MOV     R2,#0x2
   \   000085   7B00         MOV     R3,#0x0
   \   000087   90....       MOV     DPTR,#zcl_KeyEstablishment_TaskID
   \   00008A   E0           MOVX    A,@DPTR
   \   00008B   F9           MOV     R1,A
   \   00008C   12....       LCALL   ??osal_start_timerEx?relay
   1013          
   1014          
   1015            return ZCL_STATUS_CMD_HAS_RSP;
   \   00008F   8030         SJMP    ??zclGeneral_ProcessInCmd_EphemeralDataReq_2
   \                     ??zclGeneral_ProcessInCmd_EphemeralDataReq_1:
   \   000091                ; Setup parameters for call to function zclGeneral_ResetKeyEstablishRec
   \   000091   A9..         MOV     R1,?V0 + 2
   \   000093   12....       LCALL   ??zclGeneral_ResetKeyEstablishRec?relay
   \                     ??zclGeneral_ProcessInCmd_EphemeralDataReq_0:
   \   000096   12....       LCALL   ?Subroutine81 & 0xFFFF
   \                     ??CrossCallReturnLabel_110:
   \   000099   F5..         MOV     ?V0 + 3,A
   \   00009B   78..         MOV     R0,#?V0 + 3
   \   00009D   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0000A0   75..00       MOV     ?V0 + 3,#0x0
   \   0000A3   78..         MOV     R0,#?V0 + 3
   \   0000A5   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0000A8   75..01       MOV     ?V0 + 3,#0x1
   \   0000AB   78..         MOV     R0,#?V0 + 3
   \   0000AD   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0000B0   75..01       MOV     ?V0 + 4,#0x1
   \   0000B3   75..00       MOV     ?V0 + 5,#0x0
   \   0000B6   78..         MOV     R0,#?V0 + 4
   \   0000B8   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000BB   12....       LCALL   ?Subroutine22 & 0xFFFF
   \                     ??CrossCallReturnLabel_196:
   \   0000BE   12....       LCALL   ?DEALLOC_XSTACK8
   \                     ??zclGeneral_ProcessInCmd_EphemeralDataReq_2:
   \   0000C1   79FF         MOV     R1,#-0x1
   \   0000C3   02....       LJMP    ?Subroutine2 & 0xFFFF
   1016          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine25:
   \   000000   A3           INC     DPTR
   \   000001   A3           INC     DPTR
   \   000002   A3           INC     DPTR
   \   000003   A3           INC     DPTR
   \   000004   A3           INC     DPTR
   \   000005   A3           INC     DPTR
   \   000006   A3           INC     DPTR
   \   000007   A3           INC     DPTR
   \   000008                REQUIRE ??Subroutine110_0
   \   000008                ; // Fall through to label ??Subroutine110_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine110_0:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   F5..         MOV     ?V0 + 4,A
   \   000003   A3           INC     DPTR
   \   000004   E0           MOVX    A,@DPTR
   \   000005   F5..         MOV     ?V0 + 5,A
   \   000007   75..00       MOV     ?V0 + 6,#0x0
   \   00000A   78..         MOV     R0,#?V0 + 4
   \   00000C   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine52:
   \   000000   12....       LCALL   ?Subroutine84 & 0xFFFF
   \                     ??CrossCallReturnLabel_118:
   \   000003   6402         XRL     A,#0x2
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine84:
   \   000000   74..         MOV     A,#(keyEstablishRec + 24) & 0xff
   \   000002   28           ADD     A,R0
   \   000003   F582         MOV     DPL,A
   \   000005   74..         MOV     A,#((keyEstablishRec + 24) >> 8) & 0xff
   \   000007   12....       LCALL   ?Subroutine97 & 0xFFFF
   \                     ??CrossCallReturnLabel_185:
   \   00000A   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine86:
   \   000000   75F027       MOV     B,#0x27
   \   000003   A4           MUL     AB
   \   000004   F8           MOV     R0,A
   \   000005   A9F0         MOV     R1,B
   \   000007   74..         MOV     A,#(keyEstablishRec + 22) & 0xff
   \   000009   28           ADD     A,R0
   \   00000A   F582         MOV     DPL,A
   \   00000C   74..         MOV     A,#((keyEstablishRec + 22) >> 8) & 0xff
   \   00000E   12....       LCALL   ?Subroutine97 & 0xFFFF
   \                     ??CrossCallReturnLabel_187:
   \   000011   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine48:
   \   000000   12....       LCALL   ??Subroutine129_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_242:
   \   000003                ; Setup parameters for call to function osal_memcpy
   \   000003                ; Setup parameters for call to function osal_memcpy
   \   000003   85..82       MOV     DPL,?V0 + 0
   \   000006   85..83       MOV     DPH,?V0 + 1
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine24:
   \   000000   8A..         MOV     ?V0 + 0,R2
   \   000002   8B..         MOV     ?V0 + 1,R3
   \   000004                ; Setup parameters for call to function osal_stop_timerEx
   \   000004                ; Setup parameters for call to function osal_stop_timerEx
   \   000004   7A01         MOV     R2,#0x1
   \   000006   7B00         MOV     R3,#0x0
   \   000008   90....       MOV     DPTR,#zcl_KeyEstablishment_TaskID
   \   00000B   E0           MOVX    A,@DPTR
   \   00000C   F9           MOV     R1,A
   \   00000D   12....       LCALL   ??osal_stop_timerEx?relay
   \   000010                ; Setup parameters for call to function zclGeneral_GetKeyEstablishRecIndex
   \   000010                ; Setup parameters for call to function zclGeneral_GetKeyEstablishRecIndex
   \   000010   85..82       MOV     DPL,?V0 + 0
   \   000013   85..83       MOV     DPH,?V0 + 1
   \   000016   12....       LCALL   ?Subroutine79 & 0xFFFF
   \                     ??CrossCallReturnLabel_106:
   \   000019   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine79:
   \   000000   12....       LCALL   ?Subroutine94 & 0xFFFF
   \                     ??CrossCallReturnLabel_126:
   \   000003   12....       LCALL   ??zclGeneral_GetKeyEstablishRecIndex?relay
   \   000006   E9           MOV     A,R1
   \   000007   F8           MOV     R0,A
   \   000008   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine50:
   \   000000   12....       LCALL   ?Subroutine86 & 0xFFFF
   \                     ??CrossCallReturnLabel_180:
   \   000003   6401         XRL     A,#0x1
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine22:
   \   000000   7D1C         MOV     R5,#0x1c
   \   000002   7C03         MOV     R4,#0x3
   \   000004                REQUIRE ??Subroutine120_0
   \   000004                ; // Fall through to label ??Subroutine120_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine120_0:
   \   000000   85..82       MOV     DPL,?V0 + 0
   \   000003   85..83       MOV     DPH,?V0 + 1
   \   000006                REQUIRE ??Subroutine121_0
   \   000006                ; // Fall through to label ??Subroutine121_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine94:
   \   000000   12....       LCALL   ?Subroutine98 & 0xFFFF
   \                     ??CrossCallReturnLabel_174:
   \   000003   A3           INC     DPTR
   \   000004   A3           INC     DPTR
   \   000005   A3           INC     DPTR
   \   000006   A3           INC     DPTR
   \   000007   12....       LCALL   ?Subroutine99 & 0xFFFF
   \                     ??CrossCallReturnLabel_254:
   \   00000A   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine71:
   \   000000   EE           MOV     A,R6
   \   000001   241B         ADD     A,#0x1b
   \   000003   F582         MOV     DPL,A
   \   000005   EF           MOV     A,R7
   \   000006   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine129_0:
   \   000000   74..         MOV     A,#keyEstablishRec & 0xff
   \   000002   28           ADD     A,R0
   \   000003   FE           MOV     R6,A
   \   000004   74..         MOV     A,#(keyEstablishRec >> 8) & 0xff
   \   000006   39           ADDC    A,R1
   \   000007   FF           MOV     R7,A
   \   000008   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine23:
   \   000000   7C16         MOV     R4,#0x16
   \   000002   7D00         MOV     R5,#0x0
   \   000004   EE           MOV     A,R6
   \   000005   241D         ADD     A,#0x1d
   \   000007                REQUIRE ??Subroutine130_0
   \   000007                ; // Fall through to label ??Subroutine130_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine130_0:
   \   000000   F582         MOV     DPL,A
   \   000002   EF           MOV     A,R7
   \   000003   3400         ADDC    A,#0x0
   \   000005                REQUIRE ??Subroutine131_0
   \   000005                ; // Fall through to label ??Subroutine131_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine17:
   \   000000   F0           MOVX    @DPTR,A
   \   000001   12....       LCALL   ?Subroutine92 & 0xFFFF
   \                     ??CrossCallReturnLabel_267:
   \   000004   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine92:
   \   000000   EE           MOV     A,R6
   \   000001   2418         ADD     A,#0x18
   \   000003                REQUIRE ??Subroutine134_0
   \   000003                ; // Fall through to label ??Subroutine134_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine134_0:
   \   000000   F582         MOV     DPL,A
   \   000002   EF           MOV     A,R7
   \   000003                REQUIRE ??Subroutine135_0
   \   000003                ; // Fall through to label ??Subroutine135_0
   1017          
   1018          
   1019          /*********************************************************************
   1020           * @fn      zclGeneral_ProcessInCmd_InitiateKeyEstablishRsp
   1021           *
   1022           * @brief   Process the received Initiate Key Establishment Response.
   1023           *
   1024           * @param   pInMsg - pointer to the incoming message
   1025           *
   1026           * @return  ZStatus_t - ZFailure @ Unsupported
   1027           *                      ZCL_STATUS_MALFORMED_COMMAND
   1028           *                      ZCL_STATUS_CMD_HAS_RSP
   1029           *                      ZCL_STATUS_SOFTWARE_FAILURE
   1030           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1031          static ZStatus_t zclGeneral_ProcessInCmd_InitiateKeyEstablishRsp( zclIncoming_t *pInMsg )
   \                     zclGeneral_ProcessInCmd_InitiateKeyEstablishRsp:
   1032          {
   \   000000   74EC         MOV     A,#-0x14
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 20
   \   000005                ; Auto size: 8
   \   000005   74F8         MOV     A,#-0x8
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   8A..         MOV     ?V0 + 2,R2
   \   00000C   8B..         MOV     ?V0 + 3,R3
   1033            TermKeyStatus_t keyStatus = TermKeyStatus_Success;
   \   00000E   7F00         MOV     R7,#0x0
   1034            uint16 remoteKeyEstablishmentSuite;
   1035            uint8 index = MAX_KEY_ESTABLISHMENT_REC_ENTRY; // set to non valid value
   \   000010   7E02         MOV     R6,#0x2
   1036            uint8 status = ZFailure;
   1037            uint8 recvExtAddr[Z_EXTADDR_LEN];
   1038          
   1039            // Stop the Key Establishment aging timer because the message has been received
   1040            osal_stop_timerEx( zcl_KeyEstablishment_TaskID, KEY_ESTABLISHMENT_REC_AGING_EVT );
   \   000012                ; Setup parameters for call to function osal_stop_timerEx
   \   000012   12....       LCALL   ?Subroutine38 & 0xFFFF
   1041          
   1042            // Check the incoming packet length
   1043            if ( pInMsg->pDataLen >= PACKET_LEN_INITIATE_KEY_EST_RSP )
   \                     ??CrossCallReturnLabel_49:
   \   000015   85..82       MOV     DPL,?V0 + 2
   \   000018   85..83       MOV     DPH,?V0 + 3
   \   00001B   A3           INC     DPTR
   \   00001C   A3           INC     DPTR
   \   00001D   A3           INC     DPTR
   \   00001E   A3           INC     DPTR
   \   00001F   A3           INC     DPTR
   \   000020   A3           INC     DPTR
   \   000021   A3           INC     DPTR
   \   000022   A3           INC     DPTR
   \   000023   A3           INC     DPTR
   \   000024   A3           INC     DPTR
   \   000025   C3           CLR     C
   \   000026   E0           MOVX    A,@DPTR
   \   000027   9434         SUBB    A,#0x34
   \   000029   A3           INC     DPTR
   \   00002A   E0           MOVX    A,@DPTR
   \   00002B   9400         SUBB    A,#0x0
   \   00002D   5003         JNC     $+5
   \   00002F   02....       LJMP    ??zclGeneral_ProcessInCmd_InitiateKeyEstablishR_1 & 0xFFFF
   1044            {
   1045              // Check state of the key establishment record. If not match, terminate the procedure
   1046              if ( ( index = zclGeneral_GetKeyEstablishRecIndex( pInMsg->msg->srcAddr.addr.shortAddr ) )
   1047                  < MAX_KEY_ESTABLISHMENT_REC_ENTRY )
   \   000032                ; Setup parameters for call to function zclGeneral_GetKeyEstablishRecIndex
   \   000032   85..82       MOV     DPL,?V0 + 2
   \   000035   85..83       MOV     DPH,?V0 + 3
   \   000038   12....       LCALL   ?Subroutine27 & 0xFFFF
   \                     ??CrossCallReturnLabel_26:
   \   00003B   4003         JC      $+5
   \   00003D   02....       LJMP    ??zclGeneral_ProcessInCmd_InitiateKeyEstablishR_1 & 0xFFFF
   1048              {
   1049                if ( keyEstablishRec[index].role == KEY_ESTABLISHMENT_INITIATOR &&
   1050                    keyEstablishRec[index].state == KeyEstablishState_InitiatePending )
   \   000040   EE           MOV     A,R6
   \   000041   12....       LCALL   ??Subroutine115_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_176:
   \   000044   6003         JZ      $+5
   \   000046   02....       LJMP    ??zclGeneral_ProcessInCmd_InitiateKeyEstablishR_2 & 0xFFFF
   \   000049   12....       LCALL   ?Subroutine84 & 0xFFFF
   \                     ??CrossCallReturnLabel_117:
   \   00004C   6401         XRL     A,#0x1
   \   00004E   6003         JZ      $+5
   \   000050   02....       LJMP    ??zclGeneral_ProcessInCmd_InitiateKeyEstablishR_2 & 0xFFFF
   1051                {
   1052                  // Parse the incoming message
   1053                  // Copy the remote device certificate
   1054                  osal_memcpy( keyEstablishRec[index].pRemoteCertificate, &(pInMsg->pData[KEY_ESTABLISH_CERT_IDX]),
   1055                               ZCL_KE_IMPLICIT_CERTIFICATE_LEN );
   \   000053   12....       LCALL   ??Subroutine101_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_136:
   \   000056   241F         ADD     A,#0x1f
   \   000058   F5..         MOV     ?V0 + 8,A
   \   00005A   E5..         MOV     A,?V0 + 1
   \   00005C   3400         ADDC    A,#0x0
   \   00005E   F5..         MOV     ?V0 + 9,A
   \   000060                ; Setup parameters for call to function osal_memcpy
   \   000060   85..82       MOV     DPL,?V0 + 2
   \   000063   85..83       MOV     DPH,?V0 + 3
   \   000066   A3           INC     DPTR
   \   000067   A3           INC     DPTR
   \   000068   A3           INC     DPTR
   \   000069   A3           INC     DPTR
   \   00006A   A3           INC     DPTR
   \   00006B   A3           INC     DPTR
   \   00006C   A3           INC     DPTR
   \   00006D   A3           INC     DPTR
   \   00006E   12....       LCALL   ?Subroutine37 & 0xFFFF
   \                     ??CrossCallReturnLabel_47:
   \   000071   8F..         MOV     ?V0 + 6,R7
   \   000073   78..         MOV     R0,#?V0 + 4
   \   000075   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   000078   7C30         MOV     R4,#0x30
   \   00007A   7D00         MOV     R5,#0x0
   \   00007C   85..82       MOV     DPL,?V0 + 8
   \   00007F   85..83       MOV     DPH,?V0 + 9
   \   000082   12....       LCALL   ??Subroutine132_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_252:
   \   000085   12....       LCALL   ?DEALLOC_XSTACK8
   1056          
   1057                  // look for extended address of partner device
   1058                  AddrMgrExtAddrLookup(keyEstablishRec[index].dstAddr.addr.shortAddr,
   1059                                       keyEstablishRec[index].partnerExtAddr);
   \   000088   E5..         MOV     A,?V0 + 0
   \   00008A   240E         ADD     A,#0xe
   \   00008C   F5..         MOV     ?V0 + 10,A
   \   00008E   E5..         MOV     A,?V0 + 1
   \   000090   3400         ADDC    A,#0x0
   \   000092   F5..         MOV     ?V0 + 11,A
   \   000094                ; Setup parameters for call to function AddrMgrExtAddrLookup
   \   000094   AC..         MOV     R4,?V0 + 10
   \   000096   FD           MOV     R5,A
   \   000097   85..82       MOV     DPL,?V0 + 0
   \   00009A   85..83       MOV     DPH,?V0 + 1
   \   00009D   12....       LCALL   ??Subroutine113_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_168:
   \   0000A0   12....       LCALL   ??AddrMgrExtAddrLookup?relay
   1060          
   1061                  // retrieve extended address from certificate and reverse bytes
   1062                  SSP_MemCpyReverse( recvExtAddr,
   1063                                     &(keyEstablishRec[index].pRemoteCertificate[KEY_ESTABLISH_CERT_EXT_ADDR_IDX]),
   1064                                     Z_EXTADDR_LEN);
   \   0000A3                ; Setup parameters for call to function SSP_MemCpyReverse
   \   0000A3   75..08       MOV     ?V0 + 0,#0x8
   \   0000A6   8F..         MOV     ?V0 + 1,R7
   \   0000A8   78..         MOV     R0,#?V0 + 0
   \   0000AA   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000AD   85..82       MOV     DPL,?V0 + 8
   \   0000B0   85..83       MOV     DPH,?V0 + 9
   \   0000B3   12....       LCALL   ?Subroutine43 & 0xFFFF
   \                     ??CrossCallReturnLabel_57:
   \   0000B6   7402         MOV     A,#0x2
   \   0000B8   12....       LCALL   ?XSTACK_DISP0_8
   \   0000BB   12....       LCALL   ??Subroutine111_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_276:
   \   0000BE   12....       LCALL   ?DEALLOC_XSTACK8
   1065          
   1066                  // verify extended address in certificate matches partner's extended address
   1067                  if (osal_memcmp(keyEstablishRec[index].partnerExtAddr, recvExtAddr, Z_EXTADDR_LEN))
   \   0000C1                ; Setup parameters for call to function osal_memcmp
   \   0000C1   85..82       MOV     DPL,?XSP + 0
   \   0000C4   85..83       MOV     DPH,?XSP + 1
   \   0000C7   A982         MOV     R1,DPL
   \   0000C9   AA83         MOV     R2,DPH
   \   0000CB   89..         MOV     ?V0 + 4,R1
   \   0000CD   8A..         MOV     ?V0 + 5,R2
   \   0000CF   78..         MOV     R0,#?V0 + 4
   \   0000D1   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   0000D4   7C08         MOV     R4,#0x8
   \   0000D6   7D00         MOV     R5,#0x0
   \   0000D8   85..82       MOV     DPL,?V0 + 10
   \   0000DB   85..83       MOV     DPH,?V0 + 11
   \   0000DE   12....       LCALL   ?Subroutine74 & 0xFFFF
   \                     ??CrossCallReturnLabel_188:
   \   0000E1   12....       LCALL   ?DEALLOC_XSTACK8
   \   0000E4   E9           MOV     A,R1
   \   0000E5   7003         JNZ     $+5
   \   0000E7   02....       LJMP    ??zclGeneral_ProcessInCmd_InitiateKeyEstablishR_1 & 0xFFFF
   1068                  {
   1069                    status = ZSuccess;
   1070                  }
   1071                }
   1072                else
   1073                {
   1074                  // Reset the entry from the rec table
   1075                  zclGeneral_ResetKeyEstablishRec( index );
   1076                }
   1077              }
   1078            }
   1079          
   1080            if ( status == ZFailure )
   1081            {
   1082              keyStatus = TermKeyStatus_BadMessage;
   1083            }
   1084            else
   1085            {
   1086              uint8 *implicitCert;
   1087          
   1088              // Parse the incoming message
   1089              // Verify the certificate issuer and key establishment suite
   1090              remoteKeyEstablishmentSuite = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
   1091              if ( remoteKeyEstablishmentSuite != KEY_ESTABLISHMENT_SUITE )
   \   0000EA   E5..         MOV     A,?V0 + 2
   \   0000EC   2408         ADD     A,#0x8
   \   0000EE   F8           MOV     R0,A
   \   0000EF   E5..         MOV     A,?V0 + 3
   \   0000F1   3400         ADDC    A,#0x0
   \   0000F3   F9           MOV     R1,A
   \   0000F4   8882         MOV     DPL,R0
   \   0000F6   8983         MOV     DPH,R1
   \   0000F8   12....       LCALL   ?Subroutine30 & 0xFFFF
   \                     ??CrossCallReturnLabel_31:
   \   0000FB   7001         JNZ     ??zclGeneral_ProcessInCmd_InitiateKeyEstablishR_3
   \   0000FD   E9           MOV     A,R1
   \                     ??zclGeneral_ProcessInCmd_InitiateKeyEstablishR_3:
   \   0000FE   6003         JZ      $+5
   \   000100   02....       LJMP    ??zclGeneral_ProcessInCmd_InitiateKeyEstablishR_4 & 0xFFFF
   1092              {
   1093                keyStatus = TermKeyStatus_UnSupportedSuite;
   1094              }
   1095              else
   1096              {
   1097                // continue parsing message
   1098          
   1099                // Save Ephemeral Data Generate Key and Confirm Key Time
   1100                if (pInMsg->pData[2] >= KEY_ESTABLISHMENT_EPH_DATA_GEN_INVALID_TIME)
   \   000103   85..82       MOV     DPL,?V0 + 2
   \   000106   85..83       MOV     DPH,?V0 + 3
   \   000109   12....       LCALL   ?Subroutine33 & 0xFFFF
   \                     ??CrossCallReturnLabel_39:
   \   00010C   7003         JNZ     $+5
   \   00010E   02....       LJMP    ??zclGeneral_ProcessInCmd_InitiateKeyEstablishR_5 & 0xFFFF
   1101                {
   1102                  status = TermKeyStatus_BadMessage;
   1103                }
   1104                else
   1105                {
   1106                  // continue parsing message
   1107          
   1108                  keyEstablishRec[index].remoteEphDataGenTime = pInMsg->pData[2];
   \   000111   E5..         MOV     A,?V0 + 2
   \   000113   2408         ADD     A,#0x8
   \   000115   F8           MOV     R0,A
   \   000116   E5..         MOV     A,?V0 + 3
   \   000118   12....       LCALL   ?Subroutine66 & 0xFFFF
   \                     ??CrossCallReturnLabel_93:
   \   00011B   FA           MOV     R2,A
   \   00011C   A3           INC     DPTR
   \   00011D   E0           MOVX    A,@DPTR
   \   00011E   F583         MOV     DPH,A
   \   000120   8A82         MOV     DPL,R2
   \   000122   A3           INC     DPTR
   \   000123   A3           INC     DPTR
   \   000124   E0           MOVX    A,@DPTR
   \   000125   C0E0         PUSH    A
   \   000127   EE           MOV     A,R6
   \   000128   75F027       MOV     B,#0x27
   \   00012B   A4           MUL     AB
   \   00012C   FA           MOV     R2,A
   \   00012D   ABF0         MOV     R3,B
   \   00012F   74..         MOV     A,#(keyEstablishRec + 37) & 0xff
   \   000131   2A           ADD     A,R2
   \   000132   F582         MOV     DPL,A
   \   000134   74..         MOV     A,#((keyEstablishRec + 37) >> 8) & 0xff
   \   000136   3B           ADDC    A,R3
   \   000137   F583         MOV     DPH,A
   \   000139   D0E0         POP     A
   \   00013B   12....       LCALL   ?Subroutine21 & 0xFFFF
   1109          
   1110                  if (pInMsg->pData[3] >= KEY_ESTABLISHMENT_CONF_KEY_GEN_INVALID_TIME)
   \                     ??CrossCallReturnLabel_20:
   \   00013E   F583         MOV     DPH,A
   \   000140   8882         MOV     DPL,R0
   \   000142   A3           INC     DPTR
   \   000143   A3           INC     DPTR
   \   000144   A3           INC     DPTR
   \   000145   E0           MOVX    A,@DPTR
   \   000146   F4           CPL     A
   \   000147   7003         JNZ     $+5
   \   000149   02....       LJMP    ??zclGeneral_ProcessInCmd_InitiateKeyEstablishR_5 & 0xFFFF
   1111                  {
   1112                    status = TermKeyStatus_BadMessage;
   1113                  }
   1114                  else
   1115                  {
   1116                    // continue parsing message
   1117          
   1118                    keyEstablishRec[index].remoteConfKeyGenTime = pInMsg->pData[3];
   \   00014C   85..82       MOV     DPL,?V0 + 2
   \   00014F   85..83       MOV     DPH,?V0 + 3
   \   000152   12....       LCALL   ?Subroutine29 & 0xFFFF
   \                     ??CrossCallReturnLabel_171:
   \   000155   C0E0         PUSH    A
   \   000157   EE           MOV     A,R6
   \   000158   75F027       MOV     B,#0x27
   \   00015B   A4           MUL     AB
   \   00015C   F8           MOV     R0,A
   \   00015D   A9F0         MOV     R1,B
   \   00015F   12....       LCALL   ?Subroutine56 & 0xFFFF
   \                     ??CrossCallReturnLabel_77:
   \   000162   D0E0         POP     A
   \   000164   12....       LCALL   ?Subroutine15 & 0xFFFF
   1119          
   1120                    if ((implicitCert = osal_mem_alloc(ZCL_KE_IMPLICIT_CERTIFICATE_LEN)) == NULL)
   \                     ??CrossCallReturnLabel_7:
   \   000167   7055         JNZ     ??zclGeneral_ProcessInCmd_InitiateKeyEstablishR_6
   1121                    {
   1122                      // Reset the entry
   1123                      zclGeneral_ResetKeyEstablishRec( index );
   \   000169                ; Setup parameters for call to function zclGeneral_ResetKeyEstablishRec
   \   000169   EE           MOV     A,R6
   \   00016A   F9           MOV     R1,A
   \   00016B   12....       LCALL   ??zclGeneral_ResetKeyEstablishRec?relay
   1124          
   1125                      return ZCL_STATUS_SOFTWARE_FAILURE;  // Memory allocation failure.
   \   00016E   79C1         MOV     R1,#-0x3f
   \   000170   8043         SJMP    ??zclGeneral_ProcessInCmd_InitiateKeyEstablishR_7
   1126                    }
   \                     ??zclGeneral_ProcessInCmd_InitiateKeyEstablishR_2:
   \   000172                ; Setup parameters for call to function zclGeneral_ResetKeyEstablishRec
   \   000172   EE           MOV     A,R6
   \   000173   F9           MOV     R1,A
   \   000174   12....       LCALL   ??zclGeneral_ResetKeyEstablishRec?relay
   \                     ??zclGeneral_ProcessInCmd_InitiateKeyEstablishR_1:
   \   000177   0F           INC     R7
   \   000178   0F           INC     R7
   \   000179   0F           INC     R7
   1127          
   1128                    osal_nv_read(ZCD_NV_IMPLICIT_CERTIFICATE, 0, ZCL_KE_IMPLICIT_CERTIFICATE_LEN, implicitCert);
   1129          
   1130                    if ( !osal_memcmp( &(keyEstablishRec[index].pRemoteCertificate[KEY_ESTABLISH_CERT_ISSUER_IDX]),
   1131                                      &(implicitCert[KEY_ESTABLISH_CERT_ISSUER_IDX]),
   1132                                      KEY_ESTABLISH_CERT_ISSUER_LENTGH ) )
   1133                    {
   1134                      keyStatus = TermKeyStatus_UnknowIssuer;
   1135                    }
   1136          
   1137                    osal_mem_free(implicitCert);
   1138                  }
   1139                }
   1140              }
   1141            } // end of parsing of the message
   1142          
   1143            if ( keyStatus == TermKeyStatus_Success )
   1144            {
   1145              keyEstablishRec[index].state = KeyEstablishState_EDataPending;
   1146          
   1147              // Send Ephemeral Data Request back
   1148              zclGeneral_KeyEstablish_Send_EphemeralDataReq( ZCL_KEY_ESTABLISHMENT_ENDPOINT,
   1149                                                            &pInMsg->msg->srcAddr,
   1150                                                            keyEstablishRec[index].pLocalEPublicKey,
   1151                                                            FALSE, zcl_SeqNum++ );
   1152          
   1153              // The Request was processed successfuly, now the age timer needs to start based on the
   1154              // remote Ephemeral Data Generate Time
   1155              keyEstablishRec[index].age = keyEstablishRec[index].remoteEphDataGenTime;
   1156          
   1157              // Start the Ephemeral Data Generate aging timer
   1158              osal_start_reload_timer( zcl_KeyEstablishment_TaskID, KEY_ESTABLISHMENT_REC_AGING_EVT,
   1159                                      KEY_ESTABLISHMENT_REC_AGING_INTERVAL );
   1160            }
   1161            else
   1162            {
   1163              zclGeneral_KeyEstablish_Send_TerminateKeyEstablishment( ZCL_KEY_ESTABLISHMENT_ENDPOINT,
   1164                                                                     &pInMsg->msg->srcAddr,
   1165                                                                     keyStatus,
   1166                                                                     KEY_ESTABLISHMENT_AVG_TIMEOUT,
   1167                                                                     KEY_ESTABLISHMENT_SUITE,
   1168                                                                     ZCL_FRAME_CLIENT_SERVER_DIR,
   1169                                                                     FALSE, zcl_SeqNum++ );
   \                     ??zclGeneral_ProcessInCmd_InitiateKeyEstablishR_8:
   \   00017A   12....       LCALL   ?Subroutine35 & 0xFFFF
   \                     ??CrossCallReturnLabel_42:
   \   00017D   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000180   75..00       MOV     ?V0 + 0,#0x0
   \   000183   78..         MOV     R0,#?V0 + 0
   \   000185   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000188   78..         MOV     R0,#?V0 + 0
   \   00018A   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00018D   75..01       MOV     ?V0 + 0,#0x1
   \   000190   75..00       MOV     ?V0 + 1,#0x0
   \   000193   78..         MOV     R0,#?V0 + 0
   \   000195   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000198   7D1C         MOV     R5,#0x1c
   \   00019A   EF           MOV     A,R7
   \   00019B   FC           MOV     R4,A
   \   00019C   85..82       MOV     DPL,?V0 + 2
   \   00019F   85..83       MOV     DPH,?V0 + 3
   \   0001A2   12....       LCALL   ??Subroutine121_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_200:
   \   0001A5   12....       LCALL   ?DEALLOC_XSTACK8
   1170          
   1171              // Reset the entry
   1172              if ( index < MAX_KEY_ESTABLISHMENT_REC_ENTRY )
   \   0001A8   EE           MOV     A,R6
   \   0001A9   C3           CLR     C
   \   0001AA   9402         SUBB    A,#0x2
   \   0001AC   5005         JNC     ??zclGeneral_ProcessInCmd_InitiateKeyEstablishR_9
   1173              {
   1174                zclGeneral_ResetKeyEstablishRec( index );
   \   0001AE                ; Setup parameters for call to function zclGeneral_ResetKeyEstablishRec
   \   0001AE   EE           MOV     A,R6
   \   0001AF   F9           MOV     R1,A
   \   0001B0   12....       LCALL   ??zclGeneral_ResetKeyEstablishRec?relay
   1175              }
   1176          
   1177          #if defined (NWK_AUTO_POLL)
   1178              // Restore the saved poll rate for end device
   1179              NLME_SetPollRate(zclSavedPollRate);
   1180          #endif
   1181            }
   1182          
   1183            return ZCL_STATUS_CMD_HAS_RSP;
   \                     ??zclGeneral_ProcessInCmd_InitiateKeyEstablishR_9:
   \   0001B3   79FF         MOV     R1,#-0x1
   \                     ??zclGeneral_ProcessInCmd_InitiateKeyEstablishR_7:
   \   0001B5   7408         MOV     A,#0x8
   \   0001B7   02....       LJMP    ?Subroutine7 & 0xFFFF
   \                     ??zclGeneral_ProcessInCmd_InitiateKeyEstablishR_4:
   \   0001BA   7F05         MOV     R7,#0x5
   \   0001BC   80BC         SJMP    ??zclGeneral_ProcessInCmd_InitiateKeyEstablishR_8
   \                     ??zclGeneral_ProcessInCmd_InitiateKeyEstablishR_6:
   \   0001BE                ; Setup parameters for call to function osal_nv_read
   \   0001BE   78..         MOV     R0,#?V0 + 8
   \   0001C0   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0001C3   75..30       MOV     ?V0 + 0,#0x30
   \   0001C6   78..         MOV     R0,#?V0 + 0
   \   0001C8   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0001CB   12....       LCALL   ?Subroutine68 & 0xFFFF
   \                     ??CrossCallReturnLabel_130:
   \   0001CE   12....       LCALL   ?DEALLOC_XSTACK8
   \   0001D1                ; Setup parameters for call to function osal_memcmp
   \   0001D1   E5..         MOV     A,?V0 + 8
   \   0001D3   241E         ADD     A,#0x1e
   \   0001D5   F5..         MOV     ?V0 + 0,A
   \   0001D7   E5..         MOV     A,?V0 + 9
   \   0001D9   3400         ADDC    A,#0x0
   \   0001DB   85....       MOV     ?V0 + 4,?V0 + 0
   \   0001DE   F5..         MOV     ?V0 + 5,A
   \   0001E0   78..         MOV     R0,#?V0 + 4
   \   0001E2   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   0001E5   7C08         MOV     R4,#0x8
   \   0001E7   7D00         MOV     R5,#0x0
   \   0001E9   EE           MOV     A,R6
   \   0001EA   12....       LCALL   ?Subroutine49 & 0xFFFF
   \                     ??CrossCallReturnLabel_67:
   \   0001ED   F5..         MOV     ?V0 + 0,A
   \   0001EF   A3           INC     DPTR
   \   0001F0   E0           MOVX    A,@DPTR
   \   0001F1   3400         ADDC    A,#0x0
   \   0001F3   A9..         MOV     R1,?V0 + 0
   \   0001F5   FA           MOV     R2,A
   \   0001F6   12....       LCALL   ??Subroutine118_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_192:
   \   0001F9   12....       LCALL   ?DEALLOC_XSTACK8
   \   0001FC   E9           MOV     A,R1
   \   0001FD   7001         JNZ     ??zclGeneral_ProcessInCmd_InitiateKeyEstablishR_10
   \   0001FF   0F           INC     R7
   \                     ??zclGeneral_ProcessInCmd_InitiateKeyEstablishR_10:
   \   000200                ; Setup parameters for call to function osal_mem_free
   \   000200   AA..         MOV     R2,?V0 + 8
   \   000202   AB..         MOV     R3,?V0 + 9
   \   000204   12....       LCALL   ??osal_mem_free?relay
   \   000207   EF           MOV     A,R7
   \   000208   6003         JZ      $+5
   \   00020A   02....       LJMP    ??zclGeneral_ProcessInCmd_InitiateKeyEstablishR_8 & 0xFFFF
   \                     ??zclGeneral_ProcessInCmd_InitiateKeyEstablishR_5:
   \   00020D   EE           MOV     A,R6
   \   00020E   12....       LCALL   ?Subroutine45 & 0xFFFF
   \                     ??CrossCallReturnLabel_138:
   \   000211   12....       LCALL   ??Subroutine124_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_230:
   \   000214   7402         MOV     A,#0x2
   \   000216   F0           MOVX    @DPTR,A
   \   000217   12....       LCALL   ?Subroutine34 & 0xFFFF
   \                     ??CrossCallReturnLabel_41:
   \   00021A   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00021D   75..00       MOV     ?V0 + 4,#0x0
   \   000220   78..         MOV     R0,#?V0 + 4
   \   000222   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000225   12....       LCALL   ?Subroutine41 & 0xFFFF
   \                     ??CrossCallReturnLabel_145:
   \   000228   85..82       MOV     DPL,?V0 + 2
   \   00022B   85..83       MOV     DPH,?V0 + 3
   \   00022E   12....       LCALL   ?Subroutine36 & 0xFFFF
   \                     ??CrossCallReturnLabel_45:
   \   000231   12....       LCALL   ??zclGeneral_KeyEstablish_Send_EphemeralDataReq
   \   000234   7402         MOV     A,#0x2
   \   000236   12....       LCALL   ?DEALLOC_XSTACK8
   \   000239   12....       LCALL   ?Subroutine59 & 0xFFFF
   \                     ??CrossCallReturnLabel_241:
   \   00023C   C0E0         PUSH    A
   \   00023E   12....       LCALL   ?Subroutine58 & 0xFFFF
   \                     ??CrossCallReturnLabel_82:
   \   000241   D0E0         POP     A
   \   000243   12....       LCALL   ?Subroutine13 & 0xFFFF
   \                     ??CrossCallReturnLabel_5:
   \   000246   02....       LJMP    ??zclGeneral_ProcessInCmd_InitiateKeyEstablishR_9 & 0xFFFF
   1184          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine111_0:
   \   000000   AA82         MOV     R2,DPL
   \   000002   AB83         MOV     R3,DPH
   \   000004                REQUIRE ??Subroutine112_0
   \   000004                ; // Fall through to label ??Subroutine112_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine115_0:
   \   000000   12....       LCALL   ?Subroutine86 & 0xFFFF
   \                     ??CrossCallReturnLabel_181:
   \   000003   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine74:
   \   000000   A982         MOV     R1,DPL
   \   000002   AA83         MOV     R2,DPH
   \   000004                REQUIRE ??Subroutine118_0
   \   000004                ; // Fall through to label ??Subroutine118_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine38:
   \   000000   7A01         MOV     R2,#0x1
   \   000002   7B00         MOV     R3,#0x0
   \   000004   90....       MOV     DPTR,#zcl_KeyEstablishment_TaskID
   \   000007   E0           MOVX    A,@DPTR
   \   000008   F9           MOV     R1,A
   \   000009   12....       LCALL   ??osal_stop_timerEx?relay
   \   00000C   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine27:
   \   000000   12....       LCALL   ?Subroutine80 & 0xFFFF
   \                     ??CrossCallReturnLabel_108:
   \   000003   12....       LCALL   ??zclGeneral_GetKeyEstablishRecIndex?relay
   \   000006   E9           MOV     A,R1
   \   000007   FE           MOV     R6,A
   \   000008   C3           CLR     C
   \   000009   9402         SUBB    A,#0x2
   \   00000B   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine80:
   \   000000   12....       LCALL   ?Subroutine94 & 0xFFFF
   \                     ??CrossCallReturnLabel_127:
   \   000003   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine21:
   \   000000   F0           MOVX    @DPTR,A
   \   000001   8882         MOV     DPL,R0
   \   000003   8983         MOV     DPH,R1
   \   000005   E0           MOVX    A,@DPTR
   \   000006   F8           MOV     R0,A
   \   000007   A3           INC     DPTR
   \   000008   E0           MOVX    A,@DPTR
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine35:
   \   000000   12....       LCALL   ?Subroutine81 & 0xFFFF
   \                     ??CrossCallReturnLabel_114:
   \   000003   F5..         MOV     ?V0 + 0,A
   \   000005   78..         MOV     R0,#?V0 + 0
   \   000007   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine7:
   \   000000   12....       LCALL   ?DEALLOC_XSTACK8
   \   000003   7F0C         MOV     R7,#0xc
   \   000005   02....       LJMP    ?BANKED_LEAVE_XDATA
   1185          
   1186          /*********************************************************************
   1187           * @fn      zclGeneral_ProcessInCmd_EphemeralDataRsp
   1188           *
   1189           * @brief   Process the received Initiate Key Establishment Response.
   1190           *
   1191           * @param   pInMsg - pointer to the incoming message
   1192           *
   1193           * @return  ZStatus_t - ZFailure @ Unsupported
   1194           *                      ZCL_STATUS_MALFORMED_COMMAND
   1195           *                      ZCL_STATUS_CMD_HAS_RSP
   1196           *                      ZCL_STATUS_SOFTWARE_FAILURE
   1197           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1198          static ZStatus_t zclGeneral_ProcessInCmd_EphemeralDataRsp( zclIncoming_t *pInMsg )
   \                     zclGeneral_ProcessInCmd_EphemeralDataRsp:
   1199          {
   \   000000   74F2         MOV     A,#-0xe
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 14
   \   000005                ; Auto size: 0
   \   000005   12....       LCALL   ?Subroutine24 & 0xFFFF
   1200            uint8 index;
   1201            uint8 status = ZFailure;
   1202          
   1203            // Stop the Ephemeral Data Generate timer because the message has been received
   1204            osal_stop_timerEx( zcl_KeyEstablishment_TaskID, KEY_ESTABLISHMENT_REC_AGING_EVT );
   1205          
   1206            // Check state of the key establishment record. If not match, terminate the procedure
   1207            if ( ( index = zclGeneral_GetKeyEstablishRecIndex( pInMsg->msg->srcAddr.addr.shortAddr ) )
   1208                < MAX_KEY_ESTABLISHMENT_REC_ENTRY )
   \                     ??CrossCallReturnLabel_23:
   \   000008   88..         MOV     ?V0 + 3,R0
   \   00000A   C3           CLR     C
   \   00000B   9402         SUBB    A,#0x2
   \   00000D   504D         JNC     ??zclGeneral_ProcessInCmd_EphemeralDataRsp_0
   1209            {
   1210              if ( keyEstablishRec[index].role == KEY_ESTABLISHMENT_INITIATOR &&
   1211                   keyEstablishRec[index].state == KeyEstablishState_EDataPending )
   \   00000F   12....       LCALL   ?Subroutine51 & 0xFFFF
   \                     ??CrossCallReturnLabel_178:
   \   000012   7043         JNZ     ??zclGeneral_ProcessInCmd_EphemeralDataRsp_1
   \   000014   12....       LCALL   ?Subroutine52 & 0xFFFF
   \                     ??CrossCallReturnLabel_71:
   \   000017   703E         JNZ     ??zclGeneral_ProcessInCmd_EphemeralDataRsp_1
   1212              {
   1213                status = ZSuccess;
   1214          
   1215                // Copy the remote device Ephemeral Public key
   1216                osal_memcpy( keyEstablishRec[index].pRemotePublicKey,
   1217                            &(pInMsg->pData[0]),
   1218                            ZCL_KE_CA_PUBLIC_KEY_LEN );
   \   000019   12....       LCALL   ?Subroutine48 & 0xFFFF
   1219              }
   \                     ??CrossCallReturnLabel_65:
   \   00001C   A3           INC     DPTR
   \   00001D   A3           INC     DPTR
   \   00001E   A3           INC     DPTR
   \   00001F   A3           INC     DPTR
   \   000020   A3           INC     DPTR
   \   000021   A3           INC     DPTR
   \   000022   A3           INC     DPTR
   \   000023   A3           INC     DPTR
   \   000024   E0           MOVX    A,@DPTR
   \   000025   F5..         MOV     ?V0 + 0,A
   \   000027   A3           INC     DPTR
   \   000028   E0           MOVX    A,@DPTR
   \   000029   F5..         MOV     ?V0 + 1,A
   \   00002B   75..00       MOV     ?V0 + 2,#0x0
   \   00002E   78..         MOV     R0,#?V0 + 0
   \   000030   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   000033   12....       LCALL   ?Subroutine23 & 0xFFFF
   \                     ??CrossCallReturnLabel_246:
   \   000036   12....       LCALL   ?DEALLOC_XSTACK8
   1220              else
   1221              {
   1222                // Reset the entry from the rec table
   1223                zclGeneral_ResetKeyEstablishRec( index );
   1224              }
   1225            }
   1226          
   1227            if ( status == ZFailure )
   1228            {
   1229              // No existing record found or the record found has a wrong state, terminate the procedure
   1230              zclGeneral_KeyEstablish_Send_TerminateKeyEstablishment( ZCL_KEY_ESTABLISHMENT_ENDPOINT,
   1231                                                                      &pInMsg->msg->srcAddr,
   1232                                                                      TermKeyStatus_BadMessage,
   1233                                                                      KEY_ESTABLISHMENT_AVG_TIMEOUT,
   1234                                                                      KEY_ESTABLISHMENT_SUITE,
   1235                                                                      ZCL_FRAME_CLIENT_SERVER_DIR,
   1236                                                                      FALSE, zcl_SeqNum++ );
   1237          #if defined (NWK_AUTO_POLL)
   1238              // Restore the saved poll rate for end device
   1239              NLME_SetPollRate(zclSavedPollRate);
   1240          #endif
   1241            }
   1242            else
   1243            {
   1244              keyEstablishRec[index].state = KeyEstablishState_KeyCalculatePending;
   \   000039   EE           MOV     A,R6
   \   00003A   2418         ADD     A,#0x18
   \   00003C   F582         MOV     DPL,A
   \   00003E   EF           MOV     A,R7
   \   00003F   12....       LCALL   ??Subroutine126_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_211:
   \   000042   7403         MOV     A,#0x3
   \   000044   F0           MOVX    @DPTR,A
   1245          
   1246              osal_start_timerEx( zcl_KeyEstablishment_TaskID, KEY_ESTABLISHMENT_RSP_PROCESS_EVT,
   1247                                 KEY_ESTABLISHMENT_WAIT_PERIOD );
   \   000045                ; Setup parameters for call to function osal_start_timerEx
   \   000045   7CF4         MOV     R4,#-0xc
   \   000047   7D01         MOV     R5,#0x1
   \   000049   7A04         MOV     R2,#0x4
   \   00004B   7B00         MOV     R3,#0x0
   \   00004D   90....       MOV     DPTR,#zcl_KeyEstablishment_TaskID
   \   000050   E0           MOVX    A,@DPTR
   \   000051   F9           MOV     R1,A
   \   000052   12....       LCALL   ??osal_start_timerEx?relay
   \   000055   8029         SJMP    ??zclGeneral_ProcessInCmd_EphemeralDataRsp_2
   1248          
   1249            }
   \                     ??zclGeneral_ProcessInCmd_EphemeralDataRsp_1:
   \   000057                ; Setup parameters for call to function zclGeneral_ResetKeyEstablishRec
   \   000057   A9..         MOV     R1,?V0 + 3
   \   000059   12....       LCALL   ??zclGeneral_ResetKeyEstablishRec?relay
   \                     ??zclGeneral_ProcessInCmd_EphemeralDataRsp_0:
   \   00005C   12....       LCALL   ?Subroutine20 & 0xFFFF
   \                     ??CrossCallReturnLabel_17:
   \   00005F   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000062   75..00       MOV     ?V0 + 2,#0x0
   \   000065   78..         MOV     R0,#?V0 + 2
   \   000067   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00006A   78..         MOV     R0,#?V0 + 2
   \   00006C   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00006F   75..01       MOV     ?V0 + 4,#0x1
   \   000072   75..00       MOV     ?V0 + 5,#0x0
   \   000075   78..         MOV     R0,#?V0 + 4
   \   000077   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00007A   12....       LCALL   ?Subroutine22 & 0xFFFF
   \                     ??CrossCallReturnLabel_197:
   \   00007D   12....       LCALL   ?DEALLOC_XSTACK8
   1250          
   1251            return ZCL_STATUS_CMD_HAS_RSP;
   \                     ??zclGeneral_ProcessInCmd_EphemeralDataRsp_2:
   \   000080   79FF         MOV     R1,#-0x1
   \   000082   80..         SJMP    ??Subroutine116_0
   1252          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine51:
   \   000000   E8           MOV     A,R0
   \   000001                REQUIRE ??Subroutine115_0
   \   000001                ; // Fall through to label ??Subroutine115_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine116_0:
   \   000000   7F06         MOV     R7,#0x6
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine20:
   \   000000   12....       LCALL   ?Subroutine81 & 0xFFFF
   \                     ??CrossCallReturnLabel_112:
   \   000003   F5..         MOV     ?V0 + 2,A
   \   000005   78..         MOV     R0,#?V0 + 2
   \   000007   22           RET
   1253          
   1254          /*********************************************************************
   1255           * @fn      zclGeneral_ProcessInCmd_ConfirmKey
   1256           *
   1257           * @brief   Process the received Confirm Key Command.
   1258           *
   1259           * @param   pInMsg - pointer to the incoming message
   1260           *
   1261           * @return  ZStatus_t - ZFailure @ Unsupported
   1262           *                      ZCL_STATUS_CMD_HAS_RSP
   1263           *                      ZCL_STATUS_SOFTWARE_FAILURE
   1264           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1265          static ZStatus_t zclGeneral_ProcessInCmd_ConfirmKey( zclIncoming_t *pInMsg )
   \                     zclGeneral_ProcessInCmd_ConfirmKey:
   1266          {
   \   000000   74F1         MOV     A,#-0xf
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 15
   \   000005                ; Auto size: 32
   \   000005   74E0         MOV     A,#-0x20
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   8A..         MOV     ?V0 + 0,R2
   \   00000C   8B..         MOV     ?V0 + 1,R3
   1267            uint8 index;
   1268            uint8 status = ZFailure;
   1269            uint8 MACu[KEY_ESTABLISH_MAC_KEY_LENGTH];
   1270            uint8 MACv[KEY_ESTABLISH_MAC_KEY_LENGTH];
   1271            TermKeyStatus_t keyStatus = TermKeyStatus_Success;
   \   00000E   7F00         MOV     R7,#0x0
   1272          
   1273            // Stop the Config Key Generate aging timer because the message has been received
   1274            osal_stop_timerEx( zcl_KeyEstablishment_TaskID, KEY_ESTABLISHMENT_REC_AGING_EVT );
   \   000010                ; Setup parameters for call to function osal_stop_timerEx
   \   000010   12....       LCALL   ?Subroutine38 & 0xFFFF
   1275          
   1276            // Check state of the key establishment record. If not match, terminate the procedure
   1277            if ( ( index = zclGeneral_GetKeyEstablishRecIndex( pInMsg->msg->srcAddr.addr.shortAddr ) )
   1278                < MAX_KEY_ESTABLISHMENT_REC_ENTRY )
   \                     ??CrossCallReturnLabel_50:
   \   000013                ; Setup parameters for call to function zclGeneral_GetKeyEstablishRecIndex
   \   000013   85..82       MOV     DPL,?V0 + 0
   \   000016   85..83       MOV     DPH,?V0 + 1
   \   000019   12....       LCALL   ?Subroutine27 & 0xFFFF
   \                     ??CrossCallReturnLabel_27:
   \   00001C   4003         JC      $+5
   \   00001E   02....       LJMP    ??zclGeneral_ProcessInCmd_ConfirmKey_0 & 0xFFFF
   1279            {
   1280              if ( keyEstablishRec[index].role == KEY_ESTABLISHMENT_RESPONDER &&
   1281                   keyEstablishRec[index].state == KeyEstablishState_ConfirmPending )
   \   000021   EE           MOV     A,R6
   \   000022   12....       LCALL   ?Subroutine50 & 0xFFFF
   \                     ??CrossCallReturnLabel_69:
   \   000025   6003         JZ      $+5
   \   000027   02....       LJMP    ??zclGeneral_ProcessInCmd_ConfirmKey_1 & 0xFFFF
   \   00002A   12....       LCALL   ?Subroutine53 & 0xFFFF
   \                     ??CrossCallReturnLabel_72:
   \   00002D   6003         JZ      $+5
   \   00002F   02....       LJMP    ??zclGeneral_ProcessInCmd_ConfirmKey_1 & 0xFFFF
   1282              {
   1283                status = ZSuccess;
   1284              }
   1285              else
   1286              {
   1287                // Reset the entry
   1288                zclGeneral_ResetKeyEstablishRec( index );
   1289              }
   1290            }
   1291          
   1292            if ( status == ZFailure )
   1293            {
   1294              keyStatus = TermKeyStatus_BadMessage;
   1295            }
   1296            else
   1297            {
   1298              // Calculate MAC(U). Note that the zData is also pointing to the macKey
   1299              zclGeneral_KeyEstablishment_GenerateMAC( index, TRUE, MACu );
   \   000032                ; Setup parameters for call to function zclGeneral_KeyEstablishment_GenerateMAC
   \   000032   7410         MOV     A,#0x10
   \   000034   12....       LCALL   ?XSTACK_DISP0_8
   \   000037   AC82         MOV     R4,DPL
   \   000039   AD83         MOV     R5,DPH
   \   00003B   7A01         MOV     R2,#0x1
   \   00003D   12....       LCALL   ?Subroutine77 & 0xFFFF
   1300          
   1301              // Compare MAC(U) with MAC(V)
   1302              if ( osal_memcmp( MACu, pInMsg->pData, KEY_ESTABLISH_MAC_LENGTH ) == TRUE )
   \                     ??CrossCallReturnLabel_102:
   \   000040   A3           INC     DPTR
   \   000041   A3           INC     DPTR
   \   000042   A3           INC     DPTR
   \   000043   A3           INC     DPTR
   \   000044   A3           INC     DPTR
   \   000045   A3           INC     DPTR
   \   000046   A3           INC     DPTR
   \   000047   A3           INC     DPTR
   \   000048   E0           MOVX    A,@DPTR
   \   000049   F5..         MOV     ?V0 + 4,A
   \   00004B   A3           INC     DPTR
   \   00004C   E0           MOVX    A,@DPTR
   \   00004D   F5..         MOV     ?V0 + 5,A
   \   00004F   8F..         MOV     ?V0 + 6,R7
   \   000051   78..         MOV     R0,#?V0 + 4
   \   000053   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   000056   7C10         MOV     R4,#0x10
   \   000058   7D00         MOV     R5,#0x0
   \   00005A   7413         MOV     A,#0x13
   \   00005C   12....       LCALL   ?XSTACK_DISP0_8
   \   00005F   12....       LCALL   ?Subroutine74 & 0xFFFF
   \                     ??CrossCallReturnLabel_189:
   \   000062   12....       LCALL   ?DEALLOC_XSTACK8
   \   000065   E9           MOV     A,R1
   \   000066   6401         XRL     A,#0x1
   \   000068   6003         JZ      $+5
   \   00006A   02....       LJMP    ??zclGeneral_ProcessInCmd_ConfirmKey_2 & 0xFFFF
   1303              {
   1304                // Send Confirm Key Response with Status - SUCCESS
   1305                keyEstablishRec[index].state = KeyEstablishState_TerminationPending;
   \   00006D   EE           MOV     A,R6
   \   00006E   12....       LCALL   ?Subroutine54 & 0xFFFF
   \                     ??CrossCallReturnLabel_194:
   \   000071   2418         ADD     A,#0x18
   \   000073   F582         MOV     DPL,A
   \   000075   E9           MOV     A,R1
   \   000076   12....       LCALL   ??Subroutine126_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_212:
   \   000079   7405         MOV     A,#0x5
   \   00007B   F0           MOVX    @DPTR,A
   1306          
   1307                // Store the key in the key table
   1308          
   1309                ZDSecMgrAddLinkKey( pInMsg->msg->srcAddr.addr.shortAddr,
   1310                                   keyEstablishRec[index].partnerExtAddr,
   1311                                   keyEstablishRec[index].pKey );
   \   00007C                ; Setup parameters for call to function ZDSecMgrAddLinkKey
   \   00007C   E8           MOV     A,R0
   \   00007D   2421         ADD     A,#0x21
   \   00007F   F582         MOV     DPL,A
   \   000081   E9           MOV     A,R1
   \   000082   12....       LCALL   ??Subroutine126_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_213:
   \   000085   12....       LCALL   ?PUSH_XSTACK8_X_TWO
   \   000088   E8           MOV     A,R0
   \   000089   240E         ADD     A,#0xe
   \   00008B   FC           MOV     R4,A
   \   00008C   E9           MOV     A,R1
   \   00008D   3400         ADDC    A,#0x0
   \   00008F   FD           MOV     R5,A
   \   000090   85..82       MOV     DPL,?V0 + 0
   \   000093   85..83       MOV     DPH,?V0 + 1
   \   000096   12....       LCALL   ?Subroutine28 & 0xFFFF
   \                     ??CrossCallReturnLabel_28:
   \   000099   12....       LCALL   ?DEALLOC_XSTACK8
   1312          
   1313                // Calculate MAC(V) and send it back
   1314                zclGeneral_KeyEstablishment_GenerateMAC( index, FALSE, MACv );
   \   00009C                ; Setup parameters for call to function zclGeneral_KeyEstablishment_GenerateMAC
   \   00009C   85..82       MOV     DPL,?XSP + 0
   \   00009F   85..83       MOV     DPH,?XSP + 1
   \   0000A2   AC82         MOV     R4,DPL
   \   0000A4   AD83         MOV     R5,DPH
   \   0000A6   7A00         MOV     R2,#0x0
   \   0000A8   12....       LCALL   ?Subroutine77 & 0xFFFF
   1315          
   1316                zclGeneral_KeyEstablish_Send_ConfirmKeyRsp( pInMsg->msg->endPoint,
   1317                                                           &pInMsg->msg->srcAddr,
   1318                                                           MACv,
   1319                                                           FALSE, pInMsg->hdr.transSeqNum );
   1320              }
   \                     ??CrossCallReturnLabel_103:
   \   0000AB   E0           MOVX    A,@DPTR
   \   0000AC   F5..         MOV     ?V0 + 2,A
   \   0000AE   A3           INC     DPTR
   \   0000AF   E0           MOVX    A,@DPTR
   \   0000B0   F5..         MOV     ?V0 + 3,A
   \   0000B2                ; Setup parameters for call to function zclGeneral_KeyEstablish_Send_ConfirmKeyRsp
   \   0000B2   85..82       MOV     DPL,?V0 + 0
   \   0000B5   85..83       MOV     DPH,?V0 + 1
   \   0000B8   A3           INC     DPTR
   \   0000B9   A3           INC     DPTR
   \   0000BA   A3           INC     DPTR
   \   0000BB   A3           INC     DPTR
   \   0000BC   A3           INC     DPTR
   \   0000BD   A3           INC     DPTR
   \   0000BE   E0           MOVX    A,@DPTR
   \   0000BF   F5..         MOV     ?V0 + 4,A
   \   0000C1   78..         MOV     R0,#?V0 + 4
   \   0000C3   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0000C6   8F..         MOV     ?V0 + 4,R7
   \   0000C8   78..         MOV     R0,#?V0 + 4
   \   0000CA   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0000CD   7402         MOV     A,#0x2
   \   0000CF   12....       LCALL   ?XSTACK_DISP0_8
   \   0000D2   AC82         MOV     R4,DPL
   \   0000D4   AD83         MOV     R5,DPH
   \   0000D6   E5..         MOV     A,?V0 + 2
   \   0000D8   2406         ADD     A,#0x6
   \   0000DA   FA           MOV     R2,A
   \   0000DB   E5..         MOV     A,?V0 + 3
   \   0000DD   3400         ADDC    A,#0x0
   \   0000DF   FB           MOV     R3,A
   \   0000E0   E5..         MOV     A,?V0 + 2
   \   0000E2   2414         ADD     A,#0x14
   \   0000E4   F582         MOV     DPL,A
   \   0000E6   E5..         MOV     A,?V0 + 3
   \   0000E8   12....       LCALL   ??Subroutine128_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_235:
   \   0000EB   F9           MOV     R1,A
   \   0000EC   12....       LCALL   ??zclGeneral_KeyEstablish_Send_ConfirmKeyRsp?re
   \   0000EF   7402         MOV     A,#0x2
   \   0000F1   12....       LCALL   ?DEALLOC_XSTACK8
   \   0000F4   800C         SJMP    ??zclGeneral_ProcessInCmd_ConfirmKey_3
   \                     ??zclGeneral_ProcessInCmd_ConfirmKey_1:
   \   0000F6                ; Setup parameters for call to function zclGeneral_ResetKeyEstablishRec
   \   0000F6   EE           MOV     A,R6
   \   0000F7   F9           MOV     R1,A
   \   0000F8   12....       LCALL   ??zclGeneral_ResetKeyEstablishRec?relay
   \                     ??zclGeneral_ProcessInCmd_ConfirmKey_0:
   \   0000FB   0F           INC     R7
   \   0000FC   0F           INC     R7
   \   0000FD   0F           INC     R7
   \   0000FE   800A         SJMP    ??zclGeneral_ProcessInCmd_ConfirmKey_4
   1321              else
   1322              {
   1323                keyStatus = TermKeyStatus_BadKeyConfirm;
   \                     ??zclGeneral_ProcessInCmd_ConfirmKey_2:
   \   000100   0F           INC     R7
   \   000101   0F           INC     R7
   1324              }
   1325          
   1326              // Reset the entry, at this point the Key Establishment process has
   1327              // finished and the record is not needed anymore
   1328              zclGeneral_ResetKeyEstablishRec( index );
   \                     ??zclGeneral_ProcessInCmd_ConfirmKey_3:
   \   000102                ; Setup parameters for call to function zclGeneral_ResetKeyEstablishRec
   \   000102   EE           MOV     A,R6
   \   000103   F9           MOV     R1,A
   \   000104   12....       LCALL   ??zclGeneral_ResetKeyEstablishRec?relay
   1329            }
   1330          
   1331            if( keyStatus != TermKeyStatus_Success)
   \   000107   EF           MOV     A,R7
   \   000108   6028         JZ      ??zclGeneral_ProcessInCmd_ConfirmKey_5
   1332            {
   1333              // If MAC(U) does not match MAC(V), send response with failure
   1334              zclGeneral_KeyEstablish_Send_TerminateKeyEstablishment( ZCL_KEY_ESTABLISHMENT_ENDPOINT,
   1335                                                                      &pInMsg->msg->srcAddr,
   1336                                                                      keyStatus,
   1337                                                                      KEY_ESTABLISHMENT_AVG_TIMEOUT,
   1338                                                                      KEY_ESTABLISHMENT_SUITE,
   1339                                                                      ZCL_FRAME_SERVER_CLIENT_DIR,
   1340                                                                      FALSE, zcl_SeqNum++ );
   \                     ??zclGeneral_ProcessInCmd_ConfirmKey_4:
   \   00010A   12....       LCALL   ?Subroutine20 & 0xFFFF
   1341            }
   \                     ??CrossCallReturnLabel_18:
   \   00010D   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000110   75..00       MOV     ?V0 + 2,#0x0
   \   000113   78..         MOV     R0,#?V0 + 2
   \   000115   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000118   75..01       MOV     ?V0 + 2,#0x1
   \   00011B   78..         MOV     R0,#?V0 + 2
   \   00011D   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000120   75..00       MOV     ?V0 + 3,#0x0
   \   000123   78..         MOV     R0,#?V0 + 2
   \   000125   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000128   7D1C         MOV     R5,#0x1c
   \   00012A   EF           MOV     A,R7
   \   00012B   FC           MOV     R4,A
   \   00012C   12....       LCALL   ??Subroutine120_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_198:
   \   00012F   12....       LCALL   ?DEALLOC_XSTACK8
   1342          
   1343          #if defined (NWK_AUTO_POLL)
   1344            // Key Establishment Procedure complete. Restore the saved poll rate for end device
   1345            NLME_SetPollRate(zclSavedPollRate);
   1346          #endif
   1347          
   1348            return ZCL_STATUS_CMD_HAS_RSP;
   \                     ??zclGeneral_ProcessInCmd_ConfirmKey_5:
   \   000132   79FF         MOV     R1,#-0x1
   \   000134   7420         MOV     A,#0x20
   \   000136                REQUIRE ?Subroutine9
   \   000136                ; // Fall through to label ?Subroutine9
   1349          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine9:
   \   000000   12....       LCALL   ?DEALLOC_XSTACK8
   \   000003                REQUIRE ??Subroutine117_0
   \   000003                ; // Fall through to label ??Subroutine117_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine117_0:
   \   000000   7F07         MOV     R7,#0x7
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine77:
   \   000000   EE           MOV     A,R6
   \   000001   F9           MOV     R1,A
   \   000002   12....       LCALL   ??zclGeneral_KeyEstablishment_GenerateMAC?relay
   \   000005                ; Setup parameters for call to function osal_memcmp
   \   000005   85..82       MOV     DPL,?V0 + 0
   \   000008   85..83       MOV     DPH,?V0 + 1
   \   00000B   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine54:
   \   000000   75F027       MOV     B,#0x27
   \   000003   A4           MUL     AB
   \   000004   F8           MOV     R0,A
   \   000005   A9F0         MOV     R1,B
   \   000007                REQUIRE ??Subroutine119_0
   \   000007                ; // Fall through to label ??Subroutine119_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine119_0:
   \   000000   74..         MOV     A,#keyEstablishRec & 0xff
   \   000002   28           ADD     A,R0
   \   000003   F8           MOV     R0,A
   \   000004   74..         MOV     A,#(keyEstablishRec >> 8) & 0xff
   \   000006   39           ADDC    A,R1
   \   000007   F9           MOV     R1,A
   \   000008                ; Setup parameters for call to function ZDSecMgrAddLinkKey
   \   000008   E8           MOV     A,R0
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine53:
   \   000000   12....       LCALL   ?Subroutine84 & 0xFFFF
   \                     ??CrossCallReturnLabel_119:
   \   000003   6404         XRL     A,#0x4
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine28:
   \   000000   12....       LCALL   ?Subroutine80 & 0xFFFF
   \                     ??CrossCallReturnLabel_109:
   \   000003   12....       LCALL   ??ZDSecMgrAddLinkKey?relay
   \   000006   7402         MOV     A,#0x2
   \   000008   22           RET
   1350          
   1351          /*********************************************************************
   1352           * @fn      zclGeneral_ProcessInCmd_ConfirmKeyRsp
   1353           *
   1354           * @brief   Process the received Confirm Key Response.
   1355           *
   1356           * @param   pInMsg - pointer to the incoming message
   1357           *
   1358           * @return  ZStatus_t - ZFailure @ Unsupported
   1359           *                      ZCL_STATUS_MALFORMED_COMMAND
   1360           *                      ZCL_STATUS_CMD_HAS_RSP
   1361           *                      ZCL_STATUS_SOFTWARE_FAILURE
   1362           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1363          static ZStatus_t zclGeneral_ProcessInCmd_ConfirmKeyRsp( zclIncoming_t *pInMsg )
   \                     zclGeneral_ProcessInCmd_ConfirmKeyRsp:
   1364          {
   \   000000   74F1         MOV     A,#-0xf
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 15
   \   000005                ; Auto size: 16
   \   000005   74F0         MOV     A,#-0x10
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   EA           MOV     A,R2
   \   00000B   FE           MOV     R6,A
   \   00000C   EB           MOV     A,R3
   \   00000D   FF           MOV     R7,A
   1365            uint8 index;
   1366            uint8 status = ZFailure;
   1367            uint8 MACv[KEY_ESTABLISH_MAC_LENGTH];
   1368          
   1369            // Stop the Config Key Generate aging timer because the message has been received
   1370            osal_stop_timerEx( zcl_KeyEstablishment_TaskID, KEY_ESTABLISHMENT_REC_AGING_EVT );
   \   00000E                ; Setup parameters for call to function osal_stop_timerEx
   \   00000E   12....       LCALL   ?Subroutine38 & 0xFFFF
   1371          
   1372            // Check state of the key establishment record. If not match, terminate the procedure
   1373            if ( ( index = zclGeneral_GetKeyEstablishRecIndex( pInMsg->msg->srcAddr.addr.shortAddr ) )
   1374                < MAX_KEY_ESTABLISHMENT_REC_ENTRY )
   \                     ??CrossCallReturnLabel_51:
   \   000011                ; Setup parameters for call to function zclGeneral_GetKeyEstablishRecIndex
   \   000011   12....       LCALL   ?Subroutine26 & 0xFFFF
   \                     ??CrossCallReturnLabel_24:
   \   000014   5065         JNC     ??zclGeneral_ProcessInCmd_ConfirmKeyRsp_0
   1375            {
   1376              if ( keyEstablishRec[index].role == KEY_ESTABLISHMENT_INITIATOR &&
   1377                   keyEstablishRec[index].state == KeyEstablishState_ConfirmPending )
   \   000016   12....       LCALL   ?Subroutine51 & 0xFFFF
   \                     ??CrossCallReturnLabel_179:
   \   000019   705B         JNZ     ??zclGeneral_ProcessInCmd_ConfirmKeyRsp_1
   \   00001B   12....       LCALL   ?Subroutine53 & 0xFFFF
   \                     ??CrossCallReturnLabel_73:
   \   00001E   7056         JNZ     ??zclGeneral_ProcessInCmd_ConfirmKeyRsp_1
   1378              {
   1379                status = ZSuccess;
   1380              }
   1381              else
   1382              {
   1383                // Reset the entry from the rec table
   1384                zclGeneral_ResetKeyEstablishRec( index );
   1385              }
   1386            }
   1387          
   1388            if ( status == ZFailure )
   1389            {
   1390              status = TermKeyStatus_BadMessage;
   1391            }
   1392            else
   1393            {
   1394              // Calculate MAC(V)
   1395              zclGeneral_KeyEstablishment_GenerateMAC( index, FALSE, MACv);
   \   000020                ; Setup parameters for call to function zclGeneral_KeyEstablishment_GenerateMAC
   \   000020   85..82       MOV     DPL,?XSP + 0
   \   000023   85..83       MOV     DPH,?XSP + 1
   \   000026   AC82         MOV     R4,DPL
   \   000028   AD83         MOV     R5,DPH
   \   00002A   7A00         MOV     R2,#0x0
   \   00002C   A9..         MOV     R1,?V0 + 0
   \   00002E   12....       LCALL   ??zclGeneral_KeyEstablishment_GenerateMAC?relay
   1396          
   1397              // Compare M(U) with M(V)
   1398              if ( osal_memcmp( MACv, pInMsg->pData, KEY_ESTABLISH_MAC_LENGTH ) == TRUE )
   \   000031                ; Setup parameters for call to function osal_memcmp
   \   000031   8E82         MOV     DPL,R6
   \   000033   8F83         MOV     DPH,R7
   \   000035   12....       LCALL   ?Subroutine25 & 0xFFFF
   \                     ??CrossCallReturnLabel_164:
   \   000038   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   00003B   7C10         MOV     R4,#0x10
   \   00003D   7D00         MOV     R5,#0x0
   \   00003F   7403         MOV     A,#0x3
   \   000041   12....       LCALL   ?XSTACK_DISP0_8
   \   000044   12....       LCALL   ?Subroutine74 & 0xFFFF
   \                     ??CrossCallReturnLabel_190:
   \   000047   12....       LCALL   ?DEALLOC_XSTACK8
   \   00004A   E9           MOV     A,R1
   \   00004B   6401         XRL     A,#0x1
   \   00004D   7031         JNZ     ??zclGeneral_ProcessInCmd_ConfirmKeyRsp_2
   1399              {
   1400                status = TermKeyStatus_Success;
   \   00004F   75..00       MOV     ?V0 + 1,#0x0
   1401          
   1402                // Store the link key
   1403                ZDSecMgrAddLinkKey( pInMsg->msg->srcAddr.addr.shortAddr,
   1404                               keyEstablishRec[index].partnerExtAddr,
   1405                               keyEstablishRec[index].pKey );
   \   000052   E5..         MOV     A,?V0 + 0
   \   000054   12....       LCALL   ?Subroutine54 & 0xFFFF
   1406              }
   \                     ??CrossCallReturnLabel_195:
   \   000057   2421         ADD     A,#0x21
   \   000059   F582         MOV     DPL,A
   \   00005B   E9           MOV     A,R1
   \   00005C   12....       LCALL   ??Subroutine126_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_214:
   \   00005F   12....       LCALL   ?PUSH_XSTACK8_X_TWO
   \   000062   E8           MOV     A,R0
   \   000063   240E         ADD     A,#0xe
   \   000065   FC           MOV     R4,A
   \   000066   E9           MOV     A,R1
   \   000067   3400         ADDC    A,#0x0
   \   000069   FD           MOV     R5,A
   \   00006A   8E82         MOV     DPL,R6
   \   00006C   8F83         MOV     DPH,R7
   \   00006E   12....       LCALL   ?Subroutine28 & 0xFFFF
   \                     ??CrossCallReturnLabel_29:
   \   000071   12....       LCALL   ?DEALLOC_XSTACK8
   \   000074   8039         SJMP    ??zclGeneral_ProcessInCmd_ConfirmKeyRsp_3
   \                     ??zclGeneral_ProcessInCmd_ConfirmKeyRsp_1:
   \   000076                ; Setup parameters for call to function zclGeneral_ResetKeyEstablishRec
   \   000076   A9..         MOV     R1,?V0 + 0
   \   000078   12....       LCALL   ??zclGeneral_ResetKeyEstablishRec?relay
   \                     ??zclGeneral_ProcessInCmd_ConfirmKeyRsp_0:
   \   00007B   75..03       MOV     ?V0 + 1,#0x3
   \   00007E   8003         SJMP    ??zclGeneral_ProcessInCmd_ConfirmKeyRsp_4
   1407              else
   1408              {
   1409                // If MAC(U) does not match MAC(V), send response with failure
   1410                status = TermKeyStatus_BadKeyConfirm;
   \                     ??zclGeneral_ProcessInCmd_ConfirmKeyRsp_2:
   \   000080   75..02       MOV     ?V0 + 1,#0x2
   1411              }
   1412            }
   1413          
   1414            if( status != TermKeyStatus_Success )
   1415            {
   1416              zclGeneral_KeyEstablish_Send_TerminateKeyEstablishment( ZCL_KEY_ESTABLISHMENT_ENDPOINT,
   1417                                                                      &pInMsg->msg->srcAddr,
   1418                                                                      (TermKeyStatus_t)status,
   1419                                                                      KEY_ESTABLISHMENT_AVG_TIMEOUT,
   1420                                                                      KEY_ESTABLISHMENT_SUITE,
   1421                                                                      ZCL_FRAME_CLIENT_SERVER_DIR,
   1422                                                                      FALSE, zcl_SeqNum++ );
   \                     ??zclGeneral_ProcessInCmd_ConfirmKeyRsp_4:
   \   000083   12....       LCALL   ?Subroutine20 & 0xFFFF
   1423            }
   \                     ??CrossCallReturnLabel_19:
   \   000086   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000089   75..00       MOV     ?V0 + 2,#0x0
   \   00008C   78..         MOV     R0,#?V0 + 2
   \   00008E   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000091   78..         MOV     R0,#?V0 + 2
   \   000093   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000096   75..01       MOV     ?V0 + 2,#0x1
   \   000099   75..00       MOV     ?V0 + 3,#0x0
   \   00009C   78..         MOV     R0,#?V0 + 2
   \   00009E   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000A1   7D1C         MOV     R5,#0x1c
   \   0000A3   AC..         MOV     R4,?V0 + 1
   \   0000A5   8E82         MOV     DPL,R6
   \   0000A7   8F83         MOV     DPH,R7
   \   0000A9   12....       LCALL   ??Subroutine121_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_201:
   \   0000AC   12....       LCALL   ?DEALLOC_XSTACK8
   1424          
   1425            // Send Osal message to the application to indicate the completion
   1426            if ( keyEstablishRec[index].appTaskID != INVALID_TASK_ID )
   \                     ??zclGeneral_ProcessInCmd_ConfirmKeyRsp_3:
   \   0000AF   E5..         MOV     A,?V0 + 0
   \   0000B1   12....       LCALL   ?Subroutine55 & 0xFFFF
   \                     ??CrossCallReturnLabel_74:
   \   0000B4   602A         JZ      ??CrossCallReturnLabel_2
   1427            {
   1428              keyEstablishmentInd_t *ind;
   1429          
   1430              ind = (keyEstablishmentInd_t *)osal_msg_allocate( sizeof( keyEstablishmentInd_t ) );
   \   0000B6                ; Setup parameters for call to function osal_msg_allocate
   \   0000B6   7A05         MOV     R2,#0x5
   \   0000B8   7B00         MOV     R3,#0x0
   \   0000BA   12....       LCALL   ??osal_msg_allocate?relay
   1431              if ( ind )
   \   0000BD   EA           MOV     A,R2
   \   0000BE   4B           ORL     A,R3
   \   0000BF   601F         JZ      ??CrossCallReturnLabel_2
   1432              {
   1433                ind->hdr.event = ZCL_KEY_ESTABLISH_IND;
   \   0000C1   8A82         MOV     DPL,R2
   \   0000C3   8B83         MOV     DPH,R3
   \   0000C5   7435         MOV     A,#0x35
   \   0000C7   F0           MOVX    @DPTR,A
   1434                ind->hdr.status = status;
   \   0000C8   A3           INC     DPTR
   \   0000C9   E5..         MOV     A,?V0 + 1
   \   0000CB   F0           MOVX    @DPTR,A
   1435          
   1436                // Clear remaining fields
   1437                ind->waitTime = 0;
   \   0000CC   8A82         MOV     DPL,R2
   \   0000CE   8B83         MOV     DPH,R3
   \   0000D0   A3           INC     DPTR
   \   0000D1   A3           INC     DPTR
   \   0000D2   E4           CLR     A
   \   0000D3   F0           MOVX    @DPTR,A
   1438                ind->keyEstablishmentSuite = 0;
   \   0000D4   8A82         MOV     DPL,R2
   \   0000D6   8B83         MOV     DPH,R3
   \   0000D8   A3           INC     DPTR
   \   0000D9   A3           INC     DPTR
   \   0000DA   A3           INC     DPTR
   \   0000DB   F0           MOVX    @DPTR,A
   \   0000DC   A3           INC     DPTR
   \   0000DD   12....       LCALL   ?Subroutine12 & 0xFFFF
   1439          
   1440                osal_msg_send( keyEstablishRec[index].appTaskID, (uint8*)ind );
   1441              }
   1442            }
   1443          
   1444            // End of this transection. Reset the entry from the rec table
   1445            zclGeneral_ResetKeyEstablishRec( index );
   \                     ??CrossCallReturnLabel_2:
   \   0000E0                ; Setup parameters for call to function zclGeneral_ResetKeyEstablishRec
   \   0000E0   A9..         MOV     R1,?V0 + 0
   \   0000E2   12....       LCALL   ??zclGeneral_ResetKeyEstablishRec?relay
   1446          
   1447          #if defined (NWK_AUTO_POLL)
   1448            // Key Establishment Procedure complete. Restore the saved poll rate for end device
   1449            NLME_SetPollRate(zclSavedPollRate);
   1450          #endif
   1451            return ZCL_STATUS_CMD_HAS_RSP;
   \   0000E5   79FF         MOV     R1,#-0x1
   \   0000E7   7410         MOV     A,#0x10
   \   0000E9   02....       LJMP    ?Subroutine9 & 0xFFFF
   1452          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine55:
   \   000000   12....       LCALL   ?Subroutine87 & 0xFFFF
   \                     ??CrossCallReturnLabel_121:
   \   000003   F4           CPL     A
   \   000004   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine26:
   \   000000   8E82         MOV     DPL,R6
   \   000002   8F83         MOV     DPH,R7
   \   000004   12....       LCALL   ?Subroutine79 & 0xFFFF
   \                     ??CrossCallReturnLabel_107:
   \   000007   88..         MOV     ?V0 + 0,R0
   \   000009   C3           CLR     C
   \   00000A   9402         SUBB    A,#0x2
   \   00000C   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine12:
   \   000000   F0           MOVX    @DPTR,A
   \   000001                ; Setup parameters for call to function osal_msg_send
   \   000001                ; Setup parameters for call to function osal_msg_send
   \   000001   E5..         MOV     A,?V0 + 0
   \   000003   12....       LCALL   ?Subroutine87 & 0xFFFF
   \                     ??CrossCallReturnLabel_120:
   \   000006   F9           MOV     R1,A
   \   000007   12....       LCALL   ??osal_msg_send?relay
   \   00000A   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine87:
   \   000000   75F027       MOV     B,#0x27
   \   000003   A4           MUL     AB
   \   000004   F8           MOV     R0,A
   \   000005   A9F0         MOV     R1,B
   \   000007   74..         MOV     A,#(keyEstablishRec + 13) & 0xff
   \   000009   28           ADD     A,R0
   \   00000A   F582         MOV     DPL,A
   \   00000C   74..         MOV     A,#((keyEstablishRec + 13) >> 8) & 0xff
   \   00000E   12....       LCALL   ?Subroutine97 & 0xFFFF
   \                     ??CrossCallReturnLabel_186:
   \   000011   22           RET
   1453          
   1454          /*********************************************************************
   1455           * @fn      zclGeneral_ProcessInCmd_TerminateKeyEstablish
   1456           *
   1457           * @brief   Process the received Terminate Key Establishment Command.
   1458           *
   1459           * @param   pInMsg - pointer to the incoming message
   1460           *
   1461           * @return  ZStatus_t - ZFailure @ Unsupported
   1462           *                      ZSuccess @ Success
   1463           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1464          static ZStatus_t zclGeneral_ProcessInCmd_TerminateKeyEstablish( zclIncoming_t *pInMsg )
   \                     zclGeneral_ProcessInCmd_TerminateKeyEstablish:
   1465          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
   1466            uint8 index;
   1467          
   1468            // Find the key establishment record and delete the record entry.
   1469            if ( ( index = zclGeneral_GetKeyEstablishRecIndex( pInMsg->msg->srcAddr.addr.shortAddr ) )
   1470                < MAX_KEY_ESTABLISHMENT_REC_ENTRY )
   \   000009                ; Setup parameters for call to function zclGeneral_GetKeyEstablishRecIndex
   \   000009   12....       LCALL   ?Subroutine26 & 0xFFFF
   \                     ??CrossCallReturnLabel_25:
   \   00000C   505D         JNC     ??zclGeneral_ProcessInCmd_TerminateKeyEstablish_1
   1471            {
   1472              if ( keyEstablishRec[index].appTaskID != INVALID_TASK_ID )
   \   00000E   E8           MOV     A,R0
   \   00000F   12....       LCALL   ?Subroutine55 & 0xFFFF
   \                     ??CrossCallReturnLabel_75:
   \   000012   6052         JZ      ??CrossCallReturnLabel_3
   1473              {
   1474                keyEstablishmentInd_t *ind;
   1475          
   1476                // Send osal message to the application
   1477                ind = (keyEstablishmentInd_t *)osal_msg_allocate( sizeof( keyEstablishmentInd_t ) );
   \   000014                ; Setup parameters for call to function osal_msg_allocate
   \   000014   7A05         MOV     R2,#0x5
   \   000016   7B00         MOV     R3,#0x0
   \   000018   12....       LCALL   ??osal_msg_allocate?relay
   1478                if ( ind )
   \   00001B   EA           MOV     A,R2
   \   00001C   4B           ORL     A,R3
   \   00001D   6047         JZ      ??CrossCallReturnLabel_3
   1479                {
   1480                  ind->hdr.event = ZCL_KEY_ESTABLISH_IND;
   \   00001F   8A82         MOV     DPL,R2
   \   000021   8B83         MOV     DPH,R3
   \   000023   7435         MOV     A,#0x35
   \   000025   F0           MOVX    @DPTR,A
   1481                  ind->hdr.status = pInMsg->pData[0];
   \   000026   EE           MOV     A,R6
   \   000027   2408         ADD     A,#0x8
   \   000029   F8           MOV     R0,A
   \   00002A   EF           MOV     A,R7
   \   00002B   3400         ADDC    A,#0x0
   \   00002D   F9           MOV     R1,A
   \   00002E   12....       LCALL   ?Subroutine44 & 0xFFFF
   \                     ??CrossCallReturnLabel_58:
   \   000031   E0           MOVX    A,@DPTR
   \   000032   8A82         MOV     DPL,R2
   \   000034   8B83         MOV     DPH,R3
   \   000036   A3           INC     DPTR
   \   000037   F0           MOVX    @DPTR,A
   1482                  ind->waitTime = pInMsg->pData[1];
   \   000038   12....       LCALL   ?Subroutine44 & 0xFFFF
   1483                  ind->keyEstablishmentSuite = BUILD_UINT16( pInMsg->pData[2], pInMsg->pData[3] );
   1484                  osal_msg_send( keyEstablishRec[index].appTaskID, (uint8*)ind );
   1485                }
   1486              }
   \                     ??CrossCallReturnLabel_59:
   \   00003B   A3           INC     DPTR
   \   00003C   E0           MOVX    A,@DPTR
   \   00003D   8A82         MOV     DPL,R2
   \   00003F   8B83         MOV     DPH,R3
   \   000041   A3           INC     DPTR
   \   000042   A3           INC     DPTR
   \   000043   12....       LCALL   ?Subroutine21 & 0xFFFF
   \                     ??CrossCallReturnLabel_21:
   \   000046   F9           MOV     R1,A
   \   000047   8882         MOV     DPL,R0
   \   000049   8983         MOV     DPH,R1
   \   00004B   A3           INC     DPTR
   \   00004C   A3           INC     DPTR
   \   00004D   E0           MOVX    A,@DPTR
   \   00004E   FC           MOV     R4,A
   \   00004F   8882         MOV     DPL,R0
   \   000051   8983         MOV     DPH,R1
   \   000053   A3           INC     DPTR
   \   000054   A3           INC     DPTR
   \   000055   A3           INC     DPTR
   \   000056   E0           MOVX    A,@DPTR
   \   000057   F9           MOV     R1,A
   \   000058   EC           MOV     A,R4
   \   000059   8A82         MOV     DPL,R2
   \   00005B   8B83         MOV     DPH,R3
   \   00005D   A3           INC     DPTR
   \   00005E   A3           INC     DPTR
   \   00005F   A3           INC     DPTR
   \   000060   F0           MOVX    @DPTR,A
   \   000061   A3           INC     DPTR
   \   000062   E9           MOV     A,R1
   \   000063   12....       LCALL   ?Subroutine12 & 0xFFFF
   1487              // In either case, remove the entry from the rec table
   1488              zclGeneral_ResetKeyEstablishRec( index );
   \                     ??CrossCallReturnLabel_3:
   \   000066                ; Setup parameters for call to function zclGeneral_ResetKeyEstablishRec
   \   000066   A9..         MOV     R1,?V0 + 0
   \   000068   12....       LCALL   ??zclGeneral_ResetKeyEstablishRec?relay
   1489          
   1490          #if defined (NWK_AUTO_POLL)
   1491              // Restore the saved poll rate for end device
   1492              NLME_SetPollRate(zclSavedPollRate);
   1493          #endif
   1494            }
   1495            return ZSuccess;
   \                     ??zclGeneral_ProcessInCmd_TerminateKeyEstablish_1:
   \   00006B   7900         MOV     R1,#0x0
   \   00006D                REQUIRE ?Subroutine1
   \   00006D                ; // Fall through to label ?Subroutine1
   1496          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine44:
   \   000000   8882         MOV     DPL,R0
   \   000002   8983         MOV     DPH,R1
   \   000004   E0           MOVX    A,@DPTR
   \   000005   FC           MOV     R4,A
   \   000006   A3           INC     DPTR
   \   000007   E0           MOVX    A,@DPTR
   \   000008   F583         MOV     DPH,A
   \   00000A   8C82         MOV     DPL,R4
   \   00000C   22           RET
   1497          
   1498          /*********************************************************************
   1499           * @fn      zclGeneral_InitiateKeyEstablish_Cmd_CalculateKey
   1500           *
   1501           * @brief   Calculate the Key using ECC library upon receipt of Initiate
   1502                      Key Establishment Command.
   1503           *
   1504           * @param   none
   1505           *
   1506           * @return  ZStatus_t - ZFailure @ Entry pending key calculation not found
   1507           *                      ZSuccess
   1508           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1509          static ZStatus_t zclGeneral_InitiateKeyEstablish_Cmd_CalculateKey( void )
   \                     zclGeneral_InitiateKeyEstablish_Cmd_CalculateKey:
   1510          {
   \   000000   74EE         MOV     A,#-0x12
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 18
   \   000005                ; Auto size: 22
   \   000005   74EA         MOV     A,#-0x16
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   1511            uint8 zData[KEY_ESTABLISH_SHARED_SECRET_LENGTH];
   1512            uint8 *caPublicKey, *devicePrivateKey, *keyBit;
   1513            uint8 index, status, tmp;
   1514          
   1515            // It is possible to have multiple entries in the keyCalulationPending state.
   1516            // Here we assume the partner that starts the key establishment procedure earlier
   1517            // will have a smaller index in the table.
   1518            // However, this might not apply due to different processing capability of
   1519            // different processors.
   1520            if ( (index = zclGeneral_GetKeyEstablishRecIndex_State( KeyEstablishState_KeyCalculatePending ))
   1521                 >= MAX_KEY_ESTABLISHMENT_REC_ENTRY )
   \   00000A                ; Setup parameters for call to function zclGeneral_GetKeyEstablishRecIndex_State
   \   00000A   7903         MOV     R1,#0x3
   \   00000C   12....       LCALL   ??zclGeneral_GetKeyEstablishRecIndex_State?rela
   \   00000F   E9           MOV     A,R1
   \   000010   F8           MOV     R0,A
   \   000011   88..         MOV     ?V0 + 2,R0
   \   000013   C3           CLR     C
   \   000014   9402         SUBB    A,#0x2
   \   000016   4003         JC      $+5
   \   000018   02....       LJMP    ??zclGeneral_InitiateKeyEstablish_Cmd_Calculate_1 & 0xFFFF
   1522            {
   1523              return ZFailure;
   1524            }
   1525          
   1526            if ((caPublicKey = osal_mem_alloc(ZCL_KE_CA_PUBLIC_KEY_LEN)) == NULL)
   \   00001B                ; Setup parameters for call to function osal_mem_alloc
   \   00001B   7A16         MOV     R2,#0x16
   \   00001D   12....       LCALL   ??Subroutine105_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_156:
   \   000020   700A         JNZ     ??zclGeneral_InitiateKeyEstablish_Cmd_Calculate_2
   1527            {
   1528              // Reset the entry
   1529              zclGeneral_ResetKeyEstablishRec( index );
   \                     ??zclGeneral_InitiateKeyEstablish_Cmd_Calculate_3:
   \   000022                ; Setup parameters for call to function zclGeneral_ResetKeyEstablishRec
   \   000022   A9..         MOV     R1,?V0 + 2
   \   000024   12....       LCALL   ??zclGeneral_ResetKeyEstablishRec?relay
   1530          
   1531              return ZCL_STATUS_SOFTWARE_FAILURE;  // Memory allocation failure.
   \   000027   79C1         MOV     R1,#-0x3f
   \   000029   02....       LJMP    ??zclGeneral_InitiateKeyEstablish_Cmd_Calculate_4 & 0xFFFF
   1532            }
   1533            if ((devicePrivateKey = osal_mem_alloc(ZCL_KE_DEVICE_PRIVATE_KEY_LEN)) == NULL)
   \                     ??zclGeneral_InitiateKeyEstablish_Cmd_Calculate_2:
   \   00002C                ; Setup parameters for call to function osal_mem_alloc
   \   00002C   12....       LCALL   ?Subroutine70 & 0xFFFF
   \                     ??CrossCallReturnLabel_94:
   \   00002F   7009         JNZ     ??zclGeneral_InitiateKeyEstablish_Cmd_Calculate_5
   1534            {
   1535              osal_mem_free(caPublicKey);
   \   000031                ; Setup parameters for call to function osal_mem_free
   \   000031   AA..         MOV     R2,?V0 + 0
   \   000033   AB..         MOV     R3,?V0 + 1
   \   000035   12....       LCALL   ??osal_mem_free?relay
   \   000038   80E8         SJMP    ??zclGeneral_InitiateKeyEstablish_Cmd_Calculate_3
   1536          
   1537              // Reset the entry
   1538              zclGeneral_ResetKeyEstablishRec( index );
   1539          
   1540              return ZCL_STATUS_SOFTWARE_FAILURE;  // Memory allocation failure.
   1541            }
   1542          
   1543            osal_nv_read(ZCD_NV_CA_PUBLIC_KEY, 0, ZCL_KE_CA_PUBLIC_KEY_LEN, caPublicKey);
   \                     ??zclGeneral_InitiateKeyEstablish_Cmd_Calculate_5:
   \   00003A                ; Setup parameters for call to function osal_nv_read
   \   00003A   78..         MOV     R0,#?V0 + 0
   \   00003C   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00003F   75..16       MOV     ?V0 + 4,#0x16
   \   000042   75..00       MOV     ?V0 + 5,#0x0
   \   000045   78..         MOV     R0,#?V0 + 4
   \   000047   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00004A   7C00         MOV     R4,#0x0
   \   00004C   7D00         MOV     R5,#0x0
   \   00004E   7A6B         MOV     R2,#0x6b
   \   000050   12....       LCALL   ??Subroutine100_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_131:
   \   000053   12....       LCALL   ?DEALLOC_XSTACK8
   1544            osal_nv_read(ZCD_NV_DEVICE_PRIVATE_KEY, 0, ZCL_KE_DEVICE_PRIVATE_KEY_LEN, devicePrivateKey);
   \   000056                ; Setup parameters for call to function osal_nv_read
   \   000056   78..         MOV     R0,#?V0 + 8
   \   000058   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00005B   75..15       MOV     ?V0 + 4,#0x15
   \   00005E   78..         MOV     R0,#?V0 + 4
   \   000060   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000063   7C00         MOV     R4,#0x0
   \   000065   7D00         MOV     R5,#0x0
   \   000067   7A6A         MOV     R2,#0x6a
   \   000069   12....       LCALL   ??Subroutine100_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_132:
   \   00006C   12....       LCALL   ?DEALLOC_XSTACK8
   1545          
   1546            // Turn off the radio
   1547            tmp = FALSE;
   \   00006F   85..82       MOV     DPL,?XSP + 0
   \   000072   85..83       MOV     DPH,?XSP + 1
   \   000075   12....       LCALL   ?Subroutine14 & 0xFFFF
   1548            ZMacSetReq( ZMacRxOnIdle, &tmp );
   1549          
   1550            status = ZSE_ECCKeyBitGenerate( devicePrivateKey, keyEstablishRec[index].pLocalEPrivateKey,
   1551                              keyEstablishRec[index].pLocalEPublicKey,
   1552                              keyEstablishRec[index].pRemoteCertificate,
   1553                              keyEstablishRec[index].pRemotePublicKey,
   1554                              caPublicKey, zData,
   1555                              zclGeneral_KeyEstablishment_HashFunc,
   1556                              zclKeyEstablish_YieldFunc, zclKeyEstablish_YieldLevel);
   \                     ??CrossCallReturnLabel_257:
   \   000078   E5..         MOV     A,?V0 + 2
   \   00007A   12....       LCALL   ?Subroutine39 & 0xFFFF
   \                     ??CrossCallReturnLabel_52:
   \   00007D   12....       LCALL   ?PUSH_XSTACK_I_FOUR
   \   000080   90....       MOV     DPTR,#zclKeyEstablish_YieldFunc
   \   000083   12....       LCALL   ?PUSH_XSTACK8_X_TWO
   \   000086   75....       MOV     ?V0 + 4,#??zclGeneral_KeyEstablishment_HashFunc?relay & 0xff
   \   000089   75....       MOV     ?V0 + 5,#(??zclGeneral_KeyEstablishment_HashFunc?relay >> 8) & 0xff
   \   00008C   78..         MOV     R0,#?V0 + 4
   \   00008E   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000091   7409         MOV     A,#0x9
   \   000093   12....       LCALL   ?XSTACK_DISP0_8
   \   000096   8582..       MOV     ?V0 + 4,DPL
   \   000099   8583..       MOV     ?V0 + 5,DPH
   \   00009C   78..         MOV     R0,#?V0 + 4
   \   00009E   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000A1   78..         MOV     R0,#?V0 + 0
   \   0000A3   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000A6   EE           MOV     A,R6
   \   0000A7   241D         ADD     A,#0x1d
   \   0000A9   F582         MOV     DPL,A
   \   0000AB   EF           MOV     A,R7
   \   0000AC   12....       LCALL   ??Subroutine126_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_215:
   \   0000AF   12....       LCALL   ?PUSH_XSTACK8_X_TWO
   \   0000B2   EE           MOV     A,R6
   \   0000B3   241F         ADD     A,#0x1f
   \   0000B5   F582         MOV     DPL,A
   \   0000B7   EF           MOV     A,R7
   \   0000B8   12....       LCALL   ??Subroutine126_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_216:
   \   0000BB   12....       LCALL   ?PUSH_XSTACK8_X_TWO
   \   0000BE   12....       LCALL   ?Subroutine71 & 0xFFFF
   \                     ??CrossCallReturnLabel_97:
   \   0000C1   12....       LCALL   ??Subroutine126_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_217:
   \   0000C4   12....       LCALL   ?PUSH_XSTACK8_X_TWO
   \   0000C7   12....       LCALL   ?Subroutine32 & 0xFFFF
   \                     ??CrossCallReturnLabel_36:
   \   0000CA   12....       LCALL   ?DEALLOC_XSTACK8
   \   0000CD   8A..         MOV     ?V0 + 4,R2
   1557            tmp = TRUE;
   \   0000CF   85..82       MOV     DPL,?XSP + 0
   \   0000D2   85..83       MOV     DPH,?XSP + 1
   \   0000D5   7401         MOV     A,#0x1
   \   0000D7   12....       LCALL   ??Subroutine133_0 & 0xFFFF
   1558            ZMacSetReq( ZMacRxOnIdle, &tmp );  // Turn the radio back on
   1559          
   1560            osal_mem_free(caPublicKey);
   \                     ??CrossCallReturnLabel_259:
   \   0000DA                ; Setup parameters for call to function osal_mem_free
   \   0000DA   AA..         MOV     R2,?V0 + 0
   \   0000DC   AB..         MOV     R3,?V0 + 1
   \   0000DE   12....       LCALL   ?Subroutine72 & 0xFFFF
   1561            osal_mem_free(devicePrivateKey);
   1562          
   1563            if( status == MCE_SUCCESS )
   \                     ??CrossCallReturnLabel_100:
   \   0000E1   6003         JZ      $+5
   \   0000E3   02....       LJMP    ??zclGeneral_InitiateKeyEstablish_Cmd_Calculate_6 & 0xFFFF
   1564            {
   1565              // Allocate buffer to store KDF(Z) = MacKey || KeyData
   1566              if ( (keyBit = osal_mem_alloc( KEY_ESTABLISH_KEY_DATA_LENGTH +
   1567                                           KEY_ESTABLISH_MAC_KEY_LENGTH)) == NULL )
   \   0000E6                ; Setup parameters for call to function osal_mem_alloc
   \   0000E6   12....       LCALL   ?Subroutine69 & 0xFFFF
   \                     ??CrossCallReturnLabel_206:
   \   0000E9   8A..         MOV     ?V0 + 0,R2
   \   0000EB   8B..         MOV     ?V0 + 1,R3
   \   0000ED   EA           MOV     A,R2
   \   0000EE   45..         ORL     A,?V0 + 1
   \   0000F0   7003         JNZ     $+5
   \   0000F2   02....       LJMP    ??zclGeneral_InitiateKeyEstablish_Cmd_Calculate_3 & 0xFFFF
   1568              {
   1569                // Reset the entry
   1570                zclGeneral_ResetKeyEstablishRec( index );
   1571          
   1572                return  ZCL_STATUS_SOFTWARE_FAILURE; // Memory allocation failure
   1573              }
   1574          
   1575              // Derive the keying data using KDF function
   1576              zclGeneral_KeyEstablishment_KeyDeriveFunction(zData,
   1577                                                            KEY_ESTABLISH_SHARED_SECRET_LENGTH,
   1578                                                            keyBit );
   \   0000F5                ; Setup parameters for call to function zclGeneral_KeyEstablishment_KeyDeriveFunction
   \   0000F5   AC..         MOV     R4,?V0 + 0
   \   0000F7   AD..         MOV     R5,?V0 + 1
   \   0000F9   7915         MOV     R1,#0x15
   \   0000FB   7401         MOV     A,#0x1
   \   0000FD   12....       LCALL   ?XSTACK_DISP0_8
   \   000100   AA82         MOV     R2,DPL
   \   000102   AB83         MOV     R3,DPH
   \   000104   12....       LCALL   ??zclGeneral_KeyEstablishment_KeyDeriveFunction
   1579          
   1580              // Save the derived 128-bit key and macKey
   1581              osal_memcpy( keyEstablishRec[index].pMacKey, keyBit, KEY_ESTABLISH_MAC_KEY_LENGTH );
   \   000107                ; Setup parameters for call to function osal_memcpy
   \   000107   78..         MOV     R0,#?V0 + 4
   \   000109   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   00010C   7C10         MOV     R4,#0x10
   \   00010E   7D00         MOV     R5,#0x0
   \   000110   EE           MOV     A,R6
   \   000111   2423         ADD     A,#0x23
   \   000113   12....       LCALL   ??Subroutine130_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_247:
   \   000116   12....       LCALL   ?DEALLOC_XSTACK8
   1582              osal_memcpy( keyEstablishRec[index].pKey, &(keyBit[KEY_ESTABLISH_MAC_KEY_LENGTH]),
   1583                          KEY_ESTABLISH_KEY_DATA_LENGTH);
   \   000119                ; Setup parameters for call to function osal_memcpy
   \   000119   E5..         MOV     A,?V0 + 0
   \   00011B   2410         ADD     A,#0x10
   \   00011D   F5..         MOV     ?V0 + 4,A
   \   00011F   E5..         MOV     A,?V0 + 1
   \   000121   12....       LCALL   ?Subroutine65 & 0xFFFF
   \                     ??CrossCallReturnLabel_90:
   \   000124   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   000127   7C10         MOV     R4,#0x10
   \   000129   7D00         MOV     R5,#0x0
   \   00012B   EE           MOV     A,R6
   \   00012C   2421         ADD     A,#0x21
   \   00012E   12....       LCALL   ??Subroutine130_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_248:
   \   000131   12....       LCALL   ?DEALLOC_XSTACK8
   1584              osal_mem_free( keyBit );
   \   000134                ; Setup parameters for call to function osal_mem_free
   \   000134   AA..         MOV     R2,?V0 + 0
   \   000136   AB..         MOV     R3,?V0 + 1
   \   000138   12....       LCALL   ??osal_mem_free?relay
   1585          
   1586              // Key Bit generation success, send Ephemeral Data Response back
   1587              zclGeneral_KeyEstablish_Send_EphemeralDataRsp( ZCL_KEY_ESTABLISHMENT_ENDPOINT,
   1588                                                             &(keyEstablishRec[index].dstAddr),
   1589                                                             keyEstablishRec[index].pLocalEPublicKey,
   1590                                                             FALSE, keyEstablishRec[index].lastSeqNum );
   \   00013B                ; Setup parameters for call to function zclGeneral_KeyEstablish_Send_EphemeralDataRsp
   \   00013B   EE           MOV     A,R6
   \   00013C   240C         ADD     A,#0xc
   \   00013E   F582         MOV     DPL,A
   \   000140   EF           MOV     A,R7
   \   000141   12....       LCALL   ??Subroutine128_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_236:
   \   000144   F5..         MOV     ?V0 + 0,A
   \   000146   78..         MOV     R0,#?V0 + 0
   \   000148   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00014B   75..00       MOV     ?V0 + 0,#0x0
   \   00014E   78..         MOV     R0,#?V0 + 0
   \   000150   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000153   12....       LCALL   ?Subroutine71 & 0xFFFF
   \                     ??CrossCallReturnLabel_98:
   \   000156   12....       LCALL   ??Subroutine102_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_143:
   \   000159   EE           MOV     A,R6
   \   00015A   FA           MOV     R2,A
   \   00015B   EF           MOV     A,R7
   \   00015C   FB           MOV     R3,A
   \   00015D   790A         MOV     R1,#0xa
   \   00015F   12....       LCALL   ??zclGeneral_KeyEstablish_Send_EphemeralDataRsp
   \   000162   7402         MOV     A,#0x2
   \   000164   12....       LCALL   ?DEALLOC_XSTACK8
   1591          
   1592              // The Request was processed successfuly, now the age timer needs to start based on the
   1593              // remote Config Key Generate
   1594              keyEstablishRec[index].age = keyEstablishRec[index].remoteConfKeyGenTime;
   \   000167   EE           MOV     A,R6
   \   000168   2426         ADD     A,#0x26
   \   00016A   F582         MOV     DPL,A
   \   00016C   EF           MOV     A,R7
   \   00016D   12....       LCALL   ??Subroutine128_0 & 0xFFFF
   1595          
   1596              // Start the Config Key Generate aging timer
   1597              osal_start_reload_timer( zcl_KeyEstablishment_TaskID, KEY_ESTABLISHMENT_REC_AGING_EVT,
   1598                                       KEY_ESTABLISHMENT_REC_AGING_INTERVAL );
   1599            }
   \                     ??CrossCallReturnLabel_237:
   \   000170   C0E0         PUSH    A
   \   000172   12....       LCALL   ?Subroutine57 & 0xFFFF
   \                     ??CrossCallReturnLabel_78:
   \   000175   D0E0         POP     A
   \   000177   12....       LCALL   ?Subroutine11 & 0xFFFF
   1600            else
   1601            {
   1602              // Key Bit generation failure. Send terminate key command
   1603               zclGeneral_KeyEstablish_Send_TerminateKeyEstablishment( ZCL_KEY_ESTABLISHMENT_ENDPOINT,
   1604                                                                      &(keyEstablishRec[index].dstAddr),
   1605                                                                      TermKeyStatus_BadKeyConfirm,
   1606                                                                      KEY_ESTABLISHMENT_AVG_TIMEOUT,
   1607                                                                      KEY_ESTABLISHMENT_SUITE,
   1608                                                                      ZCL_FRAME_SERVER_CLIENT_DIR,
   1609                                                                      FALSE, zcl_SeqNum++ );
   1610              // Reset the entry
   1611              zclGeneral_ResetKeyEstablishRec( index );
   1612          
   1613          #if defined (NWK_AUTO_POLL)
   1614              // Restore the saved poll rate for end device
   1615              NLME_SetPollRate(zclSavedPollRate);
   1616          #endif
   1617          
   1618               return ZFailure;
   1619            }
   1620          
   1621            keyEstablishRec[index].state = KeyEstablishState_ConfirmPending;
   1622            return ZSuccess;
   \                     ??CrossCallReturnLabel_0:
   \   00017A   8031         SJMP    ??zclGeneral_InitiateKeyEstablish_Cmd_Calculate_4
   \                     ??zclGeneral_InitiateKeyEstablish_Cmd_Calculate_6:
   \   00017C   12....       LCALL   ?Subroutine35 & 0xFFFF
   \                     ??CrossCallReturnLabel_43:
   \   00017F   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000182   75..00       MOV     ?V0 + 0,#0x0
   \   000185   78..         MOV     R0,#?V0 + 0
   \   000187   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00018A   75..01       MOV     ?V0 + 0,#0x1
   \   00018D   78..         MOV     R0,#?V0 + 0
   \   00018F   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000192   75..00       MOV     ?V0 + 1,#0x0
   \   000195   78..         MOV     R0,#?V0 + 0
   \   000197   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00019A   7D1C         MOV     R5,#0x1c
   \   00019C   7C02         MOV     R4,#0x2
   \   00019E   E5..         MOV     A,?V0 + 2
   \   0001A0   12....       LCALL   ?Subroutine47 & 0xFFFF
   \                     ??CrossCallReturnLabel_62:
   \   0001A3   12....       LCALL   ?DEALLOC_XSTACK8
   \   0001A6                ; Setup parameters for call to function zclGeneral_ResetKeyEstablishRec
   \   0001A6   A9..         MOV     R1,?V0 + 2
   \   0001A8   12....       LCALL   ??zclGeneral_ResetKeyEstablishRec?relay
   \                     ??zclGeneral_InitiateKeyEstablish_Cmd_Calculate_1:
   \   0001AB   7901         MOV     R1,#0x1
   \                     ??zclGeneral_InitiateKeyEstablish_Cmd_Calculate_4:
   \   0001AD   7416         MOV     A,#0x16
   \   0001AF                REQUIRE ?Subroutine6
   \   0001AF                ; // Fall through to label ?Subroutine6
   1623          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine6:
   \   000000   12....       LCALL   ?DEALLOC_XSTACK8
   \   000003                REQUIRE ??Subroutine122_0
   \   000003                ; // Fall through to label ??Subroutine122_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine69:
   \   000000   7A20         MOV     R2,#0x20
   \   000002                REQUIRE ??Subroutine123_0
   \   000002                ; // Fall through to label ??Subroutine123_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine123_0:
   \   000000   7B00         MOV     R3,#0x0
   \   000002   12....       LCALL   ??osal_mem_alloc?relay
   \   000005   8A..         MOV     ?V0 + 4,R2
   \   000007   8B..         MOV     ?V0 + 5,R3
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine72:
   \   000000   12....       LCALL   ??osal_mem_free?relay
   \   000003                ; Setup parameters for call to function osal_mem_free
   \   000003                ; Setup parameters for call to function osal_mem_free
   \   000003   AA..         MOV     R2,?V0 + 8
   \   000005   AB..         MOV     R3,?V0 + 9
   \   000007   12....       LCALL   ??osal_mem_free?relay
   \   00000A   E5..         MOV     A,?V0 + 4
   \   00000C   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine70:
   \   000000   7A15         MOV     R2,#0x15
   \   000002   12....       LCALL   ?Subroutine90 & 0xFFFF
   \                     ??CrossCallReturnLabel_125:
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine57:
   \   000000   EE           MOV     A,R6
   \   000001   2417         ADD     A,#0x17
   \   000003   12....       LCALL   ??Subroutine134_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_264:
   \   000006   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine47:
   \   000000   75F027       MOV     B,#0x27
   \   000003   A4           MUL     AB
   \   000004   F8           MOV     R0,A
   \   000005   A9F0         MOV     R1,B
   \   000007   74..         MOV     A,#keyEstablishRec & 0xff
   \   000009   28           ADD     A,R0
   \   00000A   FA           MOV     R2,A
   \   00000B   74..         MOV     A,#(keyEstablishRec >> 8) & 0xff
   \   00000D   39           ADDC    A,R1
   \   00000E   FB           MOV     R3,A
   \   00000F   790A         MOV     R1,#0xa
   \   000011   12....       LCALL   ??zclGeneral_KeyEstablish_Send_TerminateKeyEsta
   \   000014   7405         MOV     A,#0x5
   \   000016   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine39:
   \   000000   12....       LCALL   ?Subroutine88 & 0xFFFF
   \                     ??CrossCallReturnLabel_244:
   \   000003                ; Setup parameters for call to function ZSE_ECCKeyBitGenerate
   \   000003                ; Setup parameters for call to function ZSE_ECCKeyBitGenerate
   \   000003   90....       MOV     DPTR,#zclKeyEstablish_YieldLevel
   \   000006   E0           MOVX    A,@DPTR
   \   000007   F5..         MOV     ?V0 + 4,A
   \   000009   E4           CLR     A
   \   00000A   F5..         MOV     ?V0 + 6,A
   \   00000C   F5..         MOV     ?V0 + 7,A
   \   00000E   78..         MOV     R0,#?V0 + 4
   \   000010   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine88:
   \   000000   75F027       MOV     B,#0x27
   \   000003   A4           MUL     AB
   \   000004   F8           MOV     R0,A
   \   000005   A9F0         MOV     R1,B
   \   000007                REQUIRE ??Subroutine129_0
   \   000007                ; // Fall through to label ??Subroutine129_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine32:
   \   000000   EE           MOV     A,R6
   \   000001   2419         ADD     A,#0x19
   \   000003   F582         MOV     DPL,A
   \   000005   EF           MOV     A,R7
   \   000006   12....       LCALL   ?Subroutine91 & 0xFFFF
   \                     ??CrossCallReturnLabel_146:
   \   000009   AA..         MOV     R2,?V0 + 8
   \   00000B   AB..         MOV     R3,?V0 + 9
   \   00000D   12....       LCALL   ??ZSE_ECCKeyBitGenerate?relay
   \   000010   7412         MOV     A,#0x12
   \   000012   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine14:
   \   000000   E4           CLR     A
   \   000001                REQUIRE ??Subroutine133_0
   \   000001                ; // Fall through to label ??Subroutine133_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine133_0:
   \   000000   F0           MOVX    @DPTR,A
   \   000001                ; Setup parameters for call to function ZMacSetReq
   \   000001                ; Setup parameters for call to function ZMacSetReq
   \   000001                ; Setup parameters for call to function ZMacSetReq
   \   000001   AA82         MOV     R2,DPL
   \   000003   AB83         MOV     R3,DPH
   \   000005   7952         MOV     R1,#0x52
   \   000007   12....       LCALL   ??ZMacSetReq?relay
   \   00000A   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine11:
   \   000000   12....       LCALL   ?Subroutine78 & 0xFFFF
   \                     ??CrossCallReturnLabel_105:
   \   000003   12....       LCALL   ?Subroutine92 & 0xFFFF
   \                     ??CrossCallReturnLabel_266:
   \   000006   7404         MOV     A,#0x4
   \   000008   F0           MOVX    @DPTR,A
   \   000009   7900         MOV     R1,#0x0
   \   00000B   22           RET
   1624          
   1625          /*********************************************************************
   1626           * @fn      zclGeneral_InitiateKeyEstablish_Rsp_CalculateKey
   1627           *
   1628           * @brief   Calculate the Key using ECC library upon receipt of
   1629           *          Ephemeral Data Response.
   1630           *
   1631           * @param   none
   1632           *
   1633           * @return  ZStatus_t - ZFailure @ Unsupported
   1634           *                      ZCL_STATUS_MALFORMED_COMMAND
   1635           *                      ZCL_STATUS_CMD_HAS_RSP
   1636           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1637          static ZStatus_t zclGeneral_InitiateKeyEstablish_Rsp_CalculateKey( void )
   \                     zclGeneral_InitiateKeyEstablish_Rsp_CalculateKey:
   1638          {
   \   000000   74EE         MOV     A,#-0x12
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 18
   \   000005                ; Auto size: 39
   \   000005   74D9         MOV     A,#-0x27
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   1639            uint8 zData[KEY_ESTABLISH_SHARED_SECRET_LENGTH];
   1640            uint8 MACu[KEY_ESTABLISH_MAC_LENGTH];
   1641            uint8 *caPublicKey, *devicePrivateKey, *keyBit;
   1642            uint8 index, ret, tmp, currentRxState;
   1643          
   1644            // It is possible to have multiple entries in the keyCalulationPending state.
   1645            // Here we assume the partner that starts the key establishment procedure earlier
   1646            // will have a smaller index in the table.
   1647            // However, this might not apply due to different processing capability of
   1648            // different processors.
   1649            if ( (index = zclGeneral_GetKeyEstablishRecIndex_State( KeyEstablishState_KeyCalculatePending ))
   1650                 >= MAX_KEY_ESTABLISHMENT_REC_ENTRY )
   \   00000A                ; Setup parameters for call to function zclGeneral_GetKeyEstablishRecIndex_State
   \   00000A   7903         MOV     R1,#0x3
   \   00000C   12....       LCALL   ??zclGeneral_GetKeyEstablishRecIndex_State?rela
   \   00000F   E9           MOV     A,R1
   \   000010   F8           MOV     R0,A
   \   000011   88..         MOV     ?V0 + 0,R0
   \   000013   C3           CLR     C
   \   000014   9402         SUBB    A,#0x2
   \   000016   4005         JC      ??zclGeneral_InitiateKeyEstablish_Rsp_Calculate_1
   1651            {
   1652              return ZFailure;
   \                     ??zclGeneral_InitiateKeyEstablish_Rsp_Calculate_2:
   \   000018   7901         MOV     R1,#0x1
   \   00001A   02....       LJMP    ??CrossCallReturnLabel_1 & 0xFFFF
   1653            }
   1654          
   1655            if ((caPublicKey = osal_mem_alloc(ZCL_KE_CA_PUBLIC_KEY_LEN)) == NULL)
   \                     ??zclGeneral_InitiateKeyEstablish_Rsp_Calculate_1:
   \   00001D                ; Setup parameters for call to function osal_mem_alloc
   \   00001D   7A16         MOV     R2,#0x16
   \   00001F   7B00         MOV     R3,#0x0
   \   000021   12....       LCALL   ??osal_mem_alloc?relay
   \   000024   8A..         MOV     ?V0 + 2,R2
   \   000026   8B..         MOV     ?V0 + 3,R3
   \   000028   EA           MOV     A,R2
   \   000029   45..         ORL     A,?V0 + 3
   \   00002B   700A         JNZ     ??zclGeneral_InitiateKeyEstablish_Rsp_Calculate_3
   1656            {
   1657              // Reset the entry from the rec table
   1658              zclGeneral_ResetKeyEstablishRec( index );
   \                     ??zclGeneral_InitiateKeyEstablish_Rsp_Calculate_4:
   \   00002D                ; Setup parameters for call to function zclGeneral_ResetKeyEstablishRec
   \   00002D   A9..         MOV     R1,?V0 + 0
   \   00002F   12....       LCALL   ??zclGeneral_ResetKeyEstablishRec?relay
   1659          
   1660              return ZCL_STATUS_SOFTWARE_FAILURE;  // Memory allocation failure.
   \                     ??zclGeneral_InitiateKeyEstablish_Rsp_Calculate_5:
   \   000032   79C1         MOV     R1,#-0x3f
   \   000034   02....       LJMP    ??CrossCallReturnLabel_1 & 0xFFFF
   1661            }
   1662            if ((devicePrivateKey = osal_mem_alloc(ZCL_KE_DEVICE_PRIVATE_KEY_LEN)) == NULL)
   \                     ??zclGeneral_InitiateKeyEstablish_Rsp_Calculate_3:
   \   000037                ; Setup parameters for call to function osal_mem_alloc
   \   000037   12....       LCALL   ?Subroutine70 & 0xFFFF
   \                     ??CrossCallReturnLabel_95:
   \   00003A   700E         JNZ     ??zclGeneral_InitiateKeyEstablish_Rsp_Calculate_6
   1663            {
   1664              // Reset the entry from the rec table
   1665              zclGeneral_ResetKeyEstablishRec( index );
   \   00003C                ; Setup parameters for call to function zclGeneral_ResetKeyEstablishRec
   \   00003C   A9..         MOV     R1,?V0 + 0
   \   00003E   12....       LCALL   ??zclGeneral_ResetKeyEstablishRec?relay
   1666          
   1667              osal_mem_free(caPublicKey);
   \   000041                ; Setup parameters for call to function osal_mem_free
   \   000041   AA..         MOV     R2,?V0 + 2
   \   000043   AB..         MOV     R3,?V0 + 3
   \   000045   12....       LCALL   ??osal_mem_free?relay
   1668              return ZCL_STATUS_SOFTWARE_FAILURE;  // Memory allocation failure.
   \   000048   80E8         SJMP    ??zclGeneral_InitiateKeyEstablish_Rsp_Calculate_5
   1669            }
   1670            osal_nv_read(ZCD_NV_CA_PUBLIC_KEY, 0, ZCL_KE_CA_PUBLIC_KEY_LEN, caPublicKey);
   \                     ??zclGeneral_InitiateKeyEstablish_Rsp_Calculate_6:
   \   00004A                ; Setup parameters for call to function osal_nv_read
   \   00004A   78..         MOV     R0,#?V0 + 2
   \   00004C   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00004F   75..16       MOV     ?V0 + 4,#0x16
   \   000052   75..00       MOV     ?V0 + 5,#0x0
   \   000055   78..         MOV     R0,#?V0 + 4
   \   000057   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00005A   7C00         MOV     R4,#0x0
   \   00005C   7D00         MOV     R5,#0x0
   \   00005E   7A6B         MOV     R2,#0x6b
   \   000060   12....       LCALL   ??Subroutine100_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_133:
   \   000063   12....       LCALL   ?DEALLOC_XSTACK8
   1671            osal_nv_read(ZCD_NV_DEVICE_PRIVATE_KEY, 0, ZCL_KE_DEVICE_PRIVATE_KEY_LEN, devicePrivateKey);
   \   000066                ; Setup parameters for call to function osal_nv_read
   \   000066   78..         MOV     R0,#?V0 + 8
   \   000068   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00006B   75..15       MOV     ?V0 + 4,#0x15
   \   00006E   78..         MOV     R0,#?V0 + 4
   \   000070   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000073   7C00         MOV     R4,#0x0
   \   000075   7D00         MOV     R5,#0x0
   \   000077   7A6A         MOV     R2,#0x6a
   \   000079   12....       LCALL   ??Subroutine100_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_134:
   \   00007C   12....       LCALL   ?DEALLOC_XSTACK8
   1672          
   1673            ZMacGetReq( ZMacRxOnIdle, &currentRxState );  // Save current radio state
   \   00007F                ; Setup parameters for call to function ZMacGetReq
   \   00007F   85..82       MOV     DPL,?XSP + 0
   \   000082   85..83       MOV     DPH,?XSP + 1
   \   000085   AA82         MOV     R2,DPL
   \   000087   AB83         MOV     R3,DPH
   \   000089   7952         MOV     R1,#0x52
   \   00008B   12....       LCALL   ??ZMacGetReq?relay
   1674            // Turn off the radio before the key bit generation, in order to avoid
   1675            // incoming messages accumulation by interrupts during the long process time.
   1676            tmp = FALSE;
   \   00008E   7401         MOV     A,#0x1
   \   000090   12....       LCALL   ?XSTACK_DISP0_8
   \   000093   12....       LCALL   ?Subroutine14 & 0xFFFF
   1677            ZMacSetReq( ZMacRxOnIdle, &tmp );
   1678          
   1679            // Generate the Key Bits
   1680            ret = ZSE_ECCKeyBitGenerate( devicePrivateKey, keyEstablishRec[index].pLocalEPrivateKey,
   1681                                       keyEstablishRec[index].pLocalEPublicKey,
   1682                                       keyEstablishRec[index].pRemoteCertificate,
   1683                                       keyEstablishRec[index].pRemotePublicKey,
   1684                                       caPublicKey, zData,
   1685                                       zclGeneral_KeyEstablishment_HashFunc,
   1686                                       zclKeyEstablish_YieldFunc, zclKeyEstablish_YieldLevel);
   \                     ??CrossCallReturnLabel_258:
   \   000096   E5..         MOV     A,?V0 + 0
   \   000098   12....       LCALL   ?Subroutine39 & 0xFFFF
   \                     ??CrossCallReturnLabel_53:
   \   00009B   12....       LCALL   ?PUSH_XSTACK_I_FOUR
   \   00009E   90....       MOV     DPTR,#zclKeyEstablish_YieldFunc
   \   0000A1   12....       LCALL   ?PUSH_XSTACK8_X_TWO
   \   0000A4   75....       MOV     ?V0 + 4,#??zclGeneral_KeyEstablishment_HashFunc?relay & 0xff
   \   0000A7   75....       MOV     ?V0 + 5,#(??zclGeneral_KeyEstablishment_HashFunc?relay >> 8) & 0xff
   \   0000AA   78..         MOV     R0,#?V0 + 4
   \   0000AC   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000AF   741A         MOV     A,#0x1a
   \   0000B1   12....       LCALL   ?XSTACK_DISP0_8
   \   0000B4   8582..       MOV     ?V0 + 4,DPL
   \   0000B7   8583..       MOV     ?V0 + 5,DPH
   \   0000BA   78..         MOV     R0,#?V0 + 4
   \   0000BC   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000BF   78..         MOV     R0,#?V0 + 2
   \   0000C1   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000C4   EE           MOV     A,R6
   \   0000C5   241D         ADD     A,#0x1d
   \   0000C7   F582         MOV     DPL,A
   \   0000C9   EF           MOV     A,R7
   \   0000CA   12....       LCALL   ??Subroutine126_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_218:
   \   0000CD   12....       LCALL   ?PUSH_XSTACK8_X_TWO
   \   0000D0   EE           MOV     A,R6
   \   0000D1   241F         ADD     A,#0x1f
   \   0000D3   F582         MOV     DPL,A
   \   0000D5   EF           MOV     A,R7
   \   0000D6   12....       LCALL   ??Subroutine126_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_219:
   \   0000D9   12....       LCALL   ?PUSH_XSTACK8_X_TWO
   \   0000DC   12....       LCALL   ?Subroutine71 & 0xFFFF
   \                     ??CrossCallReturnLabel_99:
   \   0000DF   12....       LCALL   ??Subroutine126_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_220:
   \   0000E2   12....       LCALL   ?PUSH_XSTACK8_X_TWO
   \   0000E5   12....       LCALL   ?Subroutine32 & 0xFFFF
   \                     ??CrossCallReturnLabel_37:
   \   0000E8   12....       LCALL   ?DEALLOC_XSTACK8
   \   0000EB   8A..         MOV     ?V0 + 4,R2
   1687          
   1688            ZMacSetReq( ZMacRxOnIdle, &currentRxState );  // Resume saved radio state
   \   0000ED                ; Setup parameters for call to function ZMacSetReq
   \   0000ED   85..82       MOV     DPL,?XSP + 0
   \   0000F0   85..83       MOV     DPH,?XSP + 1
   \   0000F3   AA82         MOV     R2,DPL
   \   0000F5   AB83         MOV     R3,DPH
   \   0000F7   7952         MOV     R1,#0x52
   \   0000F9   12....       LCALL   ??ZMacSetReq?relay
   1689          
   1690            osal_mem_free(caPublicKey);
   \   0000FC                ; Setup parameters for call to function osal_mem_free
   \   0000FC   AA..         MOV     R2,?V0 + 2
   \   0000FE   AB..         MOV     R3,?V0 + 3
   \   000100   12....       LCALL   ?Subroutine72 & 0xFFFF
   1691            osal_mem_free(devicePrivateKey);
   1692          
   1693            if ( ret != MCE_SUCCESS )
   \                     ??CrossCallReturnLabel_101:
   \   000103   6032         JZ      ??zclGeneral_InitiateKeyEstablish_Rsp_Calculate_7
   1694            {
   1695              // Key Bit generation failure. Send terminate key command
   1696               zclGeneral_KeyEstablish_Send_TerminateKeyEstablishment( ZCL_KEY_ESTABLISHMENT_ENDPOINT,
   1697                                                                      &(keyEstablishRec[index].dstAddr),
   1698                                                                      TermKeyStatus_BadKeyConfirm,
   1699                                                                      KEY_ESTABLISHMENT_AVG_TIMEOUT,
   1700                                                                      KEY_ESTABLISHMENT_SUITE,
   1701                                                                      ZCL_FRAME_CLIENT_SERVER_DIR,
   1702                                                                      FALSE, zcl_SeqNum++ );
   \   000105   12....       LCALL   ?Subroutine19 & 0xFFFF
   \                     ??CrossCallReturnLabel_15:
   \   000108   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00010B   75..00       MOV     ?V0 + 1,#0x0
   \   00010E   78..         MOV     R0,#?V0 + 1
   \   000110   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000113   78..         MOV     R0,#?V0 + 1
   \   000115   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000118   75..01       MOV     ?V0 + 2,#0x1
   \   00011B   75..00       MOV     ?V0 + 3,#0x0
   \   00011E   78..         MOV     R0,#?V0 + 2
   \   000120   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000123   7D1C         MOV     R5,#0x1c
   \   000125   7C02         MOV     R4,#0x2
   \   000127   E5..         MOV     A,?V0 + 0
   \   000129   12....       LCALL   ?Subroutine47 & 0xFFFF
   \                     ??CrossCallReturnLabel_63:
   \   00012C   12....       LCALL   ?DEALLOC_XSTACK8
   1703               // Reset the entry from the rec table
   1704               zclGeneral_ResetKeyEstablishRec( index );
   \   00012F                ; Setup parameters for call to function zclGeneral_ResetKeyEstablishRec
   \   00012F   A9..         MOV     R1,?V0 + 0
   \   000131   12....       LCALL   ??zclGeneral_ResetKeyEstablishRec?relay
   1705          
   1706          #if defined (NWK_AUTO_POLL)
   1707              // Restore the saved poll rate for end device
   1708              NLME_SetPollRate(zclSavedPollRate);
   1709          #endif
   1710          
   1711              return ZFailure;
   \   000134   02....       LJMP    ??zclGeneral_InitiateKeyEstablish_Rsp_Calculate_2 & 0xFFFF
   1712            }
   1713            else
   1714            {
   1715              // Allocate buffer to store KDF(Z) = MacKey || KeyData
   1716              if ( (keyBit = osal_mem_alloc( KEY_ESTABLISH_KEY_DATA_LENGTH +
   1717                                           KEY_ESTABLISH_MAC_KEY_LENGTH)) == NULL )
   \                     ??zclGeneral_InitiateKeyEstablish_Rsp_Calculate_7:
   \   000137                ; Setup parameters for call to function osal_mem_alloc
   \   000137   12....       LCALL   ?Subroutine69 & 0xFFFF
   \                     ??CrossCallReturnLabel_207:
   \   00013A   8A..         MOV     ?V0 + 2,R2
   \   00013C   8B..         MOV     ?V0 + 3,R3
   \   00013E   EA           MOV     A,R2
   \   00013F   45..         ORL     A,?V0 + 3
   \   000141   7003         JNZ     $+5
   \   000143   02....       LJMP    ??zclGeneral_InitiateKeyEstablish_Rsp_Calculate_4 & 0xFFFF
   1718              {
   1719                // Reset the entry from the rec table
   1720                zclGeneral_ResetKeyEstablishRec( index );
   1721          
   1722                return  ZCL_STATUS_SOFTWARE_FAILURE; // Memory allocation failure
   1723              }
   1724          
   1725              // Derive the keying data using KDF function
   1726              zclGeneral_KeyEstablishment_KeyDeriveFunction(zData,
   1727                                                            KEY_ESTABLISH_SHARED_SECRET_LENGTH,
   1728                                                            keyBit );
   \   000146                ; Setup parameters for call to function zclGeneral_KeyEstablishment_KeyDeriveFunction
   \   000146   AC..         MOV     R4,?V0 + 2
   \   000148   AD..         MOV     R5,?V0 + 3
   \   00014A   7915         MOV     R1,#0x15
   \   00014C   7412         MOV     A,#0x12
   \   00014E   12....       LCALL   ?XSTACK_DISP0_8
   \   000151   AA82         MOV     R2,DPL
   \   000153   AB83         MOV     R3,DPH
   \   000155   12....       LCALL   ??zclGeneral_KeyEstablishment_KeyDeriveFunction
   1729          
   1730              // Save the derived 128-bit keyData
   1731              osal_memcpy( keyEstablishRec[index].pMacKey, keyBit, KEY_ESTABLISH_KEY_DATA_LENGTH);
   \   000158                ; Setup parameters for call to function osal_memcpy
   \   000158   78..         MOV     R0,#?V0 + 4
   \   00015A   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   00015D   7C10         MOV     R4,#0x10
   \   00015F   7D00         MOV     R5,#0x0
   \   000161   EE           MOV     A,R6
   \   000162   2423         ADD     A,#0x23
   \   000164   12....       LCALL   ??Subroutine130_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_249:
   \   000167   12....       LCALL   ?DEALLOC_XSTACK8
   1732              osal_memcpy( keyEstablishRec[index].pKey, &(keyBit[KEY_ESTABLISH_MAC_KEY_LENGTH]),
   1733                           KEY_ESTABLISH_KEY_DATA_LENGTH);
   \   00016A                ; Setup parameters for call to function osal_memcpy
   \   00016A   E5..         MOV     A,?V0 + 2
   \   00016C   2410         ADD     A,#0x10
   \   00016E   F5..         MOV     ?V0 + 4,A
   \   000170   E5..         MOV     A,?V0 + 3
   \   000172   12....       LCALL   ?Subroutine65 & 0xFFFF
   \                     ??CrossCallReturnLabel_91:
   \   000175   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   000178   7C10         MOV     R4,#0x10
   \   00017A   7D00         MOV     R5,#0x0
   \   00017C   EE           MOV     A,R6
   \   00017D   2421         ADD     A,#0x21
   \   00017F   12....       LCALL   ??Subroutine130_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_250:
   \   000182   12....       LCALL   ?DEALLOC_XSTACK8
   1734          
   1735              // Calculate MAC(U). Note that the keyBit is also pointing to the macKey
   1736              zclGeneral_KeyEstablishment_GenerateMAC( index, TRUE, MACu );
   \   000185                ; Setup parameters for call to function zclGeneral_KeyEstablishment_GenerateMAC
   \   000185   7402         MOV     A,#0x2
   \   000187   12....       LCALL   ?XSTACK_DISP0_8
   \   00018A   AC82         MOV     R4,DPL
   \   00018C   AD83         MOV     R5,DPH
   \   00018E   7A01         MOV     R2,#0x1
   \   000190   A9..         MOV     R1,?V0 + 0
   \   000192   12....       LCALL   ??zclGeneral_KeyEstablishment_GenerateMAC?relay
   1737              osal_mem_free( keyBit );
   \   000195                ; Setup parameters for call to function osal_mem_free
   \   000195   AA..         MOV     R2,?V0 + 2
   \   000197   AB..         MOV     R3,?V0 + 3
   \   000199   12....       LCALL   ??osal_mem_free?relay
   1738          
   1739              // Send MAC(U) to the Partner
   1740              zclGeneral_KeyEstablish_Send_ConfirmKey( ZCL_KEY_ESTABLISHMENT_ENDPOINT,
   1741                                                       &(keyEstablishRec[index].dstAddr),
   1742                                                       MACu,
   1743                                                       FALSE, zcl_SeqNum++ );
   \   00019C   12....       LCALL   ?Subroutine19 & 0xFFFF
   \                     ??CrossCallReturnLabel_16:
   \   00019F   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0001A2   75..00       MOV     ?V0 + 1,#0x0
   \   0001A5   78..         MOV     R0,#?V0 + 1
   \   0001A7   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0001AA   7404         MOV     A,#0x4
   \   0001AC   12....       LCALL   ?XSTACK_DISP0_8
   \   0001AF   AC82         MOV     R4,DPL
   \   0001B1   AD83         MOV     R5,DPH
   \   0001B3   EE           MOV     A,R6
   \   0001B4   FA           MOV     R2,A
   \   0001B5   EF           MOV     A,R7
   \   0001B6   FB           MOV     R3,A
   \   0001B7   790A         MOV     R1,#0xa
   \   0001B9   12....       LCALL   ??zclGeneral_KeyEstablish_Send_ConfirmKey?relay
   \   0001BC   7402         MOV     A,#0x2
   \   0001BE   12....       LCALL   ?DEALLOC_XSTACK8
   1744          
   1745              // The Request was processed successfuly, now the age timer needs to start based on the
   1746              // remote Config Key Generate
   1747              keyEstablishRec[index].age = keyEstablishRec[index].remoteConfKeyGenTime;
   \   0001C1   EE           MOV     A,R6
   \   0001C2   2426         ADD     A,#0x26
   \   0001C4   F582         MOV     DPL,A
   \   0001C6   EF           MOV     A,R7
   \   0001C7   12....       LCALL   ??Subroutine128_0 & 0xFFFF
   1748          
   1749              // Start the Config Key Generate aging timer
   1750              osal_start_reload_timer( zcl_KeyEstablishment_TaskID, KEY_ESTABLISHMENT_REC_AGING_EVT,
   1751                                       KEY_ESTABLISHMENT_REC_AGING_INTERVAL );
   1752          
   1753              keyEstablishRec[index].state = KeyEstablishState_ConfirmPending;
   1754          
   1755              return ZSuccess;
   1756            }
   \                     ??CrossCallReturnLabel_238:
   \   0001CA   C0E0         PUSH    A
   \   0001CC   12....       LCALL   ?Subroutine57 & 0xFFFF
   \                     ??CrossCallReturnLabel_79:
   \   0001CF   D0E0         POP     A
   \   0001D1   12....       LCALL   ?Subroutine11 & 0xFFFF
   \                     ??CrossCallReturnLabel_1:
   \   0001D4   7427         MOV     A,#0x27
   \   0001D6   02....       LJMP    ?Subroutine6 & 0xFFFF
   1757          }
   1758          
   1759          /*********************************************************************
   1760           * @fn      zclGeneral_InitKeyEstablishRecTable
   1761           *
   1762           * @brief   Initializae key establishment record table entries.
   1763           *
   1764           * @param   none
   1765           *
   1766           * @return  none
   1767           */
   1768          static void zclGeneral_InitKeyEstablishRecTable( void )
   1769          {
   1770            uint8 i;
   1771          
   1772            for ( i = 0; i < MAX_KEY_ESTABLISHMENT_REC_ENTRY; i++ )
   1773            {
   1774              zclGeneral_ResetKeyEstablishRec(i);
   1775            }
   1776          }
   1777          
   1778          /*********************************************************************
   1779           * @fn      zclGeneral_GetKeyEstablishRecIndex
   1780           *
   1781           * @brief   Get the index of a particular key establishment record.
   1782           *          If the input is INVALID_PARTNER_ADDR, return an empty slot.
   1783           *
   1784           * @param   partnerAddress - address of the partner that the local device
   1785           *                           is establishing key with.
   1786           *
   1787           * @return   index of the record
   1788           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1789          static uint8 zclGeneral_GetKeyEstablishRecIndex( uint16 partnerAddress )
   \                     zclGeneral_GetKeyEstablishRecIndex:
   1790          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
   1791            uint8 i;
   1792          
   1793            // Find an existing entry or vacant entry, depends on what DstAddress is
   1794            for ( i = 0; i < MAX_KEY_ESTABLISHMENT_REC_ENTRY ; i++ )
   \   000004   7900         MOV     R1,#0x0
   1795            {
   1796              if ( keyEstablishRec[i].dstAddr.addr.shortAddr == partnerAddress )
   \                     ??zclGeneral_GetKeyEstablishRecIndex_0:
   \   000006   E9           MOV     A,R1
   \   000007   75F027       MOV     B,#0x27
   \   00000A   A4           MUL     AB
   \   00000B   FC           MOV     R4,A
   \   00000C   ADF0         MOV     R5,B
   \   00000E   74..         MOV     A,#keyEstablishRec & 0xff
   \   000010   2C           ADD     A,R4
   \   000011   F582         MOV     DPL,A
   \   000013   74..         MOV     A,#(keyEstablishRec >> 8) & 0xff
   \   000015   3D           ADDC    A,R5
   \   000016   F583         MOV     DPH,A
   \   000018   E0           MOVX    A,@DPTR
   \   000019   6A           XRL     A,R2
   \   00001A   7003         JNZ     ??zclGeneral_GetKeyEstablishRecIndex_1
   \   00001C   A3           INC     DPTR
   \   00001D   E0           MOVX    A,@DPTR
   \   00001E   6B           XRL     A,R3
   \                     ??zclGeneral_GetKeyEstablishRecIndex_1:
   \   00001F   6007         JZ      ??zclGeneral_GetKeyEstablishRecIndex_2
   1797              {
   1798                // entry found
   1799                break;
   1800              }
   1801            }
   \   000021   09           INC     R1
   \   000022   E9           MOV     A,R1
   \   000023   C3           CLR     C
   \   000024   9402         SUBB    A,#0x2
   \   000026   40DE         JC      ??zclGeneral_GetKeyEstablishRecIndex_0
   1802          
   1803            return i;
   \                     ??zclGeneral_GetKeyEstablishRecIndex_2:
   \   000028   02....       LJMP    ?Subroutine4 & 0xFFFF
   1804          }
   1805          
   1806          /*********************************************************************
   1807           * @fn      zclGeneral_GetKeyEstablishRecIndex
   1808           *
   1809           * @brief   Get the index of a particular key establishment record.
   1810           *          If the input is INVALID_PARTNER_ADDR, return an empty slot.
   1811           *
   1812           * @param   state - state to find.
   1813           *
   1814           * @return   index of the record
   1815           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1816          static uint8 zclGeneral_GetKeyEstablishRecIndex_State( KeyEstablishState_t state )
   \                     zclGeneral_GetKeyEstablishRecIndex_State:
   1817          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
   \   000004   E9           MOV     A,R1
   \   000005   FC           MOV     R4,A
   1818            uint8 i;
   1819          
   1820            // Find an existing entry or vacant entry, depends on what DstAddress is
   1821            for ( i = 0; i < MAX_KEY_ESTABLISHMENT_REC_ENTRY ; i++ )
   \   000006   7900         MOV     R1,#0x0
   1822            {
   1823              if ( keyEstablishRec[i].state == state )
   \                     ??zclGeneral_GetKeyEstablishRecIndex_State_0:
   \   000008   E9           MOV     A,R1
   \   000009   75F027       MOV     B,#0x27
   \   00000C   A4           MUL     AB
   \   00000D   FA           MOV     R2,A
   \   00000E   ABF0         MOV     R3,B
   \   000010   74..         MOV     A,#(keyEstablishRec + 24) & 0xff
   \   000012   2A           ADD     A,R2
   \   000013   F582         MOV     DPL,A
   \   000015   74..         MOV     A,#((keyEstablishRec + 24) >> 8) & 0xff
   \   000017   3B           ADDC    A,R3
   \   000018   F583         MOV     DPH,A
   \   00001A   E0           MOVX    A,@DPTR
   \   00001B   6C           XRL     A,R4
   \   00001C   6007         JZ      ??zclGeneral_GetKeyEstablishRecIndex_State_1
   1824              {
   1825                // entry found
   1826                break;
   1827              }
   1828            }
   \   00001E   09           INC     R1
   \   00001F   E9           MOV     A,R1
   \   000020   C3           CLR     C
   \   000021   9402         SUBB    A,#0x2
   \   000023   40E3         JC      ??zclGeneral_GetKeyEstablishRecIndex_State_0
   1829          
   1830            return i;
   \                     ??zclGeneral_GetKeyEstablishRecIndex_State_1:
   \   000025   02....       LJMP    ?Subroutine4 & 0xFFFF
   1831          }
   1832          
   1833          /*********************************************************************
   1834           * @fn      zclGeneral_AddKeyEstablishRec
   1835           *
   1836           * @brief   Add a new key establishment record. If one already exist,
   1837           *          remove the existng entry. After initialization, fill in
   1838           *          partner short address and extended address. If partner extended
   1839           *          address not available, return failure.
   1840           *
   1841           * @param   addr - address of the partner
   1842           *
   1843           * @return  index - 0..(MAX_KEY_ESTABLISHMENT_REC_ENTRY-1) @ success
   1844           *                - MAX_KEY_ESTABLISHMENT_REC_ENTRY @ failure due to rec table full or
   1845           *                  partner IEEE address not available or failure to allocate key buffers.
   1846           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1847          static uint8 zclGeneral_AddKeyEstablishRec( afAddrType_t *addr )
   \                     zclGeneral_AddKeyEstablishRec:
   1848          {
   \   000000   74F1         MOV     A,#-0xf
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 15
   \   000005                ; Auto size: 0
   \   000005   12....       LCALL   ?Subroutine42 & 0xFFFF
   1849            uint8 index, *pBuf;
   1850          
   1851            // Search for all current key establishment record
   1852            // If not found, create a new entry
   1853            if ( ( index = zclGeneral_GetKeyEstablishRecIndex(addr->addr.shortAddr) )
   1854                < MAX_KEY_ESTABLISHMENT_REC_ENTRY )
   \                     ??CrossCallReturnLabel_166:
   \   000008   12....       LCALL   ??zclGeneral_GetKeyEstablishRecIndex?relay
   \   00000B   E9           MOV     A,R1
   \   00000C   C3           CLR     C
   \   00000D   9402         SUBB    A,#0x2
   \   00000F   5003         JNC     ??zclGeneral_AddKeyEstablishRec_0
   1855            {
   1856              // expire the existing entry for this address
   1857              zclGeneral_ResetKeyEstablishRec( index );
   \   000011                ; Setup parameters for call to function zclGeneral_ResetKeyEstablishRec
   \   000011   12....       LCALL   ??zclGeneral_ResetKeyEstablishRec?relay
   1858            }
   1859          
   1860            // Create a new Entry
   1861            if ( (index = zclGeneral_GetKeyEstablishRecIndex(INVALID_PARTNER_ADDR))
   1862                < MAX_KEY_ESTABLISHMENT_REC_ENTRY )
   \                     ??zclGeneral_AddKeyEstablishRec_0:
   \   000014                ; Setup parameters for call to function zclGeneral_GetKeyEstablishRecIndex
   \   000014   7AFE         MOV     R2,#-0x2
   \   000016   7BFF         MOV     R3,#-0x1
   \   000018   12....       LCALL   ??zclGeneral_GetKeyEstablishRecIndex?relay
   \   00001B   E9           MOV     A,R1
   \   00001C   F8           MOV     R0,A
   \   00001D   88..         MOV     ?V0 + 0,R0
   \   00001F   C3           CLR     C
   \   000020   9402         SUBB    A,#0x2
   \   000022   507C         JNC     ??zclGeneral_AddKeyEstablishRec_1
   1863            {
   1864              // Allocate memory for the rest of the fields
   1865              if ( (pBuf = osal_mem_alloc( ZCL_KE_DEVICE_PRIVATE_KEY_LEN +
   1866                                           ZCL_KE_CA_PUBLIC_KEY_LEN +
   1867                                           ZCL_KE_CA_PUBLIC_KEY_LEN +
   1868                                           ZCL_KE_IMPLICIT_CERTIFICATE_LEN +
   1869                                           KEY_ESTABLISH_KEY_DATA_LENGTH +
   1870                                           KEY_ESTABLISH_MAC_KEY_LENGTH )) != NULL )
   \   000024                ; Setup parameters for call to function osal_mem_alloc
   \   000024   7A91         MOV     R2,#-0x6f
   \   000026   7B00         MOV     R3,#0x0
   \   000028   12....       LCALL   ??osal_mem_alloc?relay
   \   00002B   8A..         MOV     ?V0 + 2,R2
   \   00002D   8B..         MOV     ?V0 + 3,R3
   \   00002F   A8..         MOV     R0,?V0 + 2
   \   000031   A9..         MOV     R1,?V0 + 3
   \   000033   E8           MOV     A,R0
   \   000034   49           ORL     A,R1
   \   000035   6066         JZ      ??zclGeneral_AddKeyEstablishRec_2
   1871              {
   1872                keyEstablishRec[index].pLocalEPrivateKey =  pBuf;
   \   000037   E5..         MOV     A,?V0 + 0
   \   000039   75F027       MOV     B,#0x27
   \   00003C   A4           MUL     AB
   \   00003D   FA           MOV     R2,A
   \   00003E   ABF0         MOV     R3,B
   \   000040   74..         MOV     A,#keyEstablishRec & 0xff
   \   000042   2A           ADD     A,R2
   \   000043   FA           MOV     R2,A
   \   000044   74..         MOV     A,#(keyEstablishRec >> 8) & 0xff
   \   000046   3B           ADDC    A,R3
   \   000047   FB           MOV     R3,A
   \   000048   EA           MOV     A,R2
   \   000049   2419         ADD     A,#0x19
   \   00004B   12....       LCALL   ?Subroutine60 & 0xFFFF
   1873                                                            pBuf += ZCL_KE_DEVICE_PRIVATE_KEY_LEN;
   \                     ??CrossCallReturnLabel_83:
   \   00004E   2415         ADD     A,#0x15
   \   000050   F8           MOV     R0,A
   \   000051   E9           MOV     A,R1
   \   000052   3400         ADDC    A,#0x0
   \   000054   F9           MOV     R1,A
   1874                keyEstablishRec[index].pLocalEPublicKey =   pBuf;
   \   000055   EA           MOV     A,R2
   \   000056   241B         ADD     A,#0x1b
   \   000058   12....       LCALL   ?Subroutine16 & 0xFFFF
   1875                                                            pBuf += ZCL_KE_CA_PUBLIC_KEY_LEN;
   1876                keyEstablishRec[index].pRemotePublicKey =   pBuf;
   \                     ??CrossCallReturnLabel_8:
   \   00005B   241D         ADD     A,#0x1d
   \   00005D   12....       LCALL   ?Subroutine16 & 0xFFFF
   1877                                                            pBuf += ZCL_KE_CA_PUBLIC_KEY_LEN;
   1878                keyEstablishRec[index].pRemoteCertificate = pBuf;
   \                     ??CrossCallReturnLabel_9:
   \   000060   241F         ADD     A,#0x1f
   \   000062   12....       LCALL   ?Subroutine60 & 0xFFFF
   1879                                                            pBuf += ZCL_KE_IMPLICIT_CERTIFICATE_LEN;
   \                     ??CrossCallReturnLabel_84:
   \   000065   2430         ADD     A,#0x30
   \   000067   F8           MOV     R0,A
   \   000068   E9           MOV     A,R1
   \   000069   3400         ADDC    A,#0x0
   \   00006B   F9           MOV     R1,A
   1880                keyEstablishRec[index].pKey =               pBuf;
   \   00006C   EA           MOV     A,R2
   \   00006D   2421         ADD     A,#0x21
   \   00006F   12....       LCALL   ?Subroutine60 & 0xFFFF
   1881                                                            pBuf += KEY_ESTABLISH_KEY_DATA_LENGTH;
   1882                keyEstablishRec[index].pMacKey =            pBuf;
   \                     ??CrossCallReturnLabel_85:
   \   000072   2410         ADD     A,#0x10
   \   000074   F8           MOV     R0,A
   \   000075   E9           MOV     A,R1
   \   000076   3400         ADDC    A,#0x0
   \   000078   F9           MOV     R1,A
   \   000079   EA           MOV     A,R2
   \   00007A   2423         ADD     A,#0x23
   \   00007C   F582         MOV     DPL,A
   \   00007E   EB           MOV     A,R3
   \   00007F   12....       LCALL   ??Subroutine126_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_221:
   \   000082   E8           MOV     A,R0
   \   000083   F0           MOVX    @DPTR,A
   \   000084   A3           INC     DPTR
   \   000085   E9           MOV     A,R1
   \   000086   F0           MOVX    @DPTR,A
   1883          
   1884                (void)osal_memcpy(&keyEstablishRec[index].dstAddr, addr, sizeof(afAddrType_t));
   \   000087                ; Setup parameters for call to function osal_memcpy
   \   000087   8E..         MOV     ?V0 + 4,R6
   \   000089   8F..         MOV     ?V0 + 5,R7
   \   00008B   75..00       MOV     ?V0 + 6,#0x0
   \   00008E   78..         MOV     R0,#?V0 + 4
   \   000090   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   000093   7C0C         MOV     R4,#0xc
   \   000095   12....       LCALL   ??Subroutine103_0 & 0xFFFF
   1885          
   1886                // extAddr will be unknown when the initator first initiates the key establishment
   1887                // It will be filled in later after the remote certificate is received.
   1888              }
   \                     ??CrossCallReturnLabel_150:
   \   000098   12....       LCALL   ?DEALLOC_XSTACK8
   \   00009B   8003         SJMP    ??zclGeneral_AddKeyEstablishRec_1
   1889              else
   1890              {
   1891                index = MAX_KEY_ESTABLISHMENT_REC_ENTRY;
   \                     ??zclGeneral_AddKeyEstablishRec_2:
   \   00009D   75..02       MOV     ?V0 + 0,#0x2
   1892              }
   1893            }
   1894          
   1895            return index;
   \                     ??zclGeneral_AddKeyEstablishRec_1:
   \   0000A0   A9..         MOV     R1,?V0 + 0
   \   0000A2   02....       LJMP    ??Subroutine117_0 & 0xFFFF
   1896          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine60:
   \   000000   12....       LCALL   ?Subroutine89 & 0xFFFF
   \                     ??CrossCallReturnLabel_122:
   \   000003   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine89:
   \   000000   F582         MOV     DPL,A
   \   000002   EB           MOV     A,R3
   \   000003   3400         ADDC    A,#0x0
   \   000005   F583         MOV     DPH,A
   \   000007   E8           MOV     A,R0
   \   000008   F0           MOVX    @DPTR,A
   \   000009   A3           INC     DPTR
   \   00000A   E9           MOV     A,R1
   \   00000B   F0           MOVX    @DPTR,A
   \   00000C   E8           MOV     A,R0
   \   00000D   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine16:
   \   000000   12....       LCALL   ?Subroutine89 & 0xFFFF
   \                     ??CrossCallReturnLabel_123:
   \   000003   2416         ADD     A,#0x16
   \   000005   F8           MOV     R0,A
   \   000006   E9           MOV     A,R1
   \   000007   3400         ADDC    A,#0x0
   \   000009   F9           MOV     R1,A
   \   00000A   EA           MOV     A,R2
   \   00000B   22           RET
   1897          
   1898          /*********************************************************************
   1899           * @fn      zclGeneral_AgeKeyEstablishRec
   1900           *
   1901           * @brief   Function to age Key Establish Rec. This function is called
   1902           *          as event handler for KEY_ESTABLISHMENT_REC_AGING_EVT every
   1903           *          second.
   1904           *
   1905           * @param   none
   1906           *
   1907           * @return  none
   1908           */
   1909          static void zclGeneral_AgeKeyEstablishRec( void )
   1910          {
   1911            uint8 i;
   1912            bool recFound = FALSE;
   1913          
   1914            for ( i = 0; i < MAX_KEY_ESTABLISHMENT_REC_ENTRY; i++ )
   1915            {
   1916              // Only age valid rec entry
   1917              if (keyEstablishRec[i].dstAddr.addrMode == afAddrNotPresent)
   1918              {
   1919                continue;
   1920              }
   1921          
   1922              if (--(keyEstablishRec[i].age) == 0)
   1923              {
   1924                // Reset this table entry
   1925                zclGeneral_ResetKeyEstablishRec( i );
   1926              }
   1927              else
   1928              {
   1929                 recFound = TRUE;
   1930              }
   1931            }
   1932          
   1933            if ( recFound == FALSE )
   1934            {
   1935              osal_stop_timerEx( zcl_KeyEstablishment_TaskID, KEY_ESTABLISHMENT_REC_AGING_EVT );
   1936            }
   1937          }
   1938          
   1939          /*********************************************************************
   1940           * @fn      zclGeneral_ResetKeyEstablishRec
   1941           *
   1942           * @brief   Reset specified key establishment record to initial value.
   1943           *
   1944           * @param   index - index of table entry to reset
   1945           *
   1946           * @return   ZStatus_t - ZSuccess or ZFailure
   1947           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1948          static void zclGeneral_ResetKeyEstablishRec( uint8 index )
   \                     zclGeneral_ResetKeyEstablishRec:
   1949          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   89..         MOV     ?V0 + 0,R1
   1950            uint8 *pKeys;
   1951          
   1952            pKeys = keyEstablishRec[index].pLocalEPrivateKey;
   \   000007   E9           MOV     A,R1
   \   000008   75F027       MOV     B,#0x27
   \   00000B   A4           MUL     AB
   \   00000C   F8           MOV     R0,A
   \   00000D   A9F0         MOV     R1,B
   \   00000F   74..         MOV     A,#(keyEstablishRec + 25) & 0xff
   \   000011   28           ADD     A,R0
   \   000012   F582         MOV     DPL,A
   \   000014   74..         MOV     A,#((keyEstablishRec + 25) >> 8) & 0xff
   \   000016   12....       LCALL   ?Subroutine97 & 0xFFFF
   \                     ??CrossCallReturnLabel_183:
   \   000019   FE           MOV     R6,A
   \   00001A   A3           INC     DPTR
   \   00001B   E0           MOVX    A,@DPTR
   \   00001C   FF           MOV     R7,A
   1953            if ( pKeys != NULL )
   \   00001D   EE           MOV     A,R6
   \   00001E   4F           ORL     A,R7
   \   00001F   6014         JZ      ??zclGeneral_ResetKeyEstablishRec_0
   1954            {
   1955              // All "Key infomation" was allocated in one block,
   1956              // Clear the allocated memory to remove all copies of keys,
   1957              (void)osal_memset( pKeys, 0, ZCL_KE_DEVICE_PRIVATE_KEY_LEN +
   1958                                           ZCL_KE_CA_PUBLIC_KEY_LEN +
   1959                                           ZCL_KE_CA_PUBLIC_KEY_LEN +
   1960                                           ZCL_KE_IMPLICIT_CERTIFICATE_LEN +
   1961                                           KEY_ESTABLISH_KEY_DATA_LENGTH +
   1962                                           KEY_ESTABLISH_MAC_KEY_LENGTH );
   \   000021                ; Setup parameters for call to function osal_memset
   \   000021   7C91         MOV     R4,#-0x6f
   \   000023   7D00         MOV     R5,#0x0
   \   000025   7900         MOV     R1,#0x0
   \   000027   EE           MOV     A,R6
   \   000028   FA           MOV     R2,A
   \   000029   EF           MOV     A,R7
   \   00002A   FB           MOV     R3,A
   \   00002B   12....       LCALL   ??osal_memset?relay
   1963              osal_mem_free( pKeys );
   \   00002E                ; Setup parameters for call to function osal_mem_free
   \   00002E   EE           MOV     A,R6
   \   00002F   FA           MOV     R2,A
   \   000030   EF           MOV     A,R7
   \   000031   FB           MOV     R3,A
   \   000032   12....       LCALL   ??osal_mem_free?relay
   1964            }
   1965          
   1966            // Reset the table entry to initial state
   1967            (void)osal_memset( &(keyEstablishRec[index]), 0, sizeof( zclKeyEstablishRec_t ) );
   \                     ??zclGeneral_ResetKeyEstablishRec_0:
   \   000035   E5..         MOV     A,?V0 + 0
   \   000037   12....       LCALL   ?Subroutine88 & 0xFFFF
   \                     ??CrossCallReturnLabel_243:
   \   00003A                ; Setup parameters for call to function osal_memset
   \   00003A   7C27         MOV     R4,#0x27
   \   00003C   7D00         MOV     R5,#0x0
   \   00003E   7900         MOV     R1,#0x0
   \   000040   EE           MOV     A,R6
   \   000041   FA           MOV     R2,A
   \   000042   EF           MOV     A,R7
   \   000043   FB           MOV     R3,A
   \   000044   12....       LCALL   ??osal_memset?relay
   1968            keyEstablishRec[index].dstAddr.addrMode = afAddrNotPresent;
   \   000047   8E82         MOV     DPL,R6
   \   000049   8F83         MOV     DPH,R7
   \   00004B   A3           INC     DPTR
   \   00004C   A3           INC     DPTR
   \   00004D   A3           INC     DPTR
   \   00004E   A3           INC     DPTR
   \   00004F   A3           INC     DPTR
   \   000050   A3           INC     DPTR
   \   000051   A3           INC     DPTR
   \   000052   A3           INC     DPTR
   \   000053   E4           CLR     A
   \   000054   F0           MOVX    @DPTR,A
   1969            keyEstablishRec[index].dstAddr.addr.shortAddr = INVALID_PARTNER_ADDR;
   \   000055   8E82         MOV     DPL,R6
   \   000057   8F83         MOV     DPH,R7
   \   000059   74FE         MOV     A,#-0x2
   \   00005B   F0           MOVX    @DPTR,A
   \   00005C   A3           INC     DPTR
   \   00005D   04           INC     A
   \   00005E   F0           MOVX    @DPTR,A
   1970            keyEstablishRec[index].appTaskID = INVALID_TASK_ID;
   \   00005F   EE           MOV     A,R6
   \   000060   240D         ADD     A,#0xd
   \   000062   12....       LCALL   ?Subroutine63 & 0xFFFF
   1971            keyEstablishRec[index].age = KEY_ESTABLISHMENT_REC_EXPIRY_TIME;
   \                     ??CrossCallReturnLabel_86:
   \   000065   12....       LCALL   ?Subroutine57 & 0xFFFF
   \                     ??CrossCallReturnLabel_80:
   \   000068   74FF         MOV     A,#-0x1
   \   00006A   12....       LCALL   ?Subroutine17 & 0xFFFF
   1972            keyEstablishRec[index].state = KeyEstablishState_Idle;
   \                     ??CrossCallReturnLabel_11:
   \   00006D   E4           CLR     A
   \   00006E   F0           MOVX    @DPTR,A
   1973            keyEstablishRec[index].remoteEphDataGenTime = KEY_ESTABLISHMENT_EPH_DATA_GEN_INVALID_TIME;
   \   00006F   EE           MOV     A,R6
   \   000070   2425         ADD     A,#0x25
   \   000072   12....       LCALL   ?Subroutine63 & 0xFFFF
   1974            keyEstablishRec[index].remoteConfKeyGenTime = KEY_ESTABLISHMENT_CONF_KEY_GEN_INVALID_TIME;
   \                     ??CrossCallReturnLabel_87:
   \   000075   EE           MOV     A,R6
   \   000076   2426         ADD     A,#0x26
   \   000078   12....       LCALL   ?Subroutine63 & 0xFFFF
   1975          }
   \                     ??CrossCallReturnLabel_88:
   \   00007B   02....       LJMP    ?Subroutine5 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine63:
   \   000000   12....       LCALL   ??Subroutine134_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_265:
   \   000003   74FF         MOV     A,#-0x1
   \   000005   F0           MOVX    @DPTR,A
   \   000006   22           RET
   1976          
   1977          /*********************************************************************
   1978           * @fn      zclGeneral_KeyEstablishment_GetRandom
   1979           *
   1980           * @brief   Fill in a buffer with random numbers
   1981           *
   1982           * @param   buffer - output buffer
   1983           *          len - length of the buffer
   1984           *
   1985           * @return  MCE_SUCCESS indicates success
   1986           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1987          static int zclGeneral_KeyEstablishment_GetRandom(unsigned char *buffer, unsigned long len)
   \                     zclGeneral_KeyEstablishment_GetRandom:
   1988          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   740C         MOV     A,#0xc
   \   000007   12....       LCALL   ?XSTACK_DISP0_8
   \   00000A   78..         MOV     R0,#?V0 + 0
   \   00000C   12....       LCALL   ?L_MOV_X
   1989            uint8 *pBuf;
   1990          
   1991            pBuf = buffer;
   \   00000F   EA           MOV     A,R2
   \   000010   FE           MOV     R6,A
   \   000011   EB           MOV     A,R3
   \   000012   8014         SJMP    ??zclGeneral_KeyEstablishment_GetRandom_0
   1992          
   1993            // Input to SSP_GetTrueRandAES assumes len <= SEC_KEY_LEN
   1994            // Therefore, call SSP_GetTrueRandAES multiple times to
   1995            // fill out the buffer.
   1996            while( len > SEC_KEY_LEN )
   1997            {
   1998              SSP_GetTrueRandAES( SEC_KEY_LEN, pBuf );
   \                     ??zclGeneral_KeyEstablishment_GetRandom_1:
   \   000014                ; Setup parameters for call to function SSP_GetTrueRandAES
   \   000014   7910         MOV     R1,#0x10
   \   000016   12....       LCALL   ??SSP_GetTrueRandAES?relay
   1999              len -= SEC_KEY_LEN;
   \   000019   90....       MOV     DPTR,#__Constant_fffffff0
   \   00001C   78..         MOV     R0,#?V0 + 0
   \   00001E   12....       LCALL   ?L_ADD_X
   2000              pBuf += SEC_KEY_LEN;
   \   000021   EE           MOV     A,R6
   \   000022   2410         ADD     A,#0x10
   \   000024   FE           MOV     R6,A
   \   000025   EF           MOV     A,R7
   \   000026   3400         ADDC    A,#0x0
   \                     ??zclGeneral_KeyEstablishment_GetRandom_0:
   \   000028   FF           MOV     R7,A
   2001            }
   \   000029   90....       MOV     DPTR,#__Constant_11
   \   00002C   78..         MOV     R0,#?V0 + 0
   \   00002E   12....       LCALL   ?UL_GE_X
   \   000031   EE           MOV     A,R6
   \   000032   FA           MOV     R2,A
   \   000033   EF           MOV     A,R7
   \   000034   FB           MOV     R3,A
   \   000035   40DD         JC      ??zclGeneral_KeyEstablishment_GetRandom_1
   2002            SSP_GetTrueRandAES( len, pBuf );
   \   000037                ; Setup parameters for call to function SSP_GetTrueRandAES
   \   000037   A9..         MOV     R1,?V0 + 0
   \   000039   12....       LCALL   ??SSP_GetTrueRandAES?relay
   2003            return MCE_SUCCESS;
   \   00003C   7A00         MOV     R2,#0x0
   \   00003E   7B00         MOV     R3,#0x0
   \   000040   02....       LJMP    ?Subroutine1 & 0xFFFF
   2004          }
   2005          
   2006          /*********************************************************************
   2007           * @fn      zclGeneral_KeyEstablishment_HashFunc
   2008           *
   2009           * @brief   Hash Function
   2010           *
   2011           * @param   digest - output buffer 16 bytes
   2012           *          len - length of the input buffer
   2013           *          data - input buffer
   2014           *
   2015           * @return  MCE_SUCCESS indicates success
   2016           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   2017          static int zclGeneral_KeyEstablishment_HashFunc(unsigned char *digest, unsigned long len, unsigned char *data)
   \                     zclGeneral_KeyEstablishment_HashFunc:
   2018          {
   \   000000   74F2         MOV     A,#-0xe
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 14
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV     ?V0 + 4,R2
   \   000007   8B..         MOV     ?V0 + 5,R3
   \   000009   740E         MOV     A,#0xe
   \   00000B   12....       LCALL   ?XSTACK_DISP0_8
   \   00000E   78..         MOV     R0,#?V0 + 0
   \   000010   12....       LCALL   ?L_MOV_X
   2019            len *= 8;  // Convert to bit length
   2020            sspMMOHash( NULL, 0, data, (uint16)len, digest );
   \   000013                ; Setup parameters for call to function sspMMOHash
   \   000013   78..         MOV     R0,#?V0 + 4
   \   000015   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000018   7403         MOV     A,#0x3
   \   00001A   78..         MOV     R0,#?V0 + 0
   \   00001C   12....       LCALL   ?S_SHL
   \   00001F   78..         MOV     R0,#?V0 + 0
   \   000021   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000024   12....       LCALL   ??Subroutine138_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_280:
   \   000027   12....       LCALL   ?DEALLOC_XSTACK8
   2021            return MCE_SUCCESS;
   \   00002A   7A00         MOV     R2,#0x0
   \   00002C   7B00         MOV     R3,#0x0
   \   00002E   02....       LJMP    ??Subroutine116_0 & 0xFFFF
   2022          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine138_0:
   \   000000   7900         MOV     R1,#0x0
   \   000002   7A00         MOV     R2,#0x0
   \   000004   7B00         MOV     R3,#0x0
   \   000006   12....       LCALL   ??sspMMOHash?relay
   \   000009   7404         MOV     A,#0x4
   \   00000B   22           RET
   2023          
   2024          /*********************************************************************
   2025           * @fn      zclGeneral_KeyEstablishment_KeyDeriveFunction
   2026           *
   2027           * @brief   Key Derive Function (ANSI X9.63).
   2028           *          Note this is not a generalized KDF. It only applies to the KDF
   2029           *          specified in ZigBee SE profile. Only the first two hashed keys
   2030           *          are calculated and concatenated.
   2031           *
   2032           * @param   zData - input shared secret (length = KEY_ESTABLISH_SHARED_SECRET_LENGTH)
   2033           *          keyBitLen - input key data length
   2034           *          keyBit - output buffer ( 16*2 bytes)
   2035           *
   2036           * @return  none
   2037           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine8:
   \   000000   12....       LCALL   ?DEALLOC_XSTACK8
   \   000003                REQUIRE ??Subroutine116_0
   \   000003                ; // Fall through to label ??Subroutine116_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   2038          static void zclGeneral_KeyEstablishment_KeyDeriveFunction( uint8 *zData,
   \                     zclGeneral_KeyEstablishment_KeyDeriveFunction:
   2039                                                                     uint8 keyBitLen,
   2040                                                                     uint8 *keyBit )
   2041          {
   \   000000   74F2         MOV     A,#-0xe
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 14
   \   000005                ; Auto size: 29
   \   000005   74E3         MOV     A,#-0x1d
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   E9           MOV     A,R1
   \   00000B   FE           MOV     R6,A
   \   00000C   8C..         MOV     ?V0 + 4,R4
   \   00000E   8D..         MOV     ?V0 + 5,R5
   2042            uint8 hashCounter[4] = {0x00, 0x00, 0x00, 0x01};
   \   000010   85..82       MOV     DPL,?XSP + 0
   \   000013   85..83       MOV     DPH,?XSP + 1
   \   000016   AC82         MOV     R4,DPL
   \   000018   AD83         MOV     R5,DPH
   \   00001A   7583..       MOV     DPH,#(`?<Constant {0, 0, 0, 1}>` >> 8) & 0xff
   \   00001D   7582..       MOV     DPL,#`?<Constant {0, 0, 0, 1}>` & 0xff
   \   000020   7404         MOV     A,#0x4
   \   000022   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
   2043            uint8 hashedData[KEY_ESTABLISH_SHARED_SECRET_LENGTH + 4];
   2044            uint8 bitLen;
   2045          
   2046            bitLen = (keyBitLen + 4 ) * 8;
   \   000025   7404         MOV     A,#0x4
   \   000027   2E           ADD     A,R6
   \   000028   33           RLC     A
   \   000029   33           RLC     A
   \   00002A   33           RLC     A
   \   00002B   54F8         ANL     A,#0xf8
   \   00002D   FF           MOV     R7,A
   2047          
   2048            // Calculate K1: Ki = Hash(Z || Counter1 )
   2049            osal_memcpy( hashedData, zData, KEY_ESTABLISH_SHARED_SECRET_LENGTH );
   \   00002E                ; Setup parameters for call to function osal_memcpy
   \   00002E   8A..         MOV     ?V0 + 0,R2
   \   000030   8B..         MOV     ?V0 + 1,R3
   \   000032   75..00       MOV     ?V0 + 2,#0x0
   \   000035   78..         MOV     R0,#?V0 + 0
   \   000037   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   00003A   7C15         MOV     R4,#0x15
   \   00003C   7D00         MOV     R5,#0x0
   \   00003E   7407         MOV     A,#0x7
   \   000040   12....       LCALL   ?XSTACK_DISP0_8
   \   000043   AA82         MOV     R2,DPL
   \   000045   AB83         MOV     R3,DPH
   \   000047   12....       LCALL   ??Subroutine104_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_151:
   \   00004A   12....       LCALL   ?DEALLOC_XSTACK8
   2050            osal_memcpy( &(hashedData[KEY_ESTABLISH_SHARED_SECRET_LENGTH]), hashCounter, 4);
   \   00004D                ; Setup parameters for call to function osal_memcpy
   \   00004D   85..82       MOV     DPL,?XSP + 0
   \   000050   85..83       MOV     DPH,?XSP + 1
   \   000053   A982         MOV     R1,DPL
   \   000055   AA83         MOV     R2,DPH
   \   000057   89..         MOV     ?V0 + 0,R1
   \   000059   8A..         MOV     ?V0 + 1,R2
   \   00005B   78..         MOV     R0,#?V0 + 0
   \   00005D   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   000060   7C04         MOV     R4,#0x4
   \   000062   7D00         MOV     R5,#0x0
   \   000064   741C         MOV     A,#0x1c
   \   000066   12....       LCALL   ?XSTACK_DISP0_8
   \   000069   AA82         MOV     R2,DPL
   \   00006B   AB83         MOV     R3,DPH
   \   00006D   12....       LCALL   ??Subroutine104_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_152:
   \   000070   12....       LCALL   ?DEALLOC_XSTACK8
   2051          
   2052            sspMMOHash(NULL, 0, hashedData, bitLen, keyBit);
   \   000073   8F82         MOV     DPL,R7
   \   000075   8582..       MOV     ?V0 + 0,DPL
   \   000078   75..00       MOV     ?V0 + 1,#0x0
   \   00007B                ; Setup parameters for call to function sspMMOHash
   \   00007B   78..         MOV     R0,#?V0 + 4
   \   00007D   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000080   78..         MOV     R0,#?V0 + 0
   \   000082   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000085   7408         MOV     A,#0x8
   \   000087   12....       LCALL   ?XSTACK_DISP0_8
   \   00008A   12....       LCALL   ?Subroutine76 & 0xFFFF
   \                     ??CrossCallReturnLabel_278:
   \   00008D   12....       LCALL   ?DEALLOC_XSTACK8
   2053          
   2054            // Indrement the counter
   2055            hashedData[KEY_ESTABLISH_SHARED_SECRET_LENGTH + 3] = 0x02;
   \   000090   741C         MOV     A,#0x1c
   \   000092   12....       LCALL   ?XSTACK_DISP0_8
   \   000095   7402         MOV     A,#0x2
   \   000097   F0           MOVX    @DPTR,A
   2056          
   2057            sspMMOHash(NULL, 0, hashedData, bitLen, &(keyBit[KEY_ESTABLISH_KEY_DATA_LENGTH]));
   \   000098                ; Setup parameters for call to function sspMMOHash
   \   000098   E5..         MOV     A,?V0 + 4
   \   00009A   2410         ADD     A,#0x10
   \   00009C   F5..         MOV     ?V0 + 2,A
   \   00009E   E5..         MOV     A,?V0 + 5
   \   0000A0   3400         ADDC    A,#0x0
   \   0000A2   F5..         MOV     ?V0 + 3,A
   \   0000A4   78..         MOV     R0,#?V0 + 2
   \   0000A6   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000A9   78..         MOV     R0,#?V0 + 0
   \   0000AB   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000AE   7408         MOV     A,#0x8
   \   0000B0   12....       LCALL   ?XSTACK_DISP0_8
   \   0000B3   12....       LCALL   ?Subroutine76 & 0xFFFF
   \                     ??CrossCallReturnLabel_279:
   \   0000B6   12....       LCALL   ?DEALLOC_XSTACK8
   2058          }
   \   0000B9   741D         MOV     A,#0x1d
   \   0000BB   02....       LJMP    ?Subroutine8 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine76:
   \   000000   AC82         MOV     R4,DPL
   \   000002   AD83         MOV     R5,DPH
   \   000004                REQUIRE ??Subroutine138_0
   \   000004                ; // Fall through to label ??Subroutine138_0
   2059          
   2060          /*********************************************************************
   2061           * @fn      zclGeneral_KeyEstablishment_GenerateMAC
   2062           *
   2063           * @brief   Key Derive Function (ANSI X9.63).
   2064           *          Note this is not a generalized KDF. It only applies to the KDF
   2065           *          specified in ZigBee SE profile. Only the first two hashed keys
   2066           *          are calculated and concatenated.
   2067           *
   2068           * @param   recIndex - input key establishment record index
   2069           *          ifMACu - use M(U) if TRUE, otherwise M(V)
   2070           *          MAC - output buffer ( 16 bytes )
   2071           *
   2072           * @return  ZStatus_t - success
   2073           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine93:
   \   000000   FD           MOV     R5,A
   \   000001   8E82         MOV     DPL,R6
   \   000003   8F83         MOV     DPH,R7
   \   000005   A3           INC     DPTR
   \   000006                REQUIRE ??Subroutine111_0
   \   000006                ; // Fall through to label ??Subroutine111_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   2074          static ZStatus_t zclGeneral_KeyEstablishment_GenerateMAC(uint8 recIndex,
   \                     zclGeneral_KeyEstablishment_GenerateMAC:
   2075                                                                   uint8 ifMACu,
   2076                                                                   uint8 *MAC)
   2077          {
   \   000000   74EE         MOV     A,#-0x12
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 18
   \   000005                ; Auto size: 0
   \   000005   89..         MOV     ?V0 + 2,R1
   \   000007   8A..         MOV     ?V0 + 3,R2
   \   000009   8C..         MOV     ?V0 + 8,R4
   \   00000B   8D..         MOV     ?V0 + 9,R5
   2078            uint8 i;
   2079            uint8 M;
   2080            uint8 *hashBuf;
   2081            uint16 bufLen;
   2082          
   2083            // Assumption for M(U) and M(V) is: M(U) = 0x02, M(V) = 0x03
   2084            if( ifMACu == TRUE )
   \   00000D   7401         MOV     A,#0x1
   \   00000F   65..         XRL     A,?V0 + 3
   \   000011   7005         JNZ     ??zclGeneral_KeyEstablishment_GenerateMAC_0
   2085            {
   2086              M = 0x02;  // Assumption
   \   000013   75..02       MOV     ?V0 + 4,#0x2
   \   000016   8003         SJMP    ??zclGeneral_KeyEstablishment_GenerateMAC_1
   2087            }
   2088            else
   2089            {
   2090              M = 0x03;  // Assumption
   \                     ??zclGeneral_KeyEstablishment_GenerateMAC_0:
   \   000018   75..03       MOV     ?V0 + 4,#0x3
   2091            }
   2092          
   2093            // At this point, it is assumed the device has already
   2094            // obtained the IEEE address of the partner device.
   2095            for ( i = 0; i < Z_EXTADDR_LEN; i++ )
   \                     ??zclGeneral_KeyEstablishment_GenerateMAC_1:
   \   00001B   7C00         MOV     R4,#0x0
   2096            {
   2097              if ( keyEstablishRec[recIndex].partnerExtAddr[i] != 0 )
   \                     ??zclGeneral_KeyEstablishment_GenerateMAC_2:
   \   00001D   E5..         MOV     A,?V0 + 2
   \   00001F   75F027       MOV     B,#0x27
   \   000022   A4           MUL     AB
   \   000023   FA           MOV     R2,A
   \   000024   ABF0         MOV     R3,B
   \   000026   8C..         MOV     ?V0 + 0,R4
   \   000028   74..         MOV     A,#(keyEstablishRec + 14) & 0xff
   \   00002A   25..         ADD     A,?V0 + 0
   \   00002C   F8           MOV     R0,A
   \   00002D   74..         MOV     A,#((keyEstablishRec + 14) >> 8) & 0xff
   \   00002F   3400         ADDC    A,#0x0
   \   000031   F9           MOV     R1,A
   \   000032   E8           MOV     A,R0
   \   000033   2A           ADD     A,R2
   \   000034   F582         MOV     DPL,A
   \   000036   E9           MOV     A,R1
   \   000037   3B           ADDC    A,R3
   \   000038   F583         MOV     DPH,A
   \   00003A   E0           MOVX    A,@DPTR
   \   00003B   7007         JNZ     ??zclGeneral_KeyEstablishment_GenerateMAC_3
   2098              {
   2099                break;
   2100              }
   2101            }
   \   00003D   0C           INC     R4
   \   00003E   EC           MOV     A,R4
   \   00003F   C3           CLR     C
   \   000040   9408         SUBB    A,#0x8
   \   000042   40D9         JC      ??zclGeneral_KeyEstablishment_GenerateMAC_2
   2102            if ( i == Z_EXTADDR_LEN )
   \                     ??zclGeneral_KeyEstablishment_GenerateMAC_3:
   \   000044   7408         MOV     A,#0x8
   \   000046   6C           XRL     A,R4
   \   000047   7005         JNZ     ??zclGeneral_KeyEstablishment_GenerateMAC_4
   2103            {
   2104              return ZFailure;  // Partner IEEE address not available, return failure.
   \   000049   7901         MOV     R1,#0x1
   \   00004B   02....       LJMP    ??zclGeneral_KeyEstablishment_GenerateMAC_5 & 0xFFFF
   2105            }
   2106          
   2107            // MAC(U) = MAC(MacKey) { M(U) || ID(U) || ID(V) || E(U) || E(V) }
   2108            bufLen = (1 + (Z_EXTADDR_LEN * 2) + (ZCL_KE_CA_PUBLIC_KEY_LEN * 2));
   2109            if( ( hashBuf = osal_mem_alloc( (bufLen) )) == NULL )
   \                     ??zclGeneral_KeyEstablishment_GenerateMAC_4:
   \   00004E                ; Setup parameters for call to function osal_mem_alloc
   \   00004E   7A3D         MOV     R2,#0x3d
   \   000050   7B00         MOV     R3,#0x0
   \   000052   12....       LCALL   ??osal_mem_alloc?relay
   \   000055   8A..         MOV     ?V0 + 0,R2
   \   000057   8B..         MOV     ?V0 + 1,R3
   \   000059   AE..         MOV     R6,?V0 + 0
   \   00005B   AF..         MOV     R7,?V0 + 1
   \   00005D   EE           MOV     A,R6
   \   00005E   4F           ORL     A,R7
   \   00005F   7005         JNZ     ??zclGeneral_KeyEstablishment_GenerateMAC_6
   2110            {
   2111              return ZMemError;  // Memory allocation error
   \   000061   7910         MOV     R1,#0x10
   \   000063   02....       LJMP    ??zclGeneral_KeyEstablishment_GenerateMAC_5 & 0xFFFF
   2112            }
   2113          
   2114            // Fill in the buffer
   2115            hashBuf[0] = M;  // M(U)
   \                     ??zclGeneral_KeyEstablishment_GenerateMAC_6:
   \   000066   8E82         MOV     DPL,R6
   \   000068   8F83         MOV     DPH,R7
   \   00006A   E5..         MOV     A,?V0 + 4
   \   00006C   F0           MOVX    @DPTR,A
   2116            bufLen = bufLen * 8;  // Convert to bitlength
   2117          
   2118            if ( (keyEstablishRec[recIndex].role == KEY_ESTABLISHMENT_INITIATOR && ifMACu == TRUE) ||
   2119                 (keyEstablishRec[recIndex].role == KEY_ESTABLISHMENT_RESPONDER && ifMACu == FALSE))
   \   00006D   E5..         MOV     A,?V0 + 2
   \   00006F   12....       LCALL   ??Subroutine115_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_177:
   \   000072   6003         JZ      $+5
   \   000074   02....       LJMP    ??zclGeneral_KeyEstablishment_GenerateMAC_7 & 0xFFFF
   \   000077   7401         MOV     A,#0x1
   \   000079   65..         XRL     A,?V0 + 3
   \   00007B   7003         JNZ     $+5
   \   00007D   02....       LJMP    ??zclGeneral_KeyEstablishment_GenerateMAC_8 & 0xFFFF
   2120            {
   2121              // MAC = MAC(MacKey) { M() || ID(L) || ID(R) || E(L) || E(R) }
   2122              // L - Local, R - Remote
   2123              SSP_MemCpyReverse( &(hashBuf[1]), NLME_GetExtAddr(), Z_EXTADDR_LEN); // ID(U)
   2124              SSP_MemCpyReverse( &(hashBuf[1+Z_EXTADDR_LEN]), keyEstablishRec[recIndex].partnerExtAddr,
   2125                          Z_EXTADDR_LEN); // ID(V)
   2126              osal_memcpy( &(hashBuf[1 + (2 * Z_EXTADDR_LEN)]),                               // E(U)
   2127                          keyEstablishRec[recIndex].pLocalEPublicKey,
   2128                          ZCL_KE_CA_PUBLIC_KEY_LEN );
   2129              osal_memcpy( &(hashBuf[1 + (2 * Z_EXTADDR_LEN) + ZCL_KE_CA_PUBLIC_KEY_LEN]), // E(V)
   2130                          keyEstablishRec[recIndex].pRemotePublicKey, ZCL_KE_CA_PUBLIC_KEY_LEN );
   2131          
   2132              SSP_KeyedHash (hashBuf, bufLen, keyEstablishRec[recIndex].pMacKey, MAC);
   2133            }
   2134            else
   2135            {
   2136              // MAC = MAC(MacKey) { M() || ID(R) || ID(L) || E(R) || E(L) }
   2137              // L - Local, R - Remote
   2138              SSP_MemCpyReverse( &(hashBuf[1]), keyEstablishRec[recIndex].partnerExtAddr,
   2139                          Z_EXTADDR_LEN); // ID(R)
   \                     ??zclGeneral_KeyEstablishment_GenerateMAC_9:
   \   000080   12....       LCALL   ?Subroutine46 & 0xFFFF
   \                     ??CrossCallReturnLabel_60:
   \   000083   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000086   E5..         MOV     A,?V0 + 0
   \   000088   240E         ADD     A,#0xe
   \   00008A   FC           MOV     R4,A
   \   00008B   E5..         MOV     A,?V0 + 1
   \   00008D   3400         ADDC    A,#0x0
   \   00008F   12....       LCALL   ?Subroutine93 & 0xFFFF
   \                     ??CrossCallReturnLabel_274:
   \   000092   12....       LCALL   ?DEALLOC_XSTACK8
   2140              SSP_MemCpyReverse( &(hashBuf[1 + Z_EXTADDR_LEN]), NLME_GetExtAddr(), Z_EXTADDR_LEN); // ID(L)
   \   000095                ; Setup parameters for call to function SSP_MemCpyReverse
   \   000095   78..         MOV     R0,#?V0 + 4
   \   000097   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00009A                ; Setup parameters for call to function NLME_GetExtAddr
   \   00009A   12....       LCALL   ??NLME_GetExtAddr?relay
   \   00009D   EA           MOV     A,R2
   \   00009E   FC           MOV     R4,A
   \   00009F   EB           MOV     A,R3
   \   0000A0   12....       LCALL   ?Subroutine61 & 0xFFFF
   \                     ??CrossCallReturnLabel_271:
   \   0000A3   12....       LCALL   ?DEALLOC_XSTACK8
   2141              osal_memcpy( &(hashBuf[ 1 + (2 * Z_EXTADDR_LEN)]), // E(R)
   2142                          keyEstablishRec[recIndex].pRemotePublicKey,
   2143                          ZCL_KE_CA_PUBLIC_KEY_LEN );
   \   0000A6                ; Setup parameters for call to function osal_memcpy
   \   0000A6   E5..         MOV     A,?V0 + 0
   \   0000A8   241D         ADD     A,#0x1d
   \   0000AA   12....       LCALL   ??Subroutine125_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_227:
   \   0000AD   12....       LCALL   ??Subroutine110_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_161:
   \   0000B0   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   0000B3   12....       LCALL   ?Subroutine62 & 0xFFFF
   \                     ??CrossCallReturnLabel_268:
   \   0000B6   12....       LCALL   ?DEALLOC_XSTACK8
   2144              osal_memcpy( &(hashBuf[1 + (2 * Z_EXTADDR_LEN) + ZCL_KE_CA_PUBLIC_KEY_LEN]),                               // E(U)
   2145                          keyEstablishRec[recIndex].pLocalEPublicKey,
   2146                          ZCL_KE_CA_PUBLIC_KEY_LEN );
   \   0000B9                ; Setup parameters for call to function osal_memcpy
   \   0000B9   E5..         MOV     A,?V0 + 0
   \   0000BB   241B         ADD     A,#0x1b
   \                     ??zclGeneral_KeyEstablishment_GenerateMAC_10:
   \   0000BD   12....       LCALL   ??Subroutine127_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_239:
   \   0000C0   F5..         MOV     ?V0 + 4,A
   \   0000C2   A3           INC     DPTR
   \   0000C3   E0           MOVX    A,@DPTR
   \   0000C4   F5..         MOV     ?V0 + 5,A
   \   0000C6   78..         MOV     R0,#?V0 + 4
   \   0000C8   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   0000CB   7C16         MOV     R4,#0x16
   \   0000CD   7D00         MOV     R5,#0x0
   \   0000CF   EE           MOV     A,R6
   \   0000D0   2427         ADD     A,#0x27
   \   0000D2   12....       LCALL   ??Subroutine136_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_270:
   \   0000D5   12....       LCALL   ?DEALLOC_XSTACK8
   2147              SSP_KeyedHash (hashBuf, bufLen, keyEstablishRec[recIndex].pMacKey, MAC);
   \   0000D8                ; Setup parameters for call to function SSP_KeyedHash
   \   0000D8   78..         MOV     R0,#?V0 + 8
   \   0000DA   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000DD   E5..         MOV     A,?V0 + 0
   \   0000DF   2423         ADD     A,#0x23
   \   0000E1   12....       LCALL   ??Subroutine125_0 & 0xFFFF
   2148            }
   \                     ??CrossCallReturnLabel_228:
   \   0000E4   12....       LCALL   ?PUSH_XSTACK8_X_TWO
   \   0000E7   7CE8         MOV     R4,#-0x18
   \   0000E9   7D01         MOV     R5,#0x1
   \   0000EB   EE           MOV     A,R6
   \   0000EC   FA           MOV     R2,A
   \   0000ED   EF           MOV     A,R7
   \   0000EE   FB           MOV     R3,A
   \   0000EF   12....       LCALL   ??SSP_KeyedHash?relay
   \   0000F2   7404         MOV     A,#0x4
   \   0000F4   12....       LCALL   ?DEALLOC_XSTACK8
   2149          
   2150            osal_mem_free(hashBuf);
   \   0000F7                ; Setup parameters for call to function osal_mem_free
   \   0000F7   EE           MOV     A,R6
   \   0000F8   FA           MOV     R2,A
   \   0000F9   EF           MOV     A,R7
   \   0000FA   FB           MOV     R3,A
   \   0000FB   12....       LCALL   ??osal_mem_free?relay
   2151            return ZSuccess;
   \   0000FE   7900         MOV     R1,#0x0
   \                     ??zclGeneral_KeyEstablishment_GenerateMAC_5:
   \   000100   02....       LJMP    ??Subroutine122_0 & 0xFFFF
   \                     ??zclGeneral_KeyEstablishment_GenerateMAC_7:
   \   000103   6401         XRL     A,#0x1
   \   000105   6003         JZ      $+5
   \   000107   02....       LJMP    ??zclGeneral_KeyEstablishment_GenerateMAC_9 & 0xFFFF
   \   00010A   E5..         MOV     A,?V0 + 3
   \   00010C   6003         JZ      $+5
   \   00010E   02....       LJMP    ??zclGeneral_KeyEstablishment_GenerateMAC_9 & 0xFFFF
   \                     ??zclGeneral_KeyEstablishment_GenerateMAC_8:
   \   000111                ; Setup parameters for call to function SSP_MemCpyReverse
   \   000111   75..08       MOV     ?V0 + 0,#0x8
   \   000114   75..00       MOV     ?V0 + 1,#0x0
   \   000117   78..         MOV     R0,#?V0 + 0
   \   000119   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00011C                ; Setup parameters for call to function NLME_GetExtAddr
   \   00011C   12....       LCALL   ??NLME_GetExtAddr?relay
   \   00011F   EA           MOV     A,R2
   \   000120   FC           MOV     R4,A
   \   000121   EB           MOV     A,R3
   \   000122   12....       LCALL   ?Subroutine93 & 0xFFFF
   \                     ??CrossCallReturnLabel_275:
   \   000125   12....       LCALL   ?DEALLOC_XSTACK8
   \   000128   E5..         MOV     A,?V0 + 2
   \   00012A   75F027       MOV     B,#0x27
   \   00012D   A4           MUL     AB
   \   00012E   F8           MOV     R0,A
   \   00012F   A9F0         MOV     R1,B
   \   000131   12....       LCALL   ?Subroutine46 & 0xFFFF
   \                     ??CrossCallReturnLabel_61:
   \   000134   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000137   E5..         MOV     A,?V0 + 0
   \   000139   240E         ADD     A,#0xe
   \   00013B   FC           MOV     R4,A
   \   00013C   E5..         MOV     A,?V0 + 1
   \   00013E   3400         ADDC    A,#0x0
   \   000140   12....       LCALL   ?Subroutine61 & 0xFFFF
   \                     ??CrossCallReturnLabel_272:
   \   000143   12....       LCALL   ?DEALLOC_XSTACK8
   \   000146                ; Setup parameters for call to function osal_memcpy
   \   000146   E5..         MOV     A,?V0 + 0
   \   000148   241B         ADD     A,#0x1b
   \   00014A   12....       LCALL   ??Subroutine125_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_229:
   \   00014D   12....       LCALL   ??Subroutine110_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_162:
   \   000150   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   000153   12....       LCALL   ?Subroutine62 & 0xFFFF
   \                     ??CrossCallReturnLabel_269:
   \   000156   12....       LCALL   ?DEALLOC_XSTACK8
   \   000159                ; Setup parameters for call to function osal_memcpy
   \   000159   E5..         MOV     A,?V0 + 0
   \   00015B   241D         ADD     A,#0x1d
   \   00015D   02....       LJMP    ??zclGeneral_KeyEstablishment_GenerateMAC_10 & 0xFFFF
   2152          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine62:
   \   000000   7C16         MOV     R4,#0x16
   \   000002   7D00         MOV     R5,#0x0
   \   000004   EE           MOV     A,R6
   \   000005   2411         ADD     A,#0x11
   \   000007                REQUIRE ??Subroutine136_0
   \   000007                ; // Fall through to label ??Subroutine136_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine136_0:
   \   000000   FA           MOV     R2,A
   \   000001   EF           MOV     A,R7
   \   000002   3400         ADDC    A,#0x0
   \   000004   FB           MOV     R3,A
   \   000005   12....       LCALL   ??osal_memcpy?relay
   \   000008   7403         MOV     A,#0x3
   \   00000A   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine61:
   \   000000   FD           MOV     R5,A
   \   000001   EE           MOV     A,R6
   \   000002   2409         ADD     A,#0x9
   \   000004   FA           MOV     R2,A
   \   000005   EF           MOV     A,R7
   \   000006                REQUIRE ??Subroutine137_0
   \   000006                ; // Fall through to label ??Subroutine137_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine46:
   \   000000   12....       LCALL   ?Subroutine85 & 0xFFFF
   \                     ??CrossCallReturnLabel_140:
   \   000003                ; Setup parameters for call to function SSP_MemCpyReverse
   \   000003                ; Setup parameters for call to function SSP_MemCpyReverse
   \   000003   75..08       MOV     ?V0 + 4,#0x8
   \   000006   75..00       MOV     ?V0 + 5,#0x0
   \   000009   78..         MOV     R0,#?V0 + 4
   \   00000B   22           RET
   2153          
   2154          /*********************************************************************
   2155           * @fn      zclGeneral_KeyEstablishment_ECDSASign
   2156           *
   2157           * @brief    Creates an ECDSA signature of a message digest.
   2158           *
   2159           * @param   input - input data buffer
   2160           *          inputLen - byte length of the input buffer
   2161           *          output - output buffer ( 21x2 bytes )
   2162           *
   2163           * @return  ZStatus_t - success
   2164           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   2165          ZStatus_t zclGeneral_KeyEstablishment_ECDSASign( uint8 *input,  uint8 inputLen,
   \                     zclGeneral_KeyEstablishment_ECDSASign:
   2166                                                       uint8 *output)
   2167          {
   \   000000   74EC         MOV     A,#-0x14
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 20
   \   000005                ; Auto size: 16
   \   000005   74F0         MOV     A,#-0x10
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   EA           MOV     A,R2
   \   00000B   FE           MOV     R6,A
   \   00000C   EB           MOV     A,R3
   \   00000D   FF           MOV     R7,A
   \   00000E   89..         MOV     ?V0 + 2,R1
   \   000010   8C..         MOV     ?V0 + 6,R4
   \   000012   8D..         MOV     ?V0 + 7,R5
   2168            uint8 msgDigest[KEY_ESTABLISH_AES_MMO_HASH_SIZE];
   2169            uint16 bitLen = inputLen * 8;
   2170            uint8 status;
   2171            uint8 *devicePrivateKey;
   2172          
   2173            if ((devicePrivateKey = osal_mem_alloc(ZCL_KE_DEVICE_PRIVATE_KEY_LEN)) == NULL)
   \   000014                ; Setup parameters for call to function osal_mem_alloc
   \   000014   7A15         MOV     R2,#0x15
   \   000016   12....       LCALL   ??Subroutine123_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_208:
   \   000019   EA           MOV     A,R2
   \   00001A   45..         ORL     A,?V0 + 5
   \   00001C   7005         JNZ     ??zclGeneral_KeyEstablishment_ECDSASign_0
   2174            {
   2175              return ZCL_STATUS_SOFTWARE_FAILURE;  // Memory allocation failure.
   \   00001E   79C1         MOV     R1,#-0x3f
   \   000020   02....       LJMP    ??zclGeneral_KeyEstablishment_ECDSASign_1 & 0xFFFF
   2176            }
   2177            osal_nv_read(ZCD_NV_DEVICE_PRIVATE_KEY, 0, ZCL_KE_DEVICE_PRIVATE_KEY_LEN, devicePrivateKey);
   \                     ??zclGeneral_KeyEstablishment_ECDSASign_0:
   \   000023                ; Setup parameters for call to function osal_nv_read
   \   000023   78..         MOV     R0,#?V0 + 4
   \   000025   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000028   75..15       MOV     ?V0 + 0,#0x15
   \   00002B   75..00       MOV     ?V0 + 1,#0x0
   \   00002E   78..         MOV     R0,#?V0 + 0
   \   000030   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000033   7C00         MOV     R4,#0x0
   \   000035   7D00         MOV     R5,#0x0
   \   000037   7A6A         MOV     R2,#0x6a
   \   000039   12....       LCALL   ??Subroutine100_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_135:
   \   00003C   12....       LCALL   ?DEALLOC_XSTACK8
   2178          
   2179            // First hash the input buffer
   2180            sspMMOHash(NULL, 0, input, bitLen, msgDigest);
   \   00003F                ; Setup parameters for call to function sspMMOHash
   \   00003F   85..82       MOV     DPL,?XSP + 0
   \   000042   85..83       MOV     DPH,?XSP + 1
   \   000045   8582..       MOV     ?V0 + 0,DPL
   \   000048   8583..       MOV     ?V0 + 1,DPH
   \   00004B   78..         MOV     R0,#?V0 + 0
   \   00004D   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000050   85....       MOV     ?V0 + 0,?V0 + 2
   \   000053   75..00       MOV     ?V0 + 1,#0x0
   \   000056   7403         MOV     A,#0x3
   \   000058   78..         MOV     R0,#?V0 + 0
   \   00005A   12....       LCALL   ?S_SHL
   \   00005D   78..         MOV     R0,#?V0 + 0
   \   00005F   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000062   EE           MOV     A,R6
   \   000063   FC           MOV     R4,A
   \   000064   EF           MOV     A,R7
   \   000065   FD           MOV     R5,A
   \   000066   12....       LCALL   ??Subroutine138_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_281:
   \   000069   12....       LCALL   ?DEALLOC_XSTACK8
   2181          
   2182            status = ZSE_ECDSASign( (unsigned char*)devicePrivateKey, (unsigned char*)msgDigest,
   2183                          zclGeneral_KeyEstablishment_GetRandom,
   2184                         (unsigned char*)output, (unsigned char*)output + KEY_ESTABLISH_POINT_ORDER_SIZE,
   2185                         zclKeyEstablish_YieldFunc, zclKeyEstablish_YieldLevel );
   \   00006C                ; Setup parameters for call to function ZSE_ECDSASign
   \   00006C   90....       MOV     DPTR,#zclKeyEstablish_YieldLevel
   \   00006F   E0           MOVX    A,@DPTR
   \   000070   F5..         MOV     ?V0 + 8,A
   \   000072   E4           CLR     A
   \   000073   F5..         MOV     ?V0 + 9,A
   \   000075   F5..         MOV     ?V0 + 10,A
   \   000077   F5..         MOV     ?V0 + 11,A
   \   000079   78..         MOV     R0,#?V0 + 8
   \   00007B   12....       LCALL   ?PUSH_XSTACK_I_FOUR
   \   00007E   90....       MOV     DPTR,#zclKeyEstablish_YieldFunc
   \   000081   12....       LCALL   ?PUSH_XSTACK8_X_TWO
   \   000084   E5..         MOV     A,?V0 + 6
   \   000086   2415         ADD     A,#0x15
   \   000088   F5..         MOV     ?V0 + 0,A
   \   00008A   E5..         MOV     A,?V0 + 7
   \   00008C   3400         ADDC    A,#0x0
   \   00008E   F5..         MOV     ?V0 + 1,A
   \   000090   78..         MOV     R0,#?V0 + 0
   \   000092   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000095   78..         MOV     R0,#?V0 + 6
   \   000097   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00009A   75....       MOV     ?V0 + 0,#??zclGeneral_KeyEstablishment_GetRandom?relay & 0xff
   \   00009D   75....       MOV     ?V0 + 1,#(??zclGeneral_KeyEstablishment_GetRandom?relay >> 8) & 0xff
   \   0000A0   78..         MOV     R0,#?V0 + 0
   \   0000A2   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000A5   740C         MOV     A,#0xc
   \   0000A7   12....       LCALL   ?XSTACK_DISP0_8
   \   0000AA   AC82         MOV     R4,DPL
   \   0000AC   AD83         MOV     R5,DPH
   \   0000AE   AA..         MOV     R2,?V0 + 4
   \   0000B0   AB..         MOV     R3,?V0 + 5
   \   0000B2   12....       LCALL   ??ZSE_ECDSASign?relay
   \   0000B5   740C         MOV     A,#0xc
   \   0000B7   12....       LCALL   ?DEALLOC_XSTACK8
   \   0000BA   8A..         MOV     ?V0 + 0,R2
   2186          
   2187            osal_mem_free(devicePrivateKey);
   \   0000BC                ; Setup parameters for call to function osal_mem_free
   \   0000BC   AA..         MOV     R2,?V0 + 4
   \   0000BE   AB..         MOV     R3,?V0 + 5
   \   0000C0   12....       LCALL   ??osal_mem_free?relay
   2188          
   2189            if (status == MCE_SUCCESS )
   \   0000C3   E5..         MOV     A,?V0 + 0
   \   0000C5   7004         JNZ     ??zclGeneral_KeyEstablishment_ECDSASign_2
   2190            {
   2191              return ZSuccess;
   \   0000C7   7900         MOV     R1,#0x0
   \   0000C9   8002         SJMP    ??zclGeneral_KeyEstablishment_ECDSASign_1
   2192            }
   2193          
   2194            return ZFailure;
   \                     ??zclGeneral_KeyEstablishment_ECDSASign_2:
   \   0000CB   7901         MOV     R1,#0x1
   \                     ??zclGeneral_KeyEstablishment_ECDSASign_1:
   \   0000CD   7410         MOV     A,#0x10
   \   0000CF                REQUIRE ?Subroutine7
   \   0000CF                ; // Fall through to label ?Subroutine7
   2195          }
   2196          
   2197          /*********************************************************************
   2198           * @fn      zclGeneral_KeyEstablishment_ECDSAVerify
   2199           *
   2200           * @brief    Verify an ECDSA signature of a message digest.
   2201           *
   2202           * @param   input - input data buffer
   2203           *          inputLen - byte length of the input buffer
   2204           *          signature - input signature ( 21x2 bytes )
   2205           *
   2206           * @return  ZSuccess - success verify
   2207           *          ZFailure - fail to verify
   2208           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   2209          ZStatus_t zclGeneral_KeyEstablishment_ECDSAVerify( uint8 *input,  uint8 inputLen,
   \                     zclGeneral_KeyEstablishment_ECDSAVerify:
   2210                                                       uint8 *signature)
   2211          {
   \   000000   74F2         MOV     A,#-0xe
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 14
   \   000005                ; Auto size: 16
   \   000005   74F0         MOV     A,#-0x10
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   E9           MOV     A,R1
   \   00000B   FE           MOV     R6,A
   \   00000C   8C..         MOV     ?V0 + 4,R4
   \   00000E   8D..         MOV     ?V0 + 5,R5
   2212          
   2213            uint8 msgDigest[KEY_ESTABLISH_AES_MMO_HASH_SIZE];
   2214            uint16 bitLen;
   2215            uint8 ret;
   2216          
   2217            bitLen = inputLen * 8;
   2218          
   2219            // First hash the input buffer
   2220            sspMMOHash(NULL, 0, input, bitLen, msgDigest);
   \   000010                ; Setup parameters for call to function sspMMOHash
   \   000010   85..82       MOV     DPL,?XSP + 0
   \   000013   85..83       MOV     DPH,?XSP + 1
   \   000016   8582..       MOV     ?V0 + 0,DPL
   \   000019   8583..       MOV     ?V0 + 1,DPH
   \   00001C   78..         MOV     R0,#?V0 + 0
   \   00001E   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000021   8E..         MOV     ?V0 + 0,R6
   \   000023   75..00       MOV     ?V0 + 1,#0x0
   \   000026   7403         MOV     A,#0x3
   \   000028   78..         MOV     R0,#?V0 + 0
   \   00002A   12....       LCALL   ?S_SHL
   \   00002D   78..         MOV     R0,#?V0 + 0
   \   00002F   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000032   EA           MOV     A,R2
   \   000033   FC           MOV     R4,A
   \   000034   EB           MOV     A,R3
   \   000035   FD           MOV     R5,A
   \   000036   12....       LCALL   ??Subroutine138_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_282:
   \   000039   12....       LCALL   ?DEALLOC_XSTACK8
   2221          
   2222            ret = ZSE_ECDSAVerify((unsigned char*)NULL, (unsigned char*)msgDigest,
   2223                       (unsigned char*)signature, (unsigned char*)signature + KEY_ESTABLISH_POINT_ORDER_SIZE,
   2224                       zclKeyEstablish_YieldFunc, zclKeyEstablish_YieldLevel );
   2225          
   2226            if ( ret == MCE_SUCCESS )
   \   00003C                ; Setup parameters for call to function ZSE_ECDSAVerify
   \   00003C   90....       MOV     DPTR,#zclKeyEstablish_YieldLevel
   \   00003F   E0           MOVX    A,@DPTR
   \   000040   F5..         MOV     ?V0 + 0,A
   \   000042   E4           CLR     A
   \   000043   F5..         MOV     ?V0 + 1,A
   \   000045   F5..         MOV     ?V0 + 2,A
   \   000047   F5..         MOV     ?V0 + 3,A
   \   000049   78..         MOV     R0,#?V0 + 0
   \   00004B   12....       LCALL   ?PUSH_XSTACK_I_FOUR
   \   00004E   90....       MOV     DPTR,#zclKeyEstablish_YieldFunc
   \   000051   12....       LCALL   ?PUSH_XSTACK8_X_TWO
   \   000054   E5..         MOV     A,?V0 + 4
   \   000056   2415         ADD     A,#0x15
   \   000058   F5..         MOV     ?V0 + 0,A
   \   00005A   E5..         MOV     A,?V0 + 5
   \   00005C   3400         ADDC    A,#0x0
   \   00005E   F5..         MOV     ?V0 + 1,A
   \   000060   78..         MOV     R0,#?V0 + 0
   \   000062   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000065   78..         MOV     R0,#?V0 + 4
   \   000067   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00006A   740A         MOV     A,#0xa
   \   00006C   12....       LCALL   ?XSTACK_DISP0_8
   \   00006F   AC82         MOV     R4,DPL
   \   000071   AD83         MOV     R5,DPH
   \   000073   7A00         MOV     R2,#0x0
   \   000075   7B00         MOV     R3,#0x0
   \   000077   12....       LCALL   ??ZSE_ECDSAVerify?relay
   \   00007A   740A         MOV     A,#0xa
   \   00007C   12....       LCALL   ?DEALLOC_XSTACK8
   \   00007F   EA           MOV     A,R2
   \   000080   7004         JNZ     ??zclGeneral_KeyEstablishment_ECDSAVerify_0
   2227            {
   2228              return ZSuccess;
   \   000082   7900         MOV     R1,#0x0
   \   000084   8002         SJMP    ??zclGeneral_KeyEstablishment_ECDSAVerify_1
   2229            }
   2230          
   2231            return ZFailure;
   \                     ??zclGeneral_KeyEstablishment_ECDSAVerify_0:
   \   000086   7901         MOV     R1,#0x1
   \                     ??zclGeneral_KeyEstablishment_ECDSAVerify_1:
   \   000088   7410         MOV     A,#0x10
   \   00008A   02....       LJMP    ?Subroutine8 & 0xFFFF
   2232          }

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for zclKeyEstablish_Options>`:
   \   000000   0008         DW 2048
   \   000002   10           DB 16

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for zclKeyEstablish_SimpleDesc>`:
   \   000000   0A           DB 10
   \   000001   0901         DW 265
   \   000003   0705         DW 1287
   \   000005   00           DB 0
   \   000006   01           DB 1
   \   000007   ....         DW zclKeyEstablish_InClusterList
   \   000009   01           DB 1
   \   00000A   ....         DW zclKeyEstablish_OutClusterList

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for zclKeyEstablish_Ep>`:
   \   000000   0A           DB 10
   \   000001   ....         DW zcl_TaskID
   \   000003   ....         DW zclKeyEstablish_SimpleDesc
   \   000005   00           DB 0

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclGeneral_KeyEstablish_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclGeneral_KeyEstablish_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclKeyEstablish_event_loop?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclKeyEstablish_event_loop

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclGeneral_KeyEstablish_InitiateKeyEstablishm:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclGeneral_KeyEstablish_InitiateKeyEstablishment

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclGeneral_KeyEstablish_Send_InitiateKeyEstab:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclGeneral_KeyEstablish_Send_InitiateKeyEstablishment

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclGeneral_KeyEstablish_Send_EphemeralDataReq:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclGeneral_KeyEstablish_Send_EphemeralDataReq

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclGeneral_KeyEstablish_Send_ConfirmKey?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclGeneral_KeyEstablish_Send_ConfirmKey

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclGeneral_KeyEstablish_Send_TerminateKeyEsta:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclGeneral_KeyEstablish_Send_TerminateKeyEstablishment

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclGeneral_KeyEstablish_Send_InitiateKeyEstab_1:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclGeneral_KeyEstablish_Send_InitiateKeyEstablishmentRsp

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclGeneral_KeyEstablish_Send_EphemeralDataRsp:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclGeneral_KeyEstablish_Send_EphemeralDataRsp

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclGeneral_KeyEstablish_Send_ConfirmKeyRsp?re:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclGeneral_KeyEstablish_Send_ConfirmKeyRsp

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclGeneral_KeyEstablishment_RegYieldCB?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclGeneral_KeyEstablishment_RegYieldCB

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclGeneral_KeyEstablish_HdlIncoming?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclGeneral_KeyEstablish_HdlIncoming

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclGeneral_ProcessInCmd_InitiateKeyEstablish?:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclGeneral_ProcessInCmd_InitiateKeyEstablish

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclGeneral_ProcessInCmd_EphemeralDataReq?rela:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclGeneral_ProcessInCmd_EphemeralDataReq

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclGeneral_ProcessInCmd_InitiateKeyEstablishR:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclGeneral_ProcessInCmd_InitiateKeyEstablishRsp

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclGeneral_ProcessInCmd_EphemeralDataRsp?rela:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclGeneral_ProcessInCmd_EphemeralDataRsp

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclGeneral_ProcessInCmd_ConfirmKey?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclGeneral_ProcessInCmd_ConfirmKey

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclGeneral_ProcessInCmd_ConfirmKeyRsp?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclGeneral_ProcessInCmd_ConfirmKeyRsp

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclGeneral_ProcessInCmd_TerminateKeyEstablish:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclGeneral_ProcessInCmd_TerminateKeyEstablish

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclGeneral_InitiateKeyEstablish_Cmd_Calculate:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclGeneral_InitiateKeyEstablish_Cmd_CalculateKey

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclGeneral_InitiateKeyEstablish_Rsp_Calculate:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclGeneral_InitiateKeyEstablish_Rsp_CalculateKey

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclGeneral_GetKeyEstablishRecIndex?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclGeneral_GetKeyEstablishRecIndex

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclGeneral_GetKeyEstablishRecIndex_State?rela:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclGeneral_GetKeyEstablishRecIndex_State

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclGeneral_AddKeyEstablishRec?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclGeneral_AddKeyEstablishRec

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclGeneral_ResetKeyEstablishRec?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclGeneral_ResetKeyEstablishRec

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclGeneral_KeyEstablishment_GetRandom?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclGeneral_KeyEstablishment_GetRandom

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclGeneral_KeyEstablishment_HashFunc?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclGeneral_KeyEstablishment_HashFunc

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclGeneral_KeyEstablishment_KeyDeriveFunction:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclGeneral_KeyEstablishment_KeyDeriveFunction

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclGeneral_KeyEstablishment_GenerateMAC?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclGeneral_KeyEstablishment_GenerateMAC

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclGeneral_KeyEstablishment_ECDSASign?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclGeneral_KeyEstablishment_ECDSASign

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclGeneral_KeyEstablishment_ECDSAVerify?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclGeneral_KeyEstablishment_ECDSAVerify

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {0, 0, 0, 1}>`:
   \   000000   00           DB 0
   \   000001   00           DB 0
   \   000002   00           DB 0
   \   000003   01           DB 1

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_fffffff0:
   \   000000   F0FFFFFF     DD 4294967280

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_11:
   \   000000   11000000     DD 17
   2233          #endif // ZCL_KEY_ESTABLISH
   2234          
   2235          /***************************************************************************
   2236          ****************************************************************************/

   Maximum stack usage in bytes:

     Function                       ISTACK PSTACK XSTACK
     --------                       ------ ------ ------
     zclGeneral_AddKeyEstablishRec      0      0     36
       -> zclGeneral_GetKeyEstablishRecIndex
                                        0      0     30
       -> zclGeneral_ResetKeyEstablishRec
                                        0      0     30
       -> zclGeneral_GetKeyEstablishRecIndex
                                        0      0     30
       -> osal_mem_alloc                0      0     30
       -> osal_memcpy                   0      0     36
     zclGeneral_GetKeyEstablishRecIndex
                                        2      0     47
     zclGeneral_GetKeyEstablishRecIndex_State
                                        2      0     57
     zclGeneral_InitiateKeyEstablish_Cmd_CalculateKey
                                        1      0     70
       -> zclGeneral_GetKeyEstablishRecIndex_State
                                        0      0     80
       -> osal_mem_alloc                0      0     80
       -> zclGeneral_ResetKeyEstablishRec
                                        0      0     80
       -> osal_mem_alloc                0      0     80
       -> osal_mem_free                 0      0     80
       -> osal_nv_read                  0      0     88
       -> osal_nv_read                  0      0     88
       -> ZMacSetReq                    0      0     80
       -> ZSE_ECCKeyBitGenerate         0      0    116
       -> ZMacSetReq                    0      0     80
       -> osal_mem_free                 0      0     80
       -> osal_mem_free                 0      0     80
       -> osal_mem_alloc                0      0     80
       -> zclGeneral_KeyEstablishment_KeyDeriveFunction
                                        0      0     80
       -> osal_memcpy                   0      0     86
       -> osal_memcpy                   0      0     86
       -> osal_mem_free                 0      0     80
       -> zclGeneral_KeyEstablish_Send_EphemeralDataRsp
                                        0      0     84
       -> osal_start_reload_timer       0      0     80
       -> zclGeneral_KeyEstablish_Send_TerminateKeyEstablishment
                                        0      0     90
       -> zclGeneral_ResetKeyEstablishRec
                                        0      0     80
     zclGeneral_InitiateKeyEstablish_Rsp_CalculateKey
                                        1      0     87
       -> zclGeneral_GetKeyEstablishRecIndex_State
                                        0      0    114
       -> osal_mem_alloc                0      0    114
       -> zclGeneral_ResetKeyEstablishRec
                                        0      0    114
       -> osal_mem_alloc                0      0    114
       -> zclGeneral_ResetKeyEstablishRec
                                        0      0    114
       -> osal_mem_free                 0      0    114
       -> osal_nv_read                  0      0    122
       -> osal_nv_read                  0      0    122
       -> ZMacGetReq                    0      0    114
       -> ZMacSetReq                    0      0    114
       -> ZSE_ECCKeyBitGenerate         0      0    150
       -> ZMacSetReq                    0      0    114
       -> osal_mem_free                 0      0    114
       -> osal_mem_free                 0      0    114
       -> zclGeneral_KeyEstablish_Send_TerminateKeyEstablishment
                                        0      0    124
       -> zclGeneral_ResetKeyEstablishRec
                                        0      0    114
       -> osal_mem_alloc                0      0    114
       -> zclGeneral_KeyEstablishment_KeyDeriveFunction
                                        0      0    114
       -> osal_memcpy                   0      0    120
       -> osal_memcpy                   0      0    120
       -> zclGeneral_KeyEstablishment_GenerateMAC
                                        0      0    114
       -> osal_mem_free                 0      0    114
       -> zclGeneral_KeyEstablish_Send_ConfirmKey
                                        0      0    118
       -> osal_start_reload_timer       0      0    114
     zclGeneral_KeyEstablish_HdlIncoming
                                        0      0      9
       -> StubAPS_InterPan              0      0     18
       -> zclGeneral_ProcessInCmd_ConfirmKey
                                        0      0     18
       -> zclGeneral_ProcessInCmd_EphemeralDataReq
                                        0      0     18
       -> zclGeneral_ProcessInCmd_InitiateKeyEstablish
                                        0      0     18
       -> zclGeneral_ProcessInCmd_TerminateKeyEstablish
                                        0      0     18
       -> zclGeneral_ProcessInCmd_ConfirmKeyRsp
                                        0      0     18
       -> zclGeneral_ProcessInCmd_EphemeralDataRsp
                                        0      0     18
       -> zclGeneral_ProcessInCmd_InitiateKeyEstablishRsp
                                        0      0     18
     zclGeneral_KeyEstablish_Init       0      0     12
       -> afRegister                    0      0     20
       -> zcl_registerClusterOptionList
                                        0      0     20
       -> zcl_registerPlugin            0      0     24
       -> zclGeneral_ResetKeyEstablishRec
                                        0      0     20
     zclGeneral_KeyEstablish_InitiateKeyEstablishment
                                        1      0     24
       -> zclGeneral_AddKeyEstablishRec
                                        0      0     32
       -> ZSE_ECCGenerateKey            0      0     48
       -> osal_mem_alloc                0      0     32
       -> osal_nv_read                  0      0     40
       -> zclGeneral_KeyEstablish_Send_InitiateKeyEstablishment
                                        0      0     44
       -> osal_start_reload_timer       0      0     32
       -> osal_mem_free                 0      0     32
     zclGeneral_KeyEstablish_Send_ConfirmKey
                                        0      0     80
       -> zcl_SendCommand               0      0     42
     zclGeneral_KeyEstablish_Send_ConfirmKeyRsp
                                        0      0     70
       -> zcl_SendCommand               0      0     42
     zclGeneral_KeyEstablish_Send_EphemeralDataReq
                                        0      0     51
       -> zcl_SendCommand               0      0     42
     zclGeneral_KeyEstablish_Send_EphemeralDataRsp
                                        0      0     63
       -> zcl_SendCommand               0      0     42
     zclGeneral_KeyEstablish_Send_InitiateKeyEstablishment
                                        1      0     55
       -> osal_mem_alloc                0      0     44
       -> osal_memcpy                   0      0     50
       -> zcl_SendCommand               0      0     66
       -> osal_mem_free                 0      0     44
     zclGeneral_KeyEstablish_Send_InitiateKeyEstablishmentRsp
                                        1      0     57
       -> osal_mem_alloc                0      0     44
       -> osal_memcpy                   0      0     50
       -> zcl_SendCommand               0      0     66
       -> osal_mem_free                 0      0     44
     zclGeneral_KeyEstablish_Send_TerminateKeyEstablishment
                                        1      0     89
       -> zcl_SendCommand               0      0     54
     zclGeneral_KeyEstablishment_ECDSASign
                                        0      0     48
       -> osal_mem_alloc                0      0     72
       -> osal_nv_read                  0      0     80
       -> sspMMOHash                    0      0     80
       -> ZSE_ECDSASign                 0      0     96
       -> osal_mem_free                 0      0     72
     zclGeneral_KeyEstablishment_ECDSAVerify
                                        0      0     40
       -> sspMMOHash                    0      0     68
       -> ZSE_ECDSAVerify               0      0     80
     zclGeneral_KeyEstablishment_GenerateMAC
                                        1      0     79
       -> osal_mem_alloc                0      0     36
       -> SSP_MemCpyReverse             0      0     40
       -> NLME_GetExtAddr               0      0     40
       -> SSP_MemCpyReverse             0      0     40
       -> osal_memcpy                   0      0     42
       -> osal_memcpy                   0      0     42
       -> SSP_KeyedHash                 0      0     44
       -> osal_mem_free                 0      0     36
       -> NLME_GetExtAddr               0      0     40
       -> SSP_MemCpyReverse             0      0     40
       -> SSP_MemCpyReverse             0      0     40
       -> osal_memcpy                   0      0     42
       -> osal_memcpy                   0      0     42
       -> SSP_KeyedHash                 0      0     44
     zclGeneral_KeyEstablishment_GetRandom
                                        0      0     16
       -> SSP_GetTrueRandAES            0      0     24
       -> SSP_GetTrueRandAES            0      0     24
     zclGeneral_KeyEstablishment_HashFunc
                                        0      0     22
       -> sspMMOHash                    0      0     36
     zclGeneral_KeyEstablishment_KeyDeriveFunction
                                        2      0    104
       -> osal_memcpy                   0      0     92
       -> osal_memcpy                   0      0     92
       -> sspMMOHash                    0      0     94
       -> sspMMOHash                    0      0     94
     zclGeneral_KeyEstablishment_RegYieldCB
                                        2      0      0
     zclGeneral_ProcessInCmd_ConfirmKey
                                        0      0     61
       -> osal_stop_timerEx             0      0     94
       -> zclGeneral_GetKeyEstablishRecIndex
                                        0      0     94
       -> zclGeneral_KeyEstablishment_GenerateMAC
                                        0      0     94
       -> osal_memcmp                   0      0    100
       -> ZDSecMgrAddLinkKey            0      0     98
       -> zclGeneral_KeyEstablishment_GenerateMAC
                                        0      0     94
       -> zclGeneral_KeyEstablish_Send_ConfirmKeyRsp
                                        0      0     98
       -> zclGeneral_ResetKeyEstablishRec
                                        0      0     94
       -> zclGeneral_ResetKeyEstablishRec
                                        0      0     94
       -> zclGeneral_KeyEstablish_Send_TerminateKeyEstablishment
                                        0      0    104
     zclGeneral_ProcessInCmd_ConfirmKeyRsp
                                        1      0     45
       -> osal_stop_timerEx             0      0     62
       -> zclGeneral_GetKeyEstablishRecIndex
                                        0      0     62
       -> zclGeneral_KeyEstablishment_GenerateMAC
                                        0      0     62
       -> osal_memcmp                   0      0     68
       -> ZDSecMgrAddLinkKey            0      0     66
       -> zclGeneral_ResetKeyEstablishRec
                                        0      0     62
       -> zclGeneral_KeyEstablish_Send_TerminateKeyEstablishment
                                        0      0     72
       -> osal_msg_allocate             0      0     62
       -> osal_msg_send                 0      0     62
       -> zclGeneral_ResetKeyEstablishRec
                                        0      0     62
     zclGeneral_ProcessInCmd_EphemeralDataReq
                                        1      0     33
       -> osal_stop_timerEx             0      0     32
       -> zclGeneral_GetKeyEstablishRecIndex
                                        0      0     32
       -> osal_memcpy                   0      0     38
       -> ZSE_ECCGenerateKey            0      0     48
       -> osal_start_timerEx            0      0     32
       -> zclGeneral_ResetKeyEstablishRec
                                        0      0     32
       -> zclGeneral_KeyEstablish_Send_TerminateKeyEstablishment
                                        0      0     42
     zclGeneral_ProcessInCmd_EphemeralDataRsp
                                        0      0     28
       -> osal_stop_timerEx             0      0     28
       -> zclGeneral_GetKeyEstablishRecIndex
                                        0      0     28
       -> osal_memcpy                   0      0     34
       -> osal_start_timerEx            0      0     28
       -> zclGeneral_ResetKeyEstablishRec
                                        0      0     28
       -> zclGeneral_KeyEstablish_Send_TerminateKeyEstablishment
                                        0      0     38
     zclGeneral_ProcessInCmd_InitiateKeyEstablish
                                        1      0     33
       -> zclGeneral_AddKeyEstablishRec
                                        0      0     36
       -> osal_memcpy                   0      0     42
       -> osal_mem_alloc                0      0     36
       -> zclGeneral_ResetKeyEstablishRec
                                        0      0     36
       -> osal_nv_read                  0      0     44
       -> osal_memcmp                   0      0     42
       -> zclGeneral_KeyEstablish_Send_TerminateKeyEstablishment
                                        0      0     46
       -> osal_mem_free                 0      0     36
       -> zclGeneral_ResetKeyEstablishRec
                                        0      0     36
       -> SSP_MemCpyReverse             0      0     40
       -> zclGeneral_KeyEstablish_Send_InitiateKeyEstablishmentRsp
                                        0      0     48
       -> osal_start_reload_timer       0      0     36
       -> osal_mem_free                 0      0     36
     zclGeneral_ProcessInCmd_InitiateKeyEstablishRsp
                                        1      0     42
       -> osal_stop_timerEx             0      0     56
       -> zclGeneral_GetKeyEstablishRecIndex
                                        0      0     56
       -> osal_memcpy                   0      0     62
       -> AddrMgrExtAddrLookup          0      0     56
       -> SSP_MemCpyReverse             0      0     60
       -> osal_memcmp                   0      0     62
       -> osal_mem_alloc                0      0     56
       -> zclGeneral_ResetKeyEstablishRec
                                        0      0     56
       -> zclGeneral_ResetKeyEstablishRec
                                        0      0     56
       -> zclGeneral_KeyEstablish_Send_TerminateKeyEstablishment
                                        0      0     66
       -> zclGeneral_ResetKeyEstablishRec
                                        0      0     56
       -> osal_nv_read                  0      0     64
       -> osal_memcmp                   0      0     62
       -> osal_mem_free                 0      0     56
       -> zclGeneral_KeyEstablish_Send_EphemeralDataReq
                                        0      0     60
       -> osal_start_reload_timer       0      0     56
     zclGeneral_ProcessInCmd_TerminateKeyEstablish
                                        1      0     21
       -> zclGeneral_GetKeyEstablishRecIndex
                                        0      0     24
       -> osal_msg_allocate             0      0     24
       -> osal_msg_send                 0      0     24
       -> zclGeneral_ResetKeyEstablishRec
                                        0      0     24
     zclGeneral_ResetKeyEstablishRec
                                        0      0     66
       -> osal_memset                   0      0     18
       -> osal_mem_free                 0      0     18
       -> osal_memset                   0      0     18
     zclKeyEstablish_event_loop         0      0     12
       -> zclGeneral_ResetKeyEstablishRec
                                        0      0     24
       -> osal_msg_deallocate           0      0     24
       -> osal_msg_receive              0      0     24
       -> osal_stop_timerEx             0      0     24
       -> zclGeneral_InitiateKeyEstablish_Cmd_CalculateKey
                                        0      0     24
       -> zclGeneral_InitiateKeyEstablish_Rsp_CalculateKey
                                        0      0     24


   Segment part sizes:

     Function/Label                                    Bytes
     --------------                                    -----
     zclKeyEstablish_Options                              3
     zclKeyEstablish_YieldFunc                            2
     zclKeyEstablish_YieldLevel                           1
     zcl_KeyEstablishment_TaskID                          1
     zclKeyEstablish_InClusterList                        2
     zclKeyEstablish_OutClusterList                       2
     zclKeyEstablish_SimpleDesc                          12
     zclKeyEstablish_Ep                                   6
     zclKeyEstablishPluginRegisted                        1
     keyEstablishRec                                     78
     zclGeneral_KeyEstablish_Init                        84
     ??Subroutine107_0                                    5
     zclKeyEstablish_event_loop                         149
     ?Subroutine1                                         5
     zclGeneral_KeyEstablish_InitiateKeyEstablishment
                                                        220
     ?Subroutine2                                         5
     ?Subroutine68                                        6
     ??Subroutine100_0                                    8
     ?Subroutine45                                        7
     ??Subroutine101_0                                    6
     ?Subroutine41                                        8
     ??Subroutine102_0                                    4
     ?Subroutine91                                       10
     ??Subroutine105_0                                   13
     ?Subroutine85                                       11
     ?Subroutine40                                       12
     ?Subroutine34                                        8
     ?Subroutine81                                       11
     ?Subroutine99                                        6
     ?Subroutine64                                        2
     ??Subroutine124_0                                    2
     ??Subroutine125_0                                    4
     ??Subroutine126_0                                    4
     ??Subroutine135_0                                    5
     zclGeneral_KeyEstablish_Send_InitiateKeyEstablishment
                                                        195
     ?Subroutine3                                         5
     ?Subroutine73                                        2
     ??Subroutine103_0                                    2
     ??Subroutine104_0                                    6
     ?Subroutine67                                        2
     ??Subroutine109_0                                    6
     ?Subroutine18                                       11
     zclGeneral_KeyEstablish_Send_EphemeralDataReq
                                                         71
     ?Subroutine10                                        7
     ??Subroutine106_0                                   11
     ?Subroutine75                                        4
     ??Subroutine108_0                                    2
     ?Subroutine31                                        9
     ?Subroutine0                                         8
     zclGeneral_KeyEstablish_Send_ConfirmKey
                                                         73
     zclGeneral_KeyEstablish_Send_TerminateKeyEstablishment
                                                        165
     zclGeneral_KeyEstablish_Send_InitiateKeyEstablishmentRsp
                                                        192
     zclGeneral_KeyEstablish_Send_EphemeralDataRsp
                                                         71
     zclGeneral_KeyEstablish_Send_ConfirmKeyRsp
                                                         71
     zclGeneral_KeyEstablishment_RegYieldCB
                                                         27
     ?Subroutine4                                         7
     zclGeneral_KeyEstablish_HdlIncoming
                                                        187
     ?Subroutine5                                         5
     ?Subroutine42                                        8
     ??Subroutine113_0                                    4
     ??Subroutine128_0                                    5
     zclGeneral_ProcessInCmd_InitiateKeyEstablish
                                                        536
     ??Subroutine112_0                                    6
     ?Subroutine66                                        9
     ?Subroutine58                                       12
     ?Subroutine56                                       11
     ?Subroutine49                                       20
     ?Subroutine43                                       10
     ?Subroutine37                                       12
     ?Subroutine36                                        4
     ?Subroutine83                                        6
     ?Subroutine96                                       10
     ?Subroutine33                                       13
     ?Subroutine82                                        5
     ?Subroutine30                                       20
     ?Subroutine29                                        8
     ??Subroutine114_0                                    6
     ?Subroutine95                                        4
     ?Subroutine98                                       11
     ?Subroutine15                                        7
     ?Subroutine13                                        4
     ?Subroutine78                                       18
     ?Subroutine97                                        5
     ??Subroutine118_0                                    8
     ??Subroutine121_0                                    9
     ??Subroutine122_0                                    5
     ?Subroutine65                                        7
     ?Subroutine90                                       13
     ?Subroutine59                                        4
     ??Subroutine127_0                                    4
     ??Subroutine131_0                                    2
     ??Subroutine132_0                                    9
     ?Subroutine19                                        8
     ??Subroutine137_0                                    7
     zclGeneral_ProcessInCmd_EphemeralDataReq
                                                        198
     ?Subroutine25                                        8
     ??Subroutine110_0                                   13
     ?Subroutine52                                        6
     ?Subroutine84                                       11
     ?Subroutine86                                       18
     ?Subroutine48                                       10
     ?Subroutine24                                       26
     ?Subroutine79                                        9
     ?Subroutine50                                        6
     ?Subroutine22                                        4
     ??Subroutine120_0                                    6
     ?Subroutine94                                       11
     ?Subroutine71                                        7
     ??Subroutine129_0                                    9
     ?Subroutine23                                        7
     ??Subroutine130_0                                    5
     ?Subroutine17                                        5
     ?Subroutine92                                        3
     ??Subroutine134_0                                    3
     zclGeneral_ProcessInCmd_InitiateKeyEstablishRsp
                                                        585
     ??Subroutine111_0                                    4
     ??Subroutine115_0                                    4
     ?Subroutine74                                        4
     ?Subroutine38                                       13
     ?Subroutine27                                       12
     ?Subroutine80                                        4
     ?Subroutine21                                       10
     ?Subroutine35                                        8
     ?Subroutine7                                         8
     zclGeneral_ProcessInCmd_EphemeralDataRsp
                                                        132
     ?Subroutine51                                        1
     ??Subroutine116_0                                    5
     ?Subroutine20                                        8
     zclGeneral_ProcessInCmd_ConfirmKey
                                                        310
     ?Subroutine9                                         3
     ??Subroutine117_0                                    5
     ?Subroutine77                                       12
     ?Subroutine54                                        7
     ??Subroutine119_0                                   10
     ?Subroutine53                                        6
     ?Subroutine28                                        9
     zclGeneral_ProcessInCmd_ConfirmKeyRsp
                                                        236
     ?Subroutine55                                        5
     ?Subroutine26                                       13
     ?Subroutine12                                       11
     ?Subroutine87                                       18
     zclGeneral_ProcessInCmd_TerminateKeyEstablish
                                                        109
     ?Subroutine44                                       13
     zclGeneral_InitiateKeyEstablish_Cmd_CalculateKey
                                                        431
     ?Subroutine6                                         3
     ?Subroutine69                                        2
     ??Subroutine123_0                                   10
     ?Subroutine72                                       13
     ?Subroutine70                                        6
     ?Subroutine57                                        7
     ?Subroutine47                                       23
     ?Subroutine39                                       17
     ?Subroutine88                                        7
     ?Subroutine32                                       19
     ?Subroutine14                                        1
     ??Subroutine133_0                                   11
     ?Subroutine11                                       12
     zclGeneral_InitiateKeyEstablish_Rsp_CalculateKey
                                                        473
     zclGeneral_GetKeyEstablishRecIndex
                                                         43
     zclGeneral_GetKeyEstablishRecIndex_State
                                                         40
     zclGeneral_AddKeyEstablishRec                      165
     ?Subroutine60                                        4
     ?Subroutine89                                       14
     ?Subroutine16                                       12
     zclGeneral_ResetKeyEstablishRec
                                                        126
     ?Subroutine63                                        7
     zclGeneral_KeyEstablishment_GetRandom
                                                         67
     zclGeneral_KeyEstablishment_HashFunc
                                                         49
     ??Subroutine138_0                                   12
     ?Subroutine8                                         3
     zclGeneral_KeyEstablishment_KeyDeriveFunction
                                                        190
     ?Subroutine76                                        4
     ?Subroutine93                                        6
     zclGeneral_KeyEstablishment_GenerateMAC
                                                        352
     ?Subroutine62                                        7
     ??Subroutine136_0                                   11
     ?Subroutine61                                        6
     ?Subroutine46                                       12
     zclGeneral_KeyEstablishment_ECDSASign
                                                        207
     zclGeneral_KeyEstablishment_ECDSAVerify
                                                        141
     ?<Initializer for zclKeyEstablish_Options>           3
     ?<Initializer for zclKeyEstablish_SimpleDesc>       12
     ?<Initializer for zclKeyEstablish_Ep>                6
     ??zclGeneral_KeyEstablish_Init?relay                 6
     ??zclKeyEstablish_event_loop?relay                   6
     ??zclGeneral_KeyEstablish_InitiateKeyEstablishm      6
     ??zclGeneral_KeyEstablish_Send_InitiateKeyEstab      6
     ??zclGeneral_KeyEstablish_Send_EphemeralDataReq      6
     ??zclGeneral_KeyEstablish_Send_ConfirmKey?relay      6
     ??zclGeneral_KeyEstablish_Send_TerminateKeyEsta      6
     ??zclGeneral_KeyEstablish_Send_InitiateKeyEstab_1    6
     ??zclGeneral_KeyEstablish_Send_EphemeralDataRsp      6
     ??zclGeneral_KeyEstablish_Send_ConfirmKeyRsp?re      6
     ??zclGeneral_KeyEstablishment_RegYieldCB?relay       6
     ??zclGeneral_KeyEstablish_HdlIncoming?relay          6
     ??zclGeneral_ProcessInCmd_InitiateKeyEstablish?      6
     ??zclGeneral_ProcessInCmd_EphemeralDataReq?rela      6
     ??zclGeneral_ProcessInCmd_InitiateKeyEstablishR      6
     ??zclGeneral_ProcessInCmd_EphemeralDataRsp?rela      6
     ??zclGeneral_ProcessInCmd_ConfirmKey?relay           6
     ??zclGeneral_ProcessInCmd_ConfirmKeyRsp?relay        6
     ??zclGeneral_ProcessInCmd_TerminateKeyEstablish      6
     ??zclGeneral_InitiateKeyEstablish_Cmd_Calculate      6
     ??zclGeneral_InitiateKeyEstablish_Rsp_Calculate      6
     ??zclGeneral_GetKeyEstablishRecIndex?relay           6
     ??zclGeneral_GetKeyEstablishRecIndex_State?rela      6
     ??zclGeneral_AddKeyEstablishRec?relay                6
     ??zclGeneral_ResetKeyEstablishRec?relay              6
     ??zclGeneral_KeyEstablishment_GetRandom?relay        6
     ??zclGeneral_KeyEstablishment_HashFunc?relay         6
     ??zclGeneral_KeyEstablishment_KeyDeriveFunction      6
     ??zclGeneral_KeyEstablishment_GenerateMAC?relay      6
     ??zclGeneral_KeyEstablishment_ECDSASign?relay        6
     ??zclGeneral_KeyEstablishment_ECDSAVerify?relay      6
     ?<Constant {0, 0, 0, 1}>                             4
     __Constant_fffffff0                                  4
     __Constant_11                                        4

 
 7 007 bytes in segment BANKED_CODE
   186 bytes in segment BANK_RELAYS
    21 bytes in segment XDATA_I
    21 bytes in segment XDATA_ID
    16 bytes in segment XDATA_ROM_C
    83 bytes in segment XDATA_Z
 
 7 214 bytes of CODE  memory
     8 bytes of CONST memory (+ 8 bytes shared)
   104 bytes of XDATA memory

Errors: none
Warnings: none
